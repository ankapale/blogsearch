<!DOCTYPE html>
<html lang="en-US" class="no-js no-svg">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="profile" href="http://gmpg.org/xfn/11">
<script>(function(html){html.className = html.className.replace(/\bno-js\b/,'js')})(document.documentElement);</script>
<title>Recurrent Neural Networks Tutorial, Part 2 – Implementing a RNN with Python, Numpy and Theano &#8211; Page 18 &#8211; WildML</title>
<link rel='dns-prefetch' href='//s0.wp.com' />
<link rel='dns-prefetch' href='//secure.gravatar.com' />
<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link href='https://fonts.gstatic.com' crossorigin rel='preconnect' />
<link rel="alternate" type="application/rss+xml" title="WildML &raquo; Feed" href="http://www.wildml.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="WildML &raquo; Comments Feed" href="http://www.wildml.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="WildML &raquo; Recurrent Neural Networks Tutorial, Part 2 – Implementing a RNN with Python, Numpy and Theano Comments Feed" href="http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano/feed/" />
<script type="text/javascript">
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/www.wildml.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.1.1"}};
!function(a,b,c){function d(a,b){var c=String.fromCharCode;l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,a),0,0);var d=k.toDataURL();l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,b),0,0);var e=k.toDataURL();return d===e}function e(a){var b;if(!l||!l.fillText)return!1;switch(l.textBaseline="top",l.font="600 32px Arial",a){case"flag":return!(b=d([55356,56826,55356,56819],[55356,56826,8203,55356,56819]))&&(b=d([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]),!b);case"emoji":return b=d([55358,56760,9792,65039],[55358,56760,8203,9792,65039]),!b}return!1}function f(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var g,h,i,j,k=b.createElement("canvas"),l=k.getContext&&k.getContext("2d");for(j=Array("flag","emoji"),c.supports={everything:!0,everythingExceptFlag:!0},i=0;i<j.length;i++)c.supports[j[i]]=e(j[i]),c.supports.everything=c.supports.everything&&c.supports[j[i]],"flag"!==j[i]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[j[i]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(h=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",h,!1),a.addEventListener("load",h,!1)):(a.attachEvent("onload",h),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),g=c.source||{},g.concatemoji?f(g.concatemoji):g.wpemoji&&g.twemoji&&(f(g.twemoji),f(g.wpemoji)))}(window,document,window._wpemojiSettings);
</script>
<style type="text/css">
img.wp-smiley,
img.emoji {
display: inline !important;
border: none !important;
box-shadow: none !important;
height: 1em !important;
width: 1em !important;
margin: 0 .07em !important;
vertical-align: -0.1em !important;
background: none !important;
padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.wildml.com/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=_2.7.2_beta' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-github-css'  href='http://www.wildml.com/wp-content/plugins/crayon-syntax-highlighter/themes/github/github.css?ver=_2.7.2_beta' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.wildml.com/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=_2.7.2_beta' type='text/css' media='all' />
<link rel='stylesheet' id='wp-block-library-css'  href='http://www.wildml.com/wp-includes/css/dist/block-library/style.min.css?ver=5.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-block-library-theme-css'  href='http://www.wildml.com/wp-includes/css/dist/block-library/theme.min.css?ver=5.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='twentyseventeen-fonts-css'  href='https://fonts.googleapis.com/css?family=Libre+Franklin%3A300%2C300i%2C400%2C400i%2C600%2C600i%2C800%2C800i&#038;subset=latin%2Clatin-ext' type='text/css' media='all' />
<link rel='stylesheet' id='twentyseventeen-style-css'  href='http://www.wildml.com/wp-content/themes/twentyseventeen/style.css?ver=5.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='twentyseventeen-block-style-css'  href='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/css/blocks.css?ver=1.1' type='text/css' media='all' />
<!--[if lt IE 9]>
<link rel='stylesheet' id='twentyseventeen-ie8-css'  href='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/css/ie8.css?ver=1.0' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.wildml.com/wp-content/plugins/jetpack/css/jetpack.css?ver=7.1.1' type='text/css' media='all' />
<script type='text/javascript' src='http://www.wildml.com/wp-includes/js/jquery/jquery.js?ver=1.12.4'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","ajaxurl":"http:\/\/www.wildml.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=_2.7.2_beta'></script>
<!--[if lt IE 9]>
<script type='text/javascript' src='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/js/html5.js?ver=3.7.3'></script>
<![endif]-->
<link rel='https://api.w.org/' href='http://www.wildml.com/wp-json/' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.wildml.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.wildml.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Recurrent Neural Networks Tutorial, Part 1 &#8211; Introduction to RNNs' href='http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns/' />
<link rel='next' title='Recurrent Neural Networks Tutorial, Part 3 &#8211; Backpropagation Through Time and Vanishing Gradients' href='http://www.wildml.com/2015/10/recurrent-neural-networks-tutorial-part-3-backpropagation-through-time-and-vanishing-gradients/' />
<meta name="generator" content="WordPress 5.1.1" />
<link rel="canonical" href="http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano/18/" />
<link rel='shortlink' href='https://wp.me/p6GvDI-41' />
<link rel="alternate" type="application/json+oembed" href="http://www.wildml.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.wildml.com%2F2015%2F09%2Frecurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano%2F" />
<link rel="alternate" type="text/xml+oembed" href="http://www.wildml.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.wildml.com%2F2015%2F09%2Frecurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano%2F&#038;format=xml" />
<link rel='dns-prefetch' href='//v0.wordpress.com'/>
<style type='text/css'>img#wpstats{display:none}</style><link rel="pingback" href="http://www.wildml.com/xmlrpc.php">
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Recurrent Neural Networks Tutorial, Part 2 – Implementing a RNN with Python, Numpy and Theano" />
<meta property="og:url" content="http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano/" />
<meta property="og:description" content="This the second part of the Recurrent Neural Network Tutorial. The first part is here. Code to follow along is on Github. In this part we will implement a full Recurrent Neural Network from scratch…" />
<meta property="article:published_time" content="2015-09-30T13:19:19+00:00" />
<meta property="article:modified_time" content="2016-01-10T09:17:27+00:00" />
<meta property="og:site_name" content="WildML" />
<meta property="og:image" content="http://www.wildml.com/wp-content/uploads/2015/09/rnn.jpg" />
<meta property="og:image:width" content="795" />
<meta property="og:image:height" content="319" />
<meta property="og:image:alt" content="A recurrent neural network and the unfolding in time of the computation involved in its forward computation." />
<meta property="og:locale" content="en_US" />
<meta name="twitter:text:title" content="Recurrent Neural Networks Tutorial, Part 2 – Implementing a RNN with Python, Numpy and Theano" />
<meta name="twitter:card" content="summary" />
<!-- End Jetpack Open Graph Tags -->
<style type="text/css" id="wp-custom-css">
/*
You can add your own CSS here.
Click the help icon above to learn more.
*/
@import url('https://fonts.googleapis.com/css?family=Lora');
@media screen and (min-width: 48em) {
#content > .wrap {
max-width: 100%;
font-family: Lora;
}
#content #primary { 
width: 65%;
font-size: 1.1em;
line-height: 1.7em
}
#content #secondary { 
width: 25%;
font-size: 1.1em;
}
div[id^=highlighter] {
font-size: 0.8em !important
}
ul, ol {
padding: 1em;
}
}
.entry-content ul {
padding: 0 0 0 2em
}
/*
CSS Migrated from Jetpack:
*/
/*
CSS Migrated from Jetpack:
*/
</style>
</head>
<body class="post-template-default single single-post postid-249 single-format-standard wp-embed-responsive paged-18 single-paged-18 has-sidebar colors-light">
<div id="page" class="site">
<a class="skip-link screen-reader-text" href="#content">Skip to content</a>
<header id="masthead" class="site-header" role="banner">
<div class="custom-header">
<div class="custom-header-media">
</div>
<div class="site-branding">
<div class="wrap">
<div class="site-branding-text">
<p class="site-title"><a href="http://www.wildml.com/" rel="home">WildML</a></p>
<p class="site-description">Artificial Intelligence, Deep Learning, and NLP</p>
</div><!-- .site-branding-text -->
</div><!-- .wrap -->
</div><!-- .site-branding -->
</div><!-- .custom-header -->
<div class="navigation-top">
<div class="wrap">
<nav id="site-navigation" class="main-navigation" role="navigation" aria-label="Top Menu">
<button class="menu-toggle" aria-controls="top-menu" aria-expanded="false">
<svg class="icon icon-bars" aria-hidden="true" role="img"> <use href="#icon-bars" xlink:href="#icon-bars"></use> </svg><svg class="icon icon-close" aria-hidden="true" role="img"> <use href="#icon-close" xlink:href="#icon-close"></use> </svg>Menu	</button>
<div class="menu-header-menu-container"><ul id="top-menu" class="menu"><li id="menu-item-655" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-655"><a href="http://www.wildml.com">Home</a></li>
<li id="menu-item-821" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-821"><a href="https://www.getrevue.co/profile/wildml">AI Newsletter</a></li>
<li id="menu-item-694" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-694"><a href="http://www.wildml.com/deep-learning-glossary/">Deep Learning Glossary</a></li>
<li id="menu-item-732" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-732"><a href="mailto:dennybritz@gmail.com">Contact</a></li>
<li id="menu-item-654" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-654"><a href="http://www.wildml.com/about/">About</a></li>
</ul></div>
</nav><!-- #site-navigation -->
</div><!-- .wrap -->
</div><!-- .navigation-top -->
</header><!-- #masthead -->
<div class="site-content-contain">
<div id="content" class="site-content">
<div class="wrap">
<div id="primary" class="content-area">
<main id="main" class="site-main" role="main">
<article id="post-249" class="post-249 post type-post status-publish format-standard hentry category-deep-learning category-gpu category-language-modeling category-recurrent-neural-networks">
<header class="entry-header">
<div class="entry-meta"><span class="posted-on"><span class="screen-reader-text">Posted on</span> <a href="http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano/" rel="bookmark"><time class="entry-date published" datetime="2015-09-30T06:19:19-07:00">September 30, 2015</time><time class="updated" datetime="2016-01-10T02:17:27-07:00">January 10, 2016</time></a></span><span class="byline"> by <span class="author vcard"><a class="url fn n" href="http://www.wildml.com/author/dennybritz/">Denny Britz</a></span></span></div><!-- .entry-meta --><h1 class="entry-title">Recurrent Neural Networks Tutorial, Part 2 – Implementing a RNN with Python, Numpy and Theano</h1>	</header><!-- .entry-header -->
<div class="entry-content">
<p><strong>This the second part of the Recurrent Neural Network Tutorial. <a href="http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns/">The first part is here</a>.</strong></p>
<p><strong><a href="https://github.com/dennybritz/rnn-tutorial-rnnlm">Code to follow along is on Github.</a></strong></p>
<p>In this part we will implement a full Recurrent Neural Network from scratch using Python and optimize our implementation using <a href="http://deeplearning.net/software/theano/">Theano</a>, a library to perform operations on a GPU. <strong><a href="https://github.com/dennybritz/rnn-tutorial-rnnlm/">The full code is available on Github</a></strong>. I will skip over some boilerplate code that is not essential to understanding Recurrent Neural Networks, but all of that is also on Github.</p>
<p><span id="more-249"></span></p>
<h3>Language Modeling</h3>
<p>Our goal is to build a <a href="https://en.wikipedia.org/wiki/Language_model">Language Model</a> using a Recurrent Neural Network. Here&#8217;s what that means. Let&#8217;s say we have sentence of <img src="//s0.wp.com/latex.php?latex=m&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="m" title="m" class="latex" /> words. A language model allows us to predict the probability of observing the sentence (in a given dataset) as:</p>
<p><img src="//s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D++P%28w_1%2C...%2Cw_m%29+%3D+%5Cprod_%7Bi%3D1%7D%5E%7Bm%7D+P%28w_i+%5Cmid+w_1%2C...%2C+w_%7Bi-1%7D%29++%5Cend%7Baligned%7D&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="&#92;begin{aligned}  P(w_1,...,w_m) = &#92;prod_{i=1}^{m} P(w_i &#92;mid w_1,..., w_{i-1})  &#92;end{aligned}" title="&#92;begin{aligned}  P(w_1,...,w_m) = &#92;prod_{i=1}^{m} P(w_i &#92;mid w_1,..., w_{i-1})  &#92;end{aligned}" class="latex" /></p>
<p>In words, the probability of a sentence is the product of probabilities of each word given the words that came before it. So, the probability of the sentence &#8220;He went to buy some chocolate&#8221; would be the probability of &#8220;chocolate&#8221; given &#8220;He went to buy some&#8221;, multiplied by the probability of &#8220;some&#8221; given &#8220;He went to buy&#8221;, and so on.</p>
<p>Why is that useful? Why would we want to assign a probability to observing a sentence?</p>
<p>First, such a model can be used as a scoring mechanism. For example, a Machine Translation system typically generates multiple candidates for an input sentence. You could use a language model to pick the most probable sentence. Intuitively, the most probable sentence is likely to be grammatically correct. Similar scoring happens in speech recognition systems.</p>
<p>But solving the Language Modeling problem also has a cool side effect. Because we can predict the probability of a word given the preceding words, we are able to generate new text. It&#8217;s a <em>generative model</em>. Given an existing sequence of words we sample a next word from the predicted probabilities, and repeat the process until we have a full sentence. Andrej Karparthy <a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/">has a great post</a> that demonstrates what language models are capable of. His models are trained on single characters as opposed to full words, and can generate anything from Shakespeare to Linux Code.</p>
<p>Note that in the above equation the probability of each word is conditioned on <strong>all</strong> previous words. In practice, many models have a hard time representing such long-term dependencies due to computational or memory constraints. They are typically limited to looking at only a few of the previous words. RNNs can, in theory, capture such long-term dependencies, but in practice it&#8217;s a bit more complex. We&#8217;ll explore that in a later post.</p>
<h3>Training Data and Preprocessing</h3>
<p>To train our language model we need text to learn from. Fortunately we don&#8217;t need any labels to train a language model, just raw text. I downloaded 15,000 longish reddit comments from a <a href="https://bigquery.cloud.google.com/table/fh-bigquery:reddit_comments.2015_08">dataset available on Google&#8217;s BigQuery</a>. Text generated by our model will sound like reddit commenters (hopefully)! But as with most Machine Learning projects we first need to do some pre-processing to get our data into the right format.</p>
<h4>1. Tokenize Text</h4>
<p>We have raw text, but we want to make predictions on a per-word basis. This means we must <em>tokenize</em> our comments into sentences, and sentences into words. We could just split each of the comments by spaces, but that wouldn&#8217;t handle punctuation properly. The sentence &#8220;He left!&#8221; should be 3 tokens: &#8220;He&#8221;, &#8220;left&#8221;, &#8220;!&#8221;. We&#8217;ll use <a href="http://www.nltk.org/">NLTK&#8217;s</a> <code>word_tokenize</code> and <code>sent_tokenize</code> methods, which do most of the hard work for us.</p>
<h4>2. Remove infrequent words</h4>
<p>Most words in our text will only appear one or two times. It&#8217;s a good idea to remove these infrequent words. Having a huge vocabulary will make our model slow to train (we&#8217;ll talk about why that is later), and because we don&#8217;t have a lot of contextual examples for such words we wouldn&#8217;t be able to learn how to use them correctly anyway. That&#8217;s quite similar to how humans learn. To really understand how to appropriately use a word you need to have seen it in different contexts.</p>
<p>In our code we limit our vocabulary to the <code>vocabulary_size</code> most common words (which I set to 8000, but feel free to change it). We replace all words not included in our vocabulary by <code>UNKNOWN_TOKEN</code>. For example, if we don&#8217;t include the word &#8220;nonlinearities&#8221; in our vocabulary, the sentence &#8220;nonlineraties are important in neural networks&#8221; becomes &#8220;UNKNOWN_TOKEN are important in Neural Networks&#8221;. The word <code>UNKNOWN_TOKEN</code> will become part of our vocabulary and we will predict it just like any other word. When we generate new text we can replace <code>UNKNOWN_TOKEN</code> again, for example by taking a randomly sampled word not in our vocabulary, or we could just generate sentences until we get one that doesn&#8217;t contain an unknown token.</p>
<h4>3. Prepend special start and end tokens</h4>
<p>We also want to learn which words tend start and end a sentence. To do this we prepend a special <code>SENTENCE_START</code> token, and append a special <code>SENTENCE_END</code> token to each sentence. This allows us to ask: Given that the first token is <code>SENTENCE_START</code>, what is the likely next word (the actual first word of the sentence)?</p>
<h4>4. Build training data matrices</h4>
<p>The input to our Recurrent Neural Networks are vectors, not strings. So we create a mapping between words and indices, <code>index_to_word</code>, and <code>word_to_index</code>. For example,  the word &#8220;friendly&#8221; may be at index 2001. A training example <img src="//s0.wp.com/latex.php?latex=x&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="x" title="x" class="latex" /> may look like <code>[0, 179, 341, 416]</code>, where 0 corresponds to <code>SENTENCE_START</code>. The corresponding label <img src="//s0.wp.com/latex.php?latex=y&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="y" title="y" class="latex" /> would be <code>[179, 341, 416, 1]</code>. Remember that our goal is to predict the next word, so y is just the x vector shifted by one position with the last element being the <code>SENTENCE_END</code> token. In other words, the correct prediction for word <code>179</code> above would be <code>341</code>, the actual next word.</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d6480c277601840" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-6">6</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-8">8</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-10">10</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-12">12</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-14">14</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-16">16</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-18">18</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-20">20</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-22">22</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-24">24</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-26">26</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-28">28</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-30">30</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-32">32</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-34">34</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-36">36</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-38">38</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-40">40</div><div class="crayon-num" data-line="crayon-5c8ca78d6480c277601840-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6480c277601840-42">42</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-1"><span class="crayon-v">vocabulary_size</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">8000</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-2"><span class="crayon-v">unknown_token</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">UNKNOWN_TOKEN</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-3"><span class="crayon-v">sentence_start_token</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">SENTENCE_START</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-4"><span class="crayon-v">sentence_end_token</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">SENTENCE_END</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-6"><span class="crayon-c"># Read the data and append SENTENCE_START and SENTENCE_END tokens</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-7"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Reading </span><span class="crayon-k ">CSV</span><span class="crayon-h"> </span><span class="crayon-k ">file</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-8"><span class="crayon-st">with</span><span class="crayon-h"> </span><span class="crayon-k ">open</span><span class="crayon-sy">(</span><span class="crayon-s">'data/reddit-comments-2015-08.csv'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'rb'</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-v">f</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">reader</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">csv</span><span class="crayon-sy">.</span><span class="crayon-e">reader</span><span class="crayon-sy">(</span><span class="crayon-v">f</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">skipinitialspace</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">reader</span><span class="crayon-sy">.</span><span class="crayon-k ">next</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Split full comments into sentences</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">sentences</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">itertools</span><span class="crayon-sy">.</span><span class="crayon-e">chain</span><span class="crayon-sy">(</span><span class="crayon-o">*</span><span class="crayon-sy">[</span><span class="crayon-v">nltk</span><span class="crayon-sy">.</span><span class="crayon-e">sent_tokenize</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">.</span><span class="crayon-e">decode</span><span class="crayon-sy">(</span><span class="crayon-s">'utf-8'</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">lower</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">x</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">reader</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Append SENTENCE_START and SENTENCE_END</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">sentences</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-o">%</span><span class="crayon-v">s</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">s</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">s</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">sentence_start_token</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">sentence_end_token</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">x</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">sentences</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-15"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">Parsed</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-i">d</span><span class="crayon-h"> </span><span class="crayon-v">sentences</span><span class="crayon-sy">.</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">sentences</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-17"><span class="crayon-c"># Tokenize the sentences into words</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-18"><span class="crayon-v">tokenized_sentences</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">nltk</span><span class="crayon-sy">.</span><span class="crayon-e">word_tokenize</span><span class="crayon-sy">(</span><span class="crayon-v">sent</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">sent </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">sentences</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-19">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-20"><span class="crayon-c"># Count the word frequencies</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-21"><span class="crayon-v">word_freq</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nltk</span><span class="crayon-sy">.</span><span class="crayon-e">FreqDist</span><span class="crayon-sy">(</span><span class="crayon-k ">itertools</span><span class="crayon-sy">.</span><span class="crayon-e">chain</span><span class="crayon-sy">(</span><span class="crayon-o">*</span><span class="crayon-v">tokenized_sentences</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-22"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">Found</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-i">d</span><span class="crayon-h"> </span><span class="crayon-e">unique </span><span class="crayon-e">words </span><span class="crayon-v">tokens</span><span class="crayon-sy">.</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">word_freq</span><span class="crayon-sy">.</span><span class="crayon-e">items</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-23">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-24"><span class="crayon-c"># Get the most common words and build index_to_word and word_to_index vectors</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-25"><span class="crayon-v">vocab</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">word_freq</span><span class="crayon-sy">.</span><span class="crayon-e">most_common</span><span class="crayon-sy">(</span><span class="crayon-v">vocabulary_size</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-26"><span class="crayon-v">index_to_word</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">x</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">x</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">vocab</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-27"><span class="crayon-v">index_to_word</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">unknown_token</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-28"><span class="crayon-v">word_to_index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">dict</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-sy">(</span><span class="crayon-k ">w</span><span class="crayon-sy">,</span><span class="crayon-v">i</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-k ">w</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">index_to_word</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-29">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-30"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Using </span><span class="crayon-e">vocabulary </span><span class="crayon-v">size</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">d</span><span class="crayon-sy">.</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-e">vocabulary_size</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-31"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">The </span><span class="crayon-e">least </span><span class="crayon-e">frequent </span><span class="crayon-e">word </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">our </span><span class="crayon-e">vocabulary </span><span class="crayon-st">is</span><span class="crayon-h"> </span><span class="crayon-s">'%s'</span><span class="crayon-h"> </span><span class="crayon-st">and</span><span class="crayon-h"> </span><span class="crayon-v">appeared</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-i">d</span><span class="crayon-h"> </span><span class="crayon-v">times</span><span class="crayon-sy">.</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">vocab</span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">vocab</span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-32">&nbsp;</div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-33"><span class="crayon-c"># Replace all words not in our vocabulary with the unknown token</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-34"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">sent </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">tokenized_sentences</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-35"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">tokenized_sentences</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-k ">w</span><span class="crayon-h"> </span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-k ">w</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">word_to_index </span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-e">unknown_token </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-k ">w</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">sent</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-36">&nbsp;</div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-37"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">\</span><span class="crayon-e">nExample </span><span class="crayon-v">sentence</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-s">'%s'</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-v">sentences</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-38"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">\</span><span class="crayon-e">nExample </span><span class="crayon-e">sentence </span><span class="crayon-e">after </span><span class="crayon-v">Pre</span><span class="crayon-o">-</span><span class="crayon-v">processing</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-s">'%s'</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-v">tokenized_sentences</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-39">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-40"><span class="crayon-c"># Create the training data</span></div><div class="crayon-line" id="crayon-5c8ca78d6480c277601840-41"><span class="crayon-v">X_train</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">asarray</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-sy">[</span><span class="crayon-v">word_to_index</span><span class="crayon-sy">[</span><span class="crayon-k ">w</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-k ">w</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">sent</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">sent </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">tokenized_sentences</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6480c277601840-42"><span class="crayon-v">y_train</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">asarray</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-sy">[</span><span class="crayon-v">word_to_index</span><span class="crayon-sy">[</span><span class="crayon-k ">w</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-k ">w</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">sent</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-o">:</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">sent </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">tokenized_sentences</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0039 seconds] -->
<p></p>
<p>Here&#8217;s an actual training example from our text:</p>
<pre class="crayon-plain-tag">x:
SENTENCE_START what are n't you understanding about this ? !
[0, 51, 27, 16, 10, 856, 53, 25, 34, 69]

y:
what are n't you understanding about this ? ! SENTENCE_END
[51, 27, 16, 10, 856, 53, 25, 34, 69, 1]</pre>
<h3>Building the RNN</h3>
<p>For a general overview of RNNs take a look at <a href="http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns/">first part of the tutorial</a>.</p>
<figure id="attachment_110" aria-describedby="caption-attachment-110" style="width: 795px" class="wp-caption alignnone"><a href="http://www.wildml.com/wp-content/uploads/2015/09/rnn.jpg"><img class="size-full wp-image-110" src="http://www.wildml.com/wp-content/uploads/2015/09/rnn.jpg" alt="A recurrent neural network and the unfolding in time of the computation involved in its forward computation." width="795" height="319" srcset="http://www.wildml.com/wp-content/uploads/2015/09/rnn.jpg 795w, http://www.wildml.com/wp-content/uploads/2015/09/rnn-300x120.jpg 300w" sizes="(max-width: 767px) 89vw, (max-width: 1000px) 54vw, (max-width: 1071px) 543px, 580px" /></a><figcaption id="caption-attachment-110" class="wp-caption-text">A recurrent neural network and the unfolding in time of the computation involved in its forward computation.</figcaption></figure>
<p>Let&#8217;s get concrete and see what the RNN for our language model looks like. The input <img src="//s0.wp.com/latex.php?latex=x&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="x" title="x" class="latex" /> will be a sequence of words (just like the example printed above) and each <img src="//s0.wp.com/latex.php?latex=x_t&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="x_t" title="x_t" class="latex" /> is a single word. But there&#8217;s one more thing: Because of how matrix multiplication works we can&#8217;t simply use a word index (like 36) as an input. Instead, we represent each word as a <em>one-hot vector</em> of size <code>vocabulary_size</code>. For example, the word with index 36 would be the vector of all 0&#8217;s and a 1 at position 36. So, each <img src="//s0.wp.com/latex.php?latex=x_t&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="x_t" title="x_t" class="latex" /> will become a vector, and <img src="//s0.wp.com/latex.php?latex=x&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="x" title="x" class="latex" /> will be a matrix, with each row representing a word. We&#8217;ll perform this transformation in our Neural Network code instead of doing it in the pre-processing. The output of our network <img src="//s0.wp.com/latex.php?latex=o&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="o" title="o" class="latex" /> has a similar format. Each <img src="//s0.wp.com/latex.php?latex=o_t&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="o_t" title="o_t" class="latex" /> is a vector of <code>vocabulary_size</code> elements, and each element represents the probability of that word being the next word in the sentence.</p>
<p>Let&#8217;s recap the equations for the RNN from the first part of the tutorial:</p>
<p><img src="//s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D++s_t+%26%3D+%5Ctanh%28Ux_t+%2B+Ws_%7Bt-1%7D%29+%5C%5C++o_t+%26%3D+%5Cmathrm%7Bsoftmax%7D%28Vs_t%29++%5Cend%7Baligned%7D++&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="&#92;begin{aligned}  s_t &amp;= &#92;tanh(Ux_t + Ws_{t-1}) &#92;&#92;  o_t &amp;= &#92;mathrm{softmax}(Vs_t)  &#92;end{aligned}  " title="&#92;begin{aligned}  s_t &amp;= &#92;tanh(Ux_t + Ws_{t-1}) &#92;&#92;  o_t &amp;= &#92;mathrm{softmax}(Vs_t)  &#92;end{aligned}  " class="latex" /></p>
<p>I always find it useful to write down the dimensions of the matrices and vectors. Let&#8217;s assume we pick a vocabulary size <img src="//s0.wp.com/latex.php?latex=C+%3D+8000&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="C = 8000" title="C = 8000" class="latex" /> and a hidden layer size <img src="//s0.wp.com/latex.php?latex=H+%3D+100&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="H = 100" title="H = 100" class="latex" />. You can think of the hidden layer size as the &#8220;memory&#8221; of our network. Making it bigger allows us to learn more complex patterns, but also results in additional computation. Then we have:</p>
<p><img src="//s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D++x_t+%26+%5Cin+%5Cmathbb%7BR%7D%5E%7B8000%7D+%5C%5C++o_t+%26+%5Cin+%5Cmathbb%7BR%7D%5E%7B8000%7D+%5C%5C++s_t+%26+%5Cin+%5Cmathbb%7BR%7D%5E%7B100%7D+%5C%5C++U+%26+%5Cin+%5Cmathbb%7BR%7D%5E%7B100+%5Ctimes+8000%7D+%5C%5C++V+%26+%5Cin+%5Cmathbb%7BR%7D%5E%7B8000+%5Ctimes+100%7D+%5C%5C++W+%26+%5Cin+%5Cmathbb%7BR%7D%5E%7B100+%5Ctimes+100%7D+%5C%5C++%5Cend%7Baligned%7D++&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="&#92;begin{aligned}  x_t &amp; &#92;in &#92;mathbb{R}^{8000} &#92;&#92;  o_t &amp; &#92;in &#92;mathbb{R}^{8000} &#92;&#92;  s_t &amp; &#92;in &#92;mathbb{R}^{100} &#92;&#92;  U &amp; &#92;in &#92;mathbb{R}^{100 &#92;times 8000} &#92;&#92;  V &amp; &#92;in &#92;mathbb{R}^{8000 &#92;times 100} &#92;&#92;  W &amp; &#92;in &#92;mathbb{R}^{100 &#92;times 100} &#92;&#92;  &#92;end{aligned}  " title="&#92;begin{aligned}  x_t &amp; &#92;in &#92;mathbb{R}^{8000} &#92;&#92;  o_t &amp; &#92;in &#92;mathbb{R}^{8000} &#92;&#92;  s_t &amp; &#92;in &#92;mathbb{R}^{100} &#92;&#92;  U &amp; &#92;in &#92;mathbb{R}^{100 &#92;times 8000} &#92;&#92;  V &amp; &#92;in &#92;mathbb{R}^{8000 &#92;times 100} &#92;&#92;  W &amp; &#92;in &#92;mathbb{R}^{100 &#92;times 100} &#92;&#92;  &#92;end{aligned}  " class="latex" /></p>
<p>This is valuable information. Remember that <img src="//s0.wp.com/latex.php?latex=U%2CV&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="U,V" title="U,V" class="latex" /> and <img src="//s0.wp.com/latex.php?latex=W&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="W" title="W" class="latex" /> are the parameters of our network we want to learn from data. Thus, we need to learn a total of <img src="//s0.wp.com/latex.php?latex=2HC+%2B+H%5E2&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="2HC + H^2" title="2HC + H^2" class="latex" /> parameters. In the case of <img src="//s0.wp.com/latex.php?latex=C%3D8000&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="C=8000" title="C=8000" class="latex" /> and <img src="//s0.wp.com/latex.php?latex=H%3D100&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="H=100" title="H=100" class="latex" /> that&#8217;s 1,610,000. The dimensions also tell us the bottleneck of our model. Note that because <img src="//s0.wp.com/latex.php?latex=x_t&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="x_t" title="x_t" class="latex" /> is a one-hot vector, multiplying it with <img src="//s0.wp.com/latex.php?latex=U&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="U" title="U" class="latex" /> is essentially the same as selecting a column of U, so we don&#8217;t need to perform the full multiplication. Then, the biggest matrix multiplication in our network is <img src="//s0.wp.com/latex.php?latex=Vs_t&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="Vs_t" title="Vs_t" class="latex" />. That&#8217;s why we want to keep our vocabulary size small if possible.</p>
<p>Armed with this, it&#8217;s time to start our implementation.</p>
<h4>Initialization</h4>
<p>We start by declaring a RNN class an initializing our parameters. I&#8217;m calling this class <code>RNNNumpy</code> because we will implement a Theano version later. Initializing the parameters <img src="//s0.wp.com/latex.php?latex=U%2CV&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="U,V" title="U,V" class="latex" /> and <img src="//s0.wp.com/latex.php?latex=W&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="W" title="W" class="latex" /> is a bit tricky. We can&#8217;t just initialize them to 0&#8217;s because that would result in symmetric calculations in all our layers. We must initialize them randomly. Because proper initialization seems to have an impact on training results there has been lot of research in this area. It turns out that the best initialization depends on the activation function (<img src="//s0.wp.com/latex.php?latex=%5Ctanh&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="&#92;tanh" title="&#92;tanh" class="latex" /> in our case) and one <a href="http://jmlr.org/proceedings/papers/v9/glorot10a/glorot10a.pdf">recommended</a> approach is to initialize the weights randomly in the interval from <img src="//s0.wp.com/latex.php?latex=%5Cleft%5B-%5Cfrac%7B1%7D%7B%5Csqrt%7Bn%7D%7D%2C+%5Cfrac%7B1%7D%7B%5Csqrt%7Bn%7D%7D%5Cright%5D&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="&#92;left[-&#92;frac{1}{&#92;sqrt{n}}, &#92;frac{1}{&#92;sqrt{n}}&#92;right]" title="&#92;left[-&#92;frac{1}{&#92;sqrt{n}}, &#92;frac{1}{&#92;sqrt{n}}&#92;right]" class="latex" /> where <img src="//s0.wp.com/latex.php?latex=n&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="n" title="n" class="latex" /> is the number of incoming connections from the previous layer. This may sound overly complicated, but don&#8217;t worry too much it. As long as you initialize your parameters to small random values it typically works out fine.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64816954007013" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64816954007013-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64816954007013-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64816954007013-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64816954007013-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d64816954007013-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64816954007013-6">6</div><div class="crayon-num" data-line="crayon-5c8ca78d64816954007013-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64816954007013-8">8</div><div class="crayon-num" data-line="crayon-5c8ca78d64816954007013-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64816954007013-10">10</div><div class="crayon-num" data-line="crayon-5c8ca78d64816954007013-11">11</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64816954007013-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">RNNNumpy</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64816954007013-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-5c8ca78d64816954007013-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">__init__</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">word_dim</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">hidden_dim</span><span class="crayon-o">=</span><span class="crayon-cn">100</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">bptt_truncate</span><span class="crayon-o">=</span><span class="crayon-cn">4</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64816954007013-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Assign instance variables</span></div><div class="crayon-line" id="crayon-5c8ca78d64816954007013-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">word_dim</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">word_dim</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64816954007013-6"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">hidden_dim</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">hidden_dim</span></div><div class="crayon-line" id="crayon-5c8ca78d64816954007013-7"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">bptt_truncate</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">bptt_truncate</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64816954007013-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Randomly initialize the network parameters</span></div><div class="crayon-line" id="crayon-5c8ca78d64816954007013-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">U</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">uniform</span><span class="crayon-sy">(</span><span class="crayon-o">-</span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">sqrt</span><span class="crayon-sy">(</span><span class="crayon-cn">1.</span><span class="crayon-o">/</span><span class="crayon-v">word_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">sqrt</span><span class="crayon-sy">(</span><span class="crayon-cn">1.</span><span class="crayon-o">/</span><span class="crayon-v">word_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">hidden_dim</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">word_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64816954007013-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">V</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">uniform</span><span class="crayon-sy">(</span><span class="crayon-o">-</span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">sqrt</span><span class="crayon-sy">(</span><span class="crayon-cn">1.</span><span class="crayon-o">/</span><span class="crayon-v">hidden_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">sqrt</span><span class="crayon-sy">(</span><span class="crayon-cn">1.</span><span class="crayon-o">/</span><span class="crayon-v">hidden_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">word_dim</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">hidden_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64816954007013-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-k ">W</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">uniform</span><span class="crayon-sy">(</span><span class="crayon-o">-</span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">sqrt</span><span class="crayon-sy">(</span><span class="crayon-cn">1.</span><span class="crayon-o">/</span><span class="crayon-v">hidden_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">sqrt</span><span class="crayon-sy">(</span><span class="crayon-cn">1.</span><span class="crayon-o">/</span><span class="crayon-v">hidden_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">hidden_dim</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">hidden_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0008 seconds] -->
<p>Above, <code>word_dim</code> is the size of our vocabulary, and <code>hidden_dim</code> is the size of our hidden layer (we can pick it). Don&#8217;t worry about the <code>bptt_truncate</code> parameter for now, we&#8217;ll explain what that is later.</p>
<h4>Forward Propagation</h4>
<p>Next, let&#8217;s implement the forward propagation (predicting word probabilities) defined by our equations above:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64819996681284" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64819996681284-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64819996681284-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64819996681284-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64819996681284-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d64819996681284-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64819996681284-6">6</div><div class="crayon-num" data-line="crayon-5c8ca78d64819996681284-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64819996681284-8">8</div><div class="crayon-num" data-line="crayon-5c8ca78d64819996681284-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64819996681284-10">10</div><div class="crayon-num" data-line="crayon-5c8ca78d64819996681284-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64819996681284-12">12</div><div class="crayon-num" data-line="crayon-5c8ca78d64819996681284-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64819996681284-14">14</div><div class="crayon-num" data-line="crayon-5c8ca78d64819996681284-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64819996681284-16">16</div><div class="crayon-num" data-line="crayon-5c8ca78d64819996681284-17">17</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64819996681284-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">forward_propagation</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64819996681284-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># The total number of time steps</span></div><div class="crayon-line" id="crayon-5c8ca78d64819996681284-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">T</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64819996681284-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># During forward propagation we save all hidden states in s because need them later.</span></div><div class="crayon-line" id="crayon-5c8ca78d64819996681284-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># We add one additional element for the initial hidden, which we set to 0</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64819996681284-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">s</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">T</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">hidden_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64819996681284-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">s</span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">hidden_dim</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64819996681284-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># The outputs at each time step. Again, we save them for later.</span></div><div class="crayon-line" id="crayon-5c8ca78d64819996681284-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">o</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">T</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">word_dim</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64819996681284-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># For each time step...</span></div><div class="crayon-line" id="crayon-5c8ca78d64819996681284-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">t</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">arange</span><span class="crayon-sy">(</span><span class="crayon-v">T</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64819996681284-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Note that we are indxing U by x[t]. This is the same as multiplying U with a one-hot vector.</span></div><div class="crayon-line" id="crayon-5c8ca78d64819996681284-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">s</span><span class="crayon-sy">[</span><span class="crayon-v">t</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">tanh</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">U</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-sy">,</span><span class="crayon-v">x</span><span class="crayon-sy">[</span><span class="crayon-v">t</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-k ">W</span><span class="crayon-sy">.</span><span class="crayon-e">dot</span><span class="crayon-sy">(</span><span class="crayon-v">s</span><span class="crayon-sy">[</span><span class="crayon-v">t</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64819996681284-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">o</span><span class="crayon-sy">[</span><span class="crayon-v">t</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">softmax</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">V</span><span class="crayon-sy">.</span><span class="crayon-e">dot</span><span class="crayon-sy">(</span><span class="crayon-v">s</span><span class="crayon-sy">[</span><span class="crayon-v">t</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64819996681284-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">o</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">s</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64819996681284-16">&nbsp;</div><div class="crayon-line" id="crayon-5c8ca78d64819996681284-17"><span class="crayon-v">RNNNumpy</span><span class="crayon-sy">.</span><span class="crayon-v">forward_propagation</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">forward_propagation</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0007 seconds] -->
<p>We not only return the calculated outputs, but also the hidden states. We will use them later to calculate the gradients, and by returning them here we avoid duplicate computation. Each <img src="//s0.wp.com/latex.php?latex=o_t&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="o_t" title="o_t" class="latex" /> is a vector of probabilities representing the words in our vocabulary, but sometimes, for example when evaluating our model, all we want is the next word with the highest probability. We call this function <code>predict</code>:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d6481b824059598" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d6481b824059598-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481b824059598-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d6481b824059598-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481b824059598-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d6481b824059598-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481b824059598-6">6</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d6481b824059598-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481b824059598-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Perform forward propagation and return index of the highest score</span></div><div class="crayon-line" id="crayon-5c8ca78d6481b824059598-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">o</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">s</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-e">forward_propagation</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481b824059598-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">o</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">axis</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d6481b824059598-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481b824059598-6"><span class="crayon-v">RNNNumpy</span><span class="crayon-sy">.</span><span class="crayon-v">predict</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">predict</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0002 seconds] -->
<p></p>
<p>Let&#8217;s try our newly implemented methods and see an example output:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d6481c539389923" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d6481c539389923-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481c539389923-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d6481c539389923-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481c539389923-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d6481c539389923-5">5</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d6481c539389923-1"><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">10</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481c539389923-2"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">RNNNumpy</span><span class="crayon-sy">(</span><span class="crayon-v">vocabulary_size</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d6481c539389923-3"><span class="crayon-v">o</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">s</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">forward_propagation</span><span class="crayon-sy">(</span><span class="crayon-v">X_train</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481c539389923-4"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-v">o</span><span class="crayon-sy">.</span><span class="crayon-e">shape</span></div><div class="crayon-line" id="crayon-5c8ca78d6481c539389923-5"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-v">o</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0002 seconds] -->
<p></p>
<pre class="crayon-plain-tag">(45, 8000)
[[ 0.00012408  0.0001244   0.00012603 ...,  0.00012515  0.00012488
   0.00012508]
 [ 0.00012536  0.00012582  0.00012436 ...,  0.00012482  0.00012456
   0.00012451]
 [ 0.00012387  0.0001252   0.00012474 ...,  0.00012559  0.00012588
   0.00012551]
 ..., 
 [ 0.00012414  0.00012455  0.0001252  ...,  0.00012487  0.00012494
   0.0001263 ]
 [ 0.0001252   0.00012393  0.00012509 ...,  0.00012407  0.00012578
   0.00012502]
 [ 0.00012472  0.0001253   0.00012487 ...,  0.00012463  0.00012536
   0.00012665]]</pre>
<p>For each word in the sentence (45 above), our model made 8000 predictions representing probabilities of the next word. Note that because we initialized <img src="//s0.wp.com/latex.php?latex=U%2CV%2CW&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="U,V,W" title="U,V,W" class="latex" /> to random values these predictions are completely random right now. The following gives the indices of the highest probability predictions for each word:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d6481d733461155" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d6481d733461155-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481d733461155-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d6481d733461155-3">3</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d6481d733461155-1"><span class="crayon-v">predictions</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">X_train</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481d733461155-2"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-v">predictions</span><span class="crayon-sy">.</span><span class="crayon-e">shape</span></div><div class="crayon-line" id="crayon-5c8ca78d6481d733461155-3"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-v">predictions</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0001 seconds] -->
<p></p>
<pre class="crayon-plain-tag">(45,)
[1284 5221 7653 7430 1013 3562 7366 4860 2212 6601 7299 4556 2481 238 2539
 21 6548 261 1780 2005 1810 5376 4146 477 7051 4832 4991 897 3485 21
 7291 2007 6006 760 4864 2182 6569 2800 2752 6821 4437 7021 7875 6912 3575]</pre>
<h4>Calculating the Loss</h4>
<p>To train our network we need a way to measure the errors it makes. We call this the loss function <img src="//s0.wp.com/latex.php?latex=L&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="L" title="L" class="latex" />, and our goal is find the parameters <img src="//s0.wp.com/latex.php?latex=U%2CV&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="U,V" title="U,V" class="latex" /> and <img src="//s0.wp.com/latex.php?latex=W&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="W" title="W" class="latex" /> that minimize the loss function for our training data. A common choice for the loss function is the <a href="https://en.wikipedia.org/wiki/Cross_entropy#Cross-entropy_error_function_and_logistic_regression">cross-entropy loss</a>. If we have <img src="//s0.wp.com/latex.php?latex=N&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="N" title="N" class="latex" /> training examples (words in our text) and <img src="//s0.wp.com/latex.php?latex=C&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="C" title="C" class="latex" /> classes (the size of our vocabulary) then the loss with respect to our predictions <img src="//s0.wp.com/latex.php?latex=o&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="o" title="o" class="latex" /> and the true labels <img src="//s0.wp.com/latex.php?latex=y&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="y" title="y" class="latex" /> is given by:</p>
<p><img src="//s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D++L%28y%2Co%29+%3D+-+%5Cfrac%7B1%7D%7BN%7D+%5Csum_%7Bn+%5Cin+N%7D+y_%7Bn%7D+%5Clog+o_%7Bn%7D++%5Cend%7Baligned%7D++&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="&#92;begin{aligned}  L(y,o) = - &#92;frac{1}{N} &#92;sum_{n &#92;in N} y_{n} &#92;log o_{n}  &#92;end{aligned}  " title="&#92;begin{aligned}  L(y,o) = - &#92;frac{1}{N} &#92;sum_{n &#92;in N} y_{n} &#92;log o_{n}  &#92;end{aligned}  " class="latex" /></p>
<p>The formula looks a bit complicated, but all it really does is sum over our training examples and add to the loss based on how off our prediction are. The further away <img src="//s0.wp.com/latex.php?latex=y&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="y" title="y" class="latex" /> (the correct words) and <img src="//s0.wp.com/latex.php?latex=o&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="o" title="o" class="latex" /> (our predictions), the greater the loss will be. We implement the function <code>calculate_loss</code>:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d6481e130269926" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d6481e130269926-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481e130269926-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d6481e130269926-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481e130269926-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d6481e130269926-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481e130269926-6">6</div><div class="crayon-num" data-line="crayon-5c8ca78d6481e130269926-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481e130269926-8">8</div><div class="crayon-num" data-line="crayon-5c8ca78d6481e130269926-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481e130269926-10">10</div><div class="crayon-num" data-line="crayon-5c8ca78d6481e130269926-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481e130269926-12">12</div><div class="crayon-num" data-line="crayon-5c8ca78d6481e130269926-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481e130269926-14">14</div><div class="crayon-num" data-line="crayon-5c8ca78d6481e130269926-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481e130269926-16">16</div><div class="crayon-num" data-line="crayon-5c8ca78d6481e130269926-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481e130269926-18">18</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d6481e130269926-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">calculate_total_loss</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481e130269926-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">L</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span></div><div class="crayon-line" id="crayon-5c8ca78d6481e130269926-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># For each sentence...</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481e130269926-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">arange</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d6481e130269926-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">o</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">s</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-e">forward_propagation</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481e130269926-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># We only care about our prediction of the &amp;quot;correct&amp;quot; words</span></div><div class="crayon-line" id="crayon-5c8ca78d6481e130269926-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">correct_word_predictions</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">o</span><span class="crayon-sy">[</span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">arange</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481e130269926-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Add to the loss based on how off we were</span></div><div class="crayon-line" id="crayon-5c8ca78d6481e130269926-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">L</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">sum</span><span class="crayon-sy">(</span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">log</span><span class="crayon-sy">(</span><span class="crayon-v">correct_word_predictions</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481e130269926-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-i">L</span></div><div class="crayon-line" id="crayon-5c8ca78d6481e130269926-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481e130269926-12"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">calculate_loss</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d6481e130269926-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Divide the total loss by the number of training examples</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481e130269926-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">N</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">sum</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">y_i</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">y_i </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d6481e130269926-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-e">calculate_total_loss</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-o">/</span><span class="crayon-i">N</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481e130269926-16">&nbsp;</div><div class="crayon-line" id="crayon-5c8ca78d6481e130269926-17"><span class="crayon-v">RNNNumpy</span><span class="crayon-sy">.</span><span class="crayon-v">calculate_total_loss</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">calculate_total_loss</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481e130269926-18"><span class="crayon-v">RNNNumpy</span><span class="crayon-sy">.</span><span class="crayon-v">calculate_loss</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">calculate_loss</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0007 seconds] -->
<p>Let&#8217;s take a step back and think about what the loss should be for random predictions. That will give us a baseline and make sure our implementation is correct. We have <img src="//s0.wp.com/latex.php?latex=C&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="C" title="C" class="latex" /> words in our vocabulary, so each word should be (on average) predicted with probability <img src="//s0.wp.com/latex.php?latex=1%2FC&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="1/C" title="1/C" class="latex" />, which would yield a loss of <img src="//s0.wp.com/latex.php?latex=L+%3D+-%5Cfrac%7B1%7D%7BN%7D+N+%5Clog%5Cfrac%7B1%7D%7BC%7D+%3D+%5Clog+C&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="L = -&#92;frac{1}{N} N &#92;log&#92;frac{1}{C} = &#92;log C" title="L = -&#92;frac{1}{N} N &#92;log&#92;frac{1}{C} = &#92;log C" class="latex" />:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d6481f164936510" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d6481f164936510-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d6481f164936510-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d6481f164936510-3">3</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d6481f164936510-1"><span class="crayon-c"># Limit to 1000 examples to save time</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d6481f164936510-2"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Expected </span><span class="crayon-e">Loss </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-k ">random</span><span class="crayon-h"> </span><span class="crayon-v">predictions</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">f</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">log</span><span class="crayon-sy">(</span><span class="crayon-v">vocabulary_size</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d6481f164936510-3"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Actual </span><span class="crayon-v">loss</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">f</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">calculate_loss</span><span class="crayon-sy">(</span><span class="crayon-v">X_train</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-cn">1000</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_train</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-cn">1000</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<pre class="crayon-plain-tag">Expected Loss for random predictions: 8.987197
Actual loss: 8.987440</pre>
<p>Pretty close! Keep in mind that evaluating the loss on the full dataset is an expensive operation and can take hours if you have a lot of data!</p>
<h4>Training the RNN with SGD and Backpropagation Through Time (BPTT)</h4>
<p>Remember that we want to find the parameters <img src="//s0.wp.com/latex.php?latex=U%2CV&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="U,V" title="U,V" class="latex" /> and <img src="//s0.wp.com/latex.php?latex=W&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="W" title="W" class="latex" /> that minimize the total loss on the training data. The most common way to do this is SGD, Stochastic Gradient Descent. The idea behind SGD is pretty simple. We iterate over all our training examples and during each iteration we nudge the parameters into a direction that reduces the error. These directions are given by the gradients on the loss: <img src="//s0.wp.com/latex.php?latex=%5Cfrac%7B%5Cpartial+L%7D%7B%5Cpartial+U%7D%2C+%5Cfrac%7B%5Cpartial+L%7D%7B%5Cpartial+V%7D%2C+%5Cfrac%7B%5Cpartial+L%7D%7B%5Cpartial+W%7D&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="&#92;frac{&#92;partial L}{&#92;partial U}, &#92;frac{&#92;partial L}{&#92;partial V}, &#92;frac{&#92;partial L}{&#92;partial W}" title="&#92;frac{&#92;partial L}{&#92;partial U}, &#92;frac{&#92;partial L}{&#92;partial V}, &#92;frac{&#92;partial L}{&#92;partial W}" class="latex" />. SGD also needs a <em>learning rate</em>, which defines how big of a step we want to make in each iteration. SGD is the most popular optimization method not only for Neural Networks, but also for many other Machine Learning algorithms. As such there has been a lot of research on how to optimize SGD using batching, parallelism and adaptive learning rates. Even though the basic idea is simple, implementing SGD in a really efficient way can become very complex. If you want to learn more about SGD <a href="http://cs231n.github.io/optimization-1/">this</a> is a good place to start. Due to its popularity there are a wealth of tutorials floating around the web, and I don&#8217;t want to duplicate them here. I&#8217;ll implement a simple version of SGD that should be understandable even without a background in optimization.</p>
<p>But how do we calculate those gradients we mentioned above? In a <a href="http://www.wildml.com/2015/09/implementing-a-neural-network-from-scratch/">traditional Neural Network</a> we do this through the backpropagation algorithm. In RNNs we use a slightly modified version of the this algorithm called <em>Backpropagation Through Time (BPTT)</em>. Because the parameters are shared by all time steps in the network, the gradient at each output depends not only on the calculations of the current time step, but also the previous time steps. If you know calculus, it really is just applying the chain rule. The next part of the tutorial will be all about BPTT, so I won&#8217;t go into detailed derivation here. For a general introduction to backpropagation check out <a href="http://colah.github.io/posts/2015-08-Backprop/">this</a> and this <a href="http://cs231n.github.io/optimization-2/">post</a>. For now you can treat BPTT as a black box. It takes as input a training example <img src="//s0.wp.com/latex.php?latex=%28x%2Cy%29&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="(x,y)" title="(x,y)" class="latex" /> and returns the gradients <img src="//s0.wp.com/latex.php?latex=%5Cfrac%7B%5Cpartial+L%7D%7B%5Cpartial+U%7D%2C+%5Cfrac%7B%5Cpartial+L%7D%7B%5Cpartial+V%7D%2C+%5Cfrac%7B%5Cpartial+L%7D%7B%5Cpartial+W%7D&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="&#92;frac{&#92;partial L}{&#92;partial U}, &#92;frac{&#92;partial L}{&#92;partial V}, &#92;frac{&#92;partial L}{&#92;partial W}" title="&#92;frac{&#92;partial L}{&#92;partial U}, &#92;frac{&#92;partial L}{&#92;partial V}, &#92;frac{&#92;partial L}{&#92;partial W}" class="latex" />.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64820499538667" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-6">6</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-8">8</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-10">10</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-12">12</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-14">14</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-16">16</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-18">18</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-20">20</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-22">22</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64820499538667-24">24</div><div class="crayon-num" data-line="crayon-5c8ca78d64820499538667-25">25</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64820499538667-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">bptt</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">T</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Perform forward propagation</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">o</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">s</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-e">forward_propagation</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># We accumulate the gradients in these variables</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">dLdU</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">U</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">dLdV</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">V</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">dLdW</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-k ">W</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">delta_o</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-i">o</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">delta_o</span><span class="crayon-sy">[</span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">arange</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">-=</span><span class="crayon-h"> </span><span class="crayon-cn">1.</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># For each output backwards...</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">t</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">arange</span><span class="crayon-sy">(</span><span class="crayon-v">T</span><span class="crayon-sy">)</span><span class="crayon-sy">[</span><span class="crayon-o">::</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">dLdV</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">outer</span><span class="crayon-sy">(</span><span class="crayon-v">delta_o</span><span class="crayon-sy">[</span><span class="crayon-v">t</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">s</span><span class="crayon-sy">[</span><span class="crayon-v">t</span><span class="crayon-sy">]</span><span class="crayon-sy">.</span><span class="crayon-v">T</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Initial delta calculation</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">delta_t</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">V</span><span class="crayon-sy">.</span><span class="crayon-v">T</span><span class="crayon-sy">.</span><span class="crayon-e">dot</span><span class="crayon-sy">(</span><span class="crayon-v">delta_o</span><span class="crayon-sy">[</span><span class="crayon-v">t</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">s</span><span class="crayon-sy">[</span><span class="crayon-v">t</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Backpropagation through time (for at most self.bptt_truncate steps)</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">bptt_step </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">arange</span><span class="crayon-sy">(</span><span class="crayon-k ">max</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">t</span><span class="crayon-o">-</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">bptt_truncate</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">t</span><span class="crayon-o">+</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-sy">[</span><span class="crayon-o">::</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># print &amp;quot;Backpropagation step t=%d bptt step=%d &amp;quot; % (t, bptt_step)</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">dLdW</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">outer</span><span class="crayon-sy">(</span><span class="crayon-v">delta_t</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">s</span><span class="crayon-sy">[</span><span class="crayon-v">bptt_step</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">dLdU</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-sy">,</span><span class="crayon-v">x</span><span class="crayon-sy">[</span><span class="crayon-v">bptt_step</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-v">delta_t</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Update delta for next step</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">delta_t</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-k ">W</span><span class="crayon-sy">.</span><span class="crayon-v">T</span><span class="crayon-sy">.</span><span class="crayon-e">dot</span><span class="crayon-sy">(</span><span class="crayon-v">delta_t</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">s</span><span class="crayon-sy">[</span><span class="crayon-v">bptt_step</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">dLdU</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dLdV</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dLdW</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64820499538667-24">&nbsp;</div><div class="crayon-line" id="crayon-5c8ca78d64820499538667-25"><span class="crayon-v">RNNNumpy</span><span class="crayon-sy">.</span><span class="crayon-v">bptt</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">bptt</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0013 seconds] -->
<p></p>
<h4>Gradient Checking</h4>
<p>Whenever you implement backpropagation it is good idea to also implement <em>gradient checking</em>, which is a way of verifying that your implementation is correct. The idea behind gradient checking is that derivative of a parameter is equal to the slope at the point, which we can approximate by slightly changing the parameter and then dividing by the change:</p>
<p><img src="//s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D++%5Cfrac%7B%5Cpartial+L%7D%7B%5Cpartial+%5Ctheta%7D+%5Capprox+%5Clim_%7Bh+%5Cto+0%7D+%5Cfrac%7BJ%28%5Ctheta+%2B+h%29+-+J%28%5Ctheta+-h%29%7D%7B2h%7D++%5Cend%7Baligned%7D++&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="&#92;begin{aligned}  &#92;frac{&#92;partial L}{&#92;partial &#92;theta} &#92;approx &#92;lim_{h &#92;to 0} &#92;frac{J(&#92;theta + h) - J(&#92;theta -h)}{2h}  &#92;end{aligned}  " title="&#92;begin{aligned}  &#92;frac{&#92;partial L}{&#92;partial &#92;theta} &#92;approx &#92;lim_{h &#92;to 0} &#92;frac{J(&#92;theta + h) - J(&#92;theta -h)}{2h}  &#92;end{aligned}  " class="latex" /></p>
<p>We then compare the gradient we calculated using backpropagation to the gradient we estimated with the method above. If there&#8217;s no large difference we are good. The approximation needs to calculate the total loss for <em>every</em> parameter, so that gradient checking is very expensive (remember, we had more than a million parameters in the example above). So it&#8217;s a good idea to perform it on a model with a smaller vocabulary.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64822216395594" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-6">6</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-8">8</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-10">10</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-12">12</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-14">14</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-16">16</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-18">18</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-20">20</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-22">22</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-24">24</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-26">26</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-28">28</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-30">30</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-32">32</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-34">34</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-36">36</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-38">38</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-40">40</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-42">42</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-44">44</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64822216395594-46">46</div><div class="crayon-num" data-line="crayon-5c8ca78d64822216395594-47">47</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64822216395594-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">gradient_check</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">h</span><span class="crayon-o">=</span><span class="crayon-cn">0.001</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">error_threshold</span><span class="crayon-o">=</span><span class="crayon-cn">0.01</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Calculate the gradients using backpropagation. We want to checker if these are correct.</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">bptt_gradients</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-e">bptt</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># List of all parameters we want to check.</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">model_parameters</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-s">'U'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'V'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'W'</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Gradient check for each parameter</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">pidx</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">pname </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">enumerate</span><span class="crayon-sy">(</span><span class="crayon-v">model_parameters</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Get the actual parameter value from the mode, e.g. model.W</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">parameter</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">operator</span><span class="crayon-sy">.</span><span class="crayon-e">attrgetter</span><span class="crayon-sy">(</span><span class="crayon-v">pname</span><span class="crayon-sy">)</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Performing </span><span class="crayon-e">gradient </span><span class="crayon-e">check </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">parameter</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-i">s</span><span class="crayon-h"> </span><span class="crayon-st">with</span><span class="crayon-h"> </span><span class="crayon-v">size</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">d</span><span class="crayon-sy">.</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">pname</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">prod</span><span class="crayon-sy">(</span><span class="crayon-v">parameter</span><span class="crayon-sy">.</span><span class="crayon-v">shape</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Iterate over each element of the parameter matrix, e.g. (0,0), (0,1), ...</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">it</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">nditer</span><span class="crayon-sy">(</span><span class="crayon-v">parameter</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">flags</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-s">'multi_index'</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">op_flags</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-s">'readwrite'</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-st">not</span><span class="crayon-h"> </span><span class="crayon-v">it</span><span class="crayon-sy">.</span><span class="crayon-v">finished</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">ix</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">it</span><span class="crayon-sy">.</span><span class="crayon-v">multi_index</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Save the original value so we can reset it later</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">original_value</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">parameter</span><span class="crayon-sy">[</span><span class="crayon-v">ix</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Estimate the gradient using (f(x+h) - f(x-h))/(2*h)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">parameter</span><span class="crayon-sy">[</span><span class="crayon-v">ix</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">original_value</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-i">h</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">gradplus</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-e">calculate_total_loss</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">x</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-sy">[</span><span class="crayon-v">y</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">parameter</span><span class="crayon-sy">[</span><span class="crayon-v">ix</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">original_value</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-i">h</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">gradminus</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-e">calculate_total_loss</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">x</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-sy">[</span><span class="crayon-v">y</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">estimated_gradient</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">gradplus</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">gradminus</span><span class="crayon-sy">)</span><span class="crayon-o">/</span><span class="crayon-sy">(</span><span class="crayon-cn">2</span><span class="crayon-o">*</span><span class="crayon-v">h</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Reset parameter to original value</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">parameter</span><span class="crayon-sy">[</span><span class="crayon-v">ix</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">original_value</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># The gradient for this parameter calculated using backpropagation</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">backprop_gradient</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">bptt_gradients</span><span class="crayon-sy">[</span><span class="crayon-v">pidx</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-v">ix</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># calculate The relative error: (|x - y|/(|x| + |y|))</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-28"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">relative_error</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">abs</span><span class="crayon-sy">(</span><span class="crayon-v">backprop_gradient</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">estimated_gradient</span><span class="crayon-sy">)</span><span class="crayon-o">/</span><span class="crayon-sy">(</span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">abs</span><span class="crayon-sy">(</span><span class="crayon-v">backprop_gradient</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">abs</span><span class="crayon-sy">(</span><span class="crayon-v">estimated_gradient</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-29"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># If the error is to large fail the gradient check</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-30"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">relative_error</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">amp</span><span class="crayon-sy">;</span><span class="crayon-v">gt</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">error_threshold</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-31"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Gradient </span><span class="crayon-e">Check </span><span class="crayon-v">ERROR</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">parameter</span><span class="crayon-o">=</span><span class="crayon-o">%</span><span class="crayon-i">s</span><span class="crayon-h"> </span><span class="crayon-v">ix</span><span class="crayon-o">=</span><span class="crayon-o">%</span><span class="crayon-v">s</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">pname</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">ix</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-32"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-o">+</span><span class="crayon-i">h</span><span class="crayon-h"> </span><span class="crayon-v">Loss</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">f</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-e">gradplus</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-33"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-o">-</span><span class="crayon-i">h</span><span class="crayon-h"> </span><span class="crayon-v">Loss</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">f</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-e">gradminus</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-34"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">Estimated_gradient</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">f</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-e">estimated_gradient</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-35"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Backpropagation </span><span class="crayon-v">gradient</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">f</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-e">backprop_gradient</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-36"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Relative </span><span class="crayon-v">Error</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">f</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-e">relative_error</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-37"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-38"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">it</span><span class="crayon-sy">.</span><span class="crayon-e">iternext</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-39"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Gradient </span><span class="crayon-e">check </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">parameter</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-i">s</span><span class="crayon-h"> </span><span class="crayon-v">passed</span><span class="crayon-sy">.</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">pname</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-40">&nbsp;</div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-41"><span class="crayon-v">RNNNumpy</span><span class="crayon-sy">.</span><span class="crayon-v">gradient_check</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">gradient_check</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-42">&nbsp;</div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-43"><span class="crayon-c"># To avoid performing millions of expensive calculations we use a smaller vocabulary size for checking.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-44"><span class="crayon-v">grad_check_vocab_size</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">100</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-45"><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">10</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64822216395594-46"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">RNNNumpy</span><span class="crayon-sy">(</span><span class="crayon-v">grad_check_vocab_size</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">bptt_truncate</span><span class="crayon-o">=</span><span class="crayon-cn">1000</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64822216395594-47"><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">gradient_check</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-cn">3</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-cn">3</span><span class="crayon-sy">,</span><span class="crayon-cn">4</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0024 seconds] -->
<p></p>
<h4>SGD Implementation</h4>
<p>Now that we are able to calculate the gradients for our parameters we can implement SGD. I like to do this in two steps: 1. A function <code>sdg_step</code> that calculates the gradients and performs the updates for one batch. 2. An outer loop that iterates through the training set and adjusts the learning rate.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64823028863668" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64823028863668-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64823028863668-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64823028863668-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64823028863668-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d64823028863668-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64823028863668-6">6</div><div class="crayon-num" data-line="crayon-5c8ca78d64823028863668-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64823028863668-8">8</div><div class="crayon-num" data-line="crayon-5c8ca78d64823028863668-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64823028863668-10">10</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64823028863668-1"><span class="crayon-c"># Performs one step of SGD.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64823028863668-2"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">numpy_sdg_step</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">learning_rate</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d64823028863668-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Calculate the gradients</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64823028863668-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">dLdU</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dLdV</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dLdW</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-e">bptt</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64823028863668-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Change parameters according to gradients and learning rate</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64823028863668-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">U</span><span class="crayon-h"> </span><span class="crayon-o">-=</span><span class="crayon-h"> </span><span class="crayon-v">learning_rate</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">dLdU</span></div><div class="crayon-line" id="crayon-5c8ca78d64823028863668-7"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">V</span><span class="crayon-h"> </span><span class="crayon-o">-=</span><span class="crayon-h"> </span><span class="crayon-v">learning_rate</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">dLdV</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64823028863668-8"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-k ">W</span><span class="crayon-h"> </span><span class="crayon-o">-=</span><span class="crayon-h"> </span><span class="crayon-v">learning_rate</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">dLdW</span></div><div class="crayon-line" id="crayon-5c8ca78d64823028863668-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64823028863668-10"><span class="crayon-v">RNNNumpy</span><span class="crayon-sy">.</span><span class="crayon-v">sgd_step</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">numpy_sdg_step</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0005 seconds] -->
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64824064880765" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-6">6</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-8">8</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-10">10</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-12">12</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-14">14</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-16">16</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-18">18</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-20">20</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-22">22</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-24">24</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-26">26</div><div class="crayon-num" data-line="crayon-5c8ca78d64824064880765-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64824064880765-28">28</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64824064880765-1"><span class="crayon-c"># Outer SGD Loop</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-2"><span class="crayon-c"># - model: The RNN model instance</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-3"><span class="crayon-c"># - X_train: The training data set</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-4"><span class="crayon-c"># - y_train: The training data labels</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-5"><span class="crayon-c"># - learning_rate: Initial learning rate for SGD</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-6"><span class="crayon-c"># - nepoch: Number of times to iterate through the complete dataset</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-7"><span class="crayon-c"># - evaluate_loss_after: Evaluate the loss after this many epochs</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-8"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">train_with_sgd</span><span class="crayon-sy">(</span><span class="crayon-v">model</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X_train</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_train</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">learning_rate</span><span class="crayon-o">=</span><span class="crayon-cn">0.005</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nepoch</span><span class="crayon-o">=</span><span class="crayon-cn">100</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">evaluate_loss_after</span><span class="crayon-o">=</span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># We keep track of the losses so we can plot them later</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">losses</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">num_examples_seen</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">epoch </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">range</span><span class="crayon-sy">(</span><span class="crayon-v">nepoch</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Optionally evaluate the loss</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">epoch</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-v">evaluate_loss_after</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">loss</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">calculate_loss</span><span class="crayon-sy">(</span><span class="crayon-v">X_train</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_train</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">losses</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">num_examples_seen</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">loss</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">time</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">datetime</span><span class="crayon-sy">.</span><span class="crayon-e">now</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">strftime</span><span class="crayon-sy">(</span><span class="crayon-s">'%Y-%m-%d %H:%M:%S'</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-o">%</span><span class="crayon-v">s</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Loss </span><span class="crayon-e">after </span><span class="crayon-v">num_examples_seen</span><span class="crayon-o">=</span><span class="crayon-o">%</span><span class="crayon-i">d</span><span class="crayon-h"> </span><span class="crayon-v">epoch</span><span class="crayon-o">=</span><span class="crayon-o">%</span><span class="crayon-v">d</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">f</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-k ">time</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">num_examples_seen</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">epoch</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">loss</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Adjust the learning rate if loss increases</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">losses</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">amp</span><span class="crayon-sy">;</span><span class="crayon-v">gt</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-st">and</span><span class="crayon-h"> </span><span class="crayon-v">losses</span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">amp</span><span class="crayon-sy">;</span><span class="crayon-v">gt</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">losses</span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">learning_rate</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">learning_rate</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">0.5</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Setting </span><span class="crayon-e">learning </span><span class="crayon-e">rate </span><span class="crayon-v">to</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-v">f</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-e">learning_rate</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-23"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">sys</span><span class="crayon-sy">.</span><span class="crayon-v">stdout</span><span class="crayon-sy">.</span><span class="crayon-e">flush</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># For each training example...</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">range</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">y_train</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># One SGD step</span></div><div class="crayon-line" id="crayon-5c8ca78d64824064880765-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">sgd_step</span><span class="crayon-sy">(</span><span class="crayon-v">X_train</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_train</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">learning_rate</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64824064880765-28"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">num_examples_seen</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0012 seconds] -->
<p>Done! Let&#8217;s try to get a sense of how long it would take to train our network:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64825730084995" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64825730084995-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64825730084995-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64825730084995-3">3</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64825730084995-1"><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">10</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64825730084995-2"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">RNNNumpy</span><span class="crayon-sy">(</span><span class="crayon-v">vocabulary_size</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64825730084995-3"><span class="crayon-o">%</span><span class="crayon-k ">timeit</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">sgd_step</span><span class="crayon-sy">(</span><span class="crayon-v">X_train</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_train</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0.005</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0002 seconds] -->
<p>Uh-oh, bad news. One step of SGD takes approximately 350 milliseconds on my laptop. We have about 80,000 examples in our training data, so one epoch (iteration over the whole data set) would take several hours. Multiple epochs would take days, or even weeks! And we&#8217;re still working with a small dataset compared to what&#8217;s being used by many of the companies and researchers out there. What now?</p>
<p>Fortunately there are many ways to speed up our code. We could stick with the same model and make our code run faster, or we could modify our model to be less computationally expensive, or both. Researchers have identified many ways to make models less computationally expensive, for example by using a hierarchical softmax or adding projection layers to avoid the large matrix multiplications (see also <a href="http://arxiv.org/pdf/1301.3781.pdf">here</a> or <a href="http://www.fit.vutbr.cz/research/groups/speech/publi/2011/mikolov_icassp2011_5528.pdf">here</a>). But I want to keep our model simple and go the first route: Make our implementation run faster using a GPU. Before doing that though, let&#8217;s just try to run SGD with a small dataset and check if the loss actually decreases:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64826252371375" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64826252371375-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64826252371375-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64826252371375-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64826252371375-4">4</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64826252371375-1"><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">10</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64826252371375-2"><span class="crayon-c"># Train on a small subset of the data to see what happens</span></div><div class="crayon-line" id="crayon-5c8ca78d64826252371375-3"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">RNNNumpy</span><span class="crayon-sy">(</span><span class="crayon-v">vocabulary_size</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64826252371375-4"><span class="crayon-v">losses</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">train_with_sgd</span><span class="crayon-sy">(</span><span class="crayon-v">model</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">X_train</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-cn">100</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_train</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-cn">100</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nepoch</span><span class="crayon-o">=</span><span class="crayon-cn">10</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">evaluate_loss_after</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0004 seconds] -->
<p></p>
<pre class="crayon-plain-tag">2015-09-30 10:08:19: Loss after num_examples_seen=0 epoch=0: 8.987425
2015-09-30 10:08:35: Loss after num_examples_seen=100 epoch=1: 8.976270
2015-09-30 10:08:50: Loss after num_examples_seen=200 epoch=2: 8.960212
2015-09-30 10:09:06: Loss after num_examples_seen=300 epoch=3: 8.930430
2015-09-30 10:09:22: Loss after num_examples_seen=400 epoch=4: 8.862264
2015-09-30 10:09:38: Loss after num_examples_seen=500 epoch=5: 6.913570
2015-09-30 10:09:53: Loss after num_examples_seen=600 epoch=6: 6.302493
2015-09-30 10:10:07: Loss after num_examples_seen=700 epoch=7: 6.014995
2015-09-30 10:10:24: Loss after num_examples_seen=800 epoch=8: 5.833877
2015-09-30 10:10:39: Loss after num_examples_seen=900 epoch=9: 5.710718</pre>
<p>Good, it seems like our implementation is at least doing something useful and decreasing the loss, just like we wanted.</p>
<h3>Training our Network with Theano and the GPU</h3>
<p>I have previously written a <a href="http://www.wildml.com/2015/09/speeding-up-your-neural-network-with-theano-and-the-gpu/">tutorial</a> on Theano, and since all our logic will stay exactly the same I won&#8217;t go through optimized code here again. I defined a <code>RNNTheano</code> class that replaces the numpy calculations with corresponding calculations in Theano. Just like the rest of this post, <a href="https://github.com/dennybritz/rnn-tutorial-rnnlm">the code is also available Github</a>.</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64827906831868" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64827906831868-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64827906831868-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64827906831868-3">3</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64827906831868-1"><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">seed</span><span class="crayon-sy">(</span><span class="crayon-cn">10</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64827906831868-2"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">RNNTheano</span><span class="crayon-sy">(</span><span class="crayon-v">vocabulary_size</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64827906831868-3"><span class="crayon-o">%</span><span class="crayon-k ">timeit</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">sgd_step</span><span class="crayon-sy">(</span><span class="crayon-v">X_train</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_train</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0.005</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>This time, one SGD step takes 70ms on my Mac (without GPU) and 23ms on a <a href="https://aws.amazon.com/ec2/instance-types/#g2">g2.2xlarge</a> Amazon EC2 instance with GPU. That&#8217;s a 15x improvement over our initial implementation and means we can train our model in hours/days instead of weeks. There are still a vast number of optimizations we could make, but we&#8217;re good enough for now.</p>
<p>To help you avoid spending days training a model I have pre-trained a Theano model with a hidden layer dimensionality of 50 and a vocabulary size of 8000. I trained it for 50 epochs in about 20 hours. The loss was was still decreasing and training longer would probably have resulted in a better model, but I was running out of time and wanted to publish this post. Feel free to try it out yourself and trian for longer. You can find the model parameters in <code>data/trained-model-theano.npz</code> in the Github repository and load them using the <code>load_model_parameters_theano</code> method:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64828249821719" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64828249821719-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64828249821719-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64828249821719-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64828249821719-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d64828249821719-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64828249821719-6">6</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64828249821719-1"><span class="crayon-st">from</span><span class="crayon-h"> </span><span class="crayon-e">utils </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-v">load_model_parameters_theano</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">save_model_parameters_theano</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64828249821719-2">&nbsp;</div><div class="crayon-line" id="crayon-5c8ca78d64828249821719-3"><span class="crayon-v">model</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">RNNTheano</span><span class="crayon-sy">(</span><span class="crayon-v">vocabulary_size</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">hidden_dim</span><span class="crayon-o">=</span><span class="crayon-cn">50</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64828249821719-4"><span class="crayon-c"># losses = train_with_sgd(model, X_train, y_train, nepoch=50)</span></div><div class="crayon-line" id="crayon-5c8ca78d64828249821719-5"><span class="crayon-c"># save_model_parameters_theano('./data/trained-model-theano.npz', model)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64828249821719-6"><span class="crayon-e">load_model_parameters_theano</span><span class="crayon-sy">(</span><span class="crayon-s">'./data/trained-model-theano.npz'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<h3>Generating Text</h3>
<p>Now that we have our model we can ask it to generate new text for us! Let&#8217;s implement a helper function to generate new sentences:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ca78d64829886821045" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-2">2</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-4">4</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-6">6</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-8">8</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-10">10</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-12">12</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-14">14</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-16">16</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-18">18</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-20">20</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-22">22</div><div class="crayon-num" data-line="crayon-5c8ca78d64829886821045-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ca78d64829886821045-24">24</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ca78d64829886821045-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">generate_sentence</span><span class="crayon-sy">(</span><span class="crayon-v">model</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># We start the sentence with the start token</span></div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">new_sentence</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">word_to_index</span><span class="crayon-sy">[</span><span class="crayon-v">sentence_start_token</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Repeat until we get an end token</span></div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-st">not</span><span class="crayon-h"> </span><span class="crayon-v">new_sentence</span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-v">word_to_index</span><span class="crayon-sy">[</span><span class="crayon-v">sentence_end_token</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">next_word_probs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">model</span><span class="crayon-sy">.</span><span class="crayon-e">forward_propagation</span><span class="crayon-sy">(</span><span class="crayon-v">new_sentence</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">sampled_word</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">word_to_index</span><span class="crayon-sy">[</span><span class="crayon-v">unknown_token</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># We don't want to sample unknown words</span></div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-v">sampled_word</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-v">word_to_index</span><span class="crayon-sy">[</span><span class="crayon-v">unknown_token</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">samples</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">multinomial</span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">next_word_probs</span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">sampled_word</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">argmax</span><span class="crayon-sy">(</span><span class="crayon-v">samples</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">new_sentence</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">sampled_word</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">sentence_str</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">index_to_word</span><span class="crayon-sy">[</span><span class="crayon-v">x</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">x</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">new_sentence</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-o">:</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-e">sentence_str</span></div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-15">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-16"><span class="crayon-v">num_sentences</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">10</span></div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-17"><span class="crayon-v">senten_min_length</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">7</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-18">&nbsp;</div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-19"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">range</span><span class="crayon-sy">(</span><span class="crayon-v">num_sentences</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">sent</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># We want long sentences, not sentences with one or two words</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">sent</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">amp</span><span class="crayon-sy">;</span><span class="crayon-v">lt</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">senten_min_length</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ca78d64829886821045-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">sent</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">generate_sentence</span><span class="crayon-sy">(</span><span class="crayon-v">model</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ca78d64829886821045-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">.</span><span class="crayon-e">join</span><span class="crayon-sy">(</span><span class="crayon-v">sent</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0009 seconds] -->
<p>A few selected (censored) sentences. I added capitalization.</p>
<ul>
<li>Anyway, to the city scene you&#8217;re an idiot teenager.</li>
<li>What ? ! ! ! ! ignore!</li>
<li>Screw fitness, you&#8217;re saying: https</li>
<li>Thanks for the advice to keep my thoughts around girls.</li>
<li>Yep, please disappear with the terrible generation.</li>
</ul>
<p>Looking at the generated sentences there are a few interesting things to note. The model successfully learn syntax. It properly places commas (usually before and&#8217;s and or&#8217;s) and ends sentence with punctuation. Sometimes it mimics internet speech such as multiple exclamation marks or smileys.</p>
<p>However, the vast majority of generated sentences don&#8217;t make sense or have grammatical errors (I really picked the best ones above). One reason could be that we did not train our network long enough (or didn&#8217;t use enough training data). That may be true, but it&#8217;s most likely not the main reason. <strong>Our vanilla RNN can&#8217;t generate meaningful text because it&#8217;s unable to learn dependencies between words that are several steps apart</strong>. That&#8217;s also why RNNs failed to gain popularity when they were first invented. They were beautiful in theory but didn&#8217;t work well in practice, and we didn&#8217;t immediately understand why.</p>
<p>Fortunately, the difficulties in training RNNs are <a href="http://arxiv.org/abs/1211.5063">much better understood</a> now. In the next part of this tutorial we will explore the Backpropagation Through Time (BPTT) algorithm in more detail and demonstrate what&#8217;s called the <em>vanishing gradient problem</em>. This will motivate our move to more sophisticated RNN models, such as LSTMs, which are the current state of the art for many tasks in NLP (and can generate much better reddit comments!). <strong>Everything you learned in this tutorial also applies to LSTMs and other RNN models, so don&#8217;t feel discouraged if the results for a vanilla RNN are worse then you expected.</strong></p>
<p>That&#8217;s it for now. <strong>Please leave questions or feedback in the comments!</strong> and don&#8217;t forget to check out the [code 1=&#8221;Github&#8221; language=&#8221;on&#8221;]<a href="https://github.com/dennybritz/rnn-tutorial-rnnlm">/code</a>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
</div><!-- .entry-content -->
<footer class="entry-footer"><span class="cat-tags-links"><span class="cat-links"><svg class="icon icon-folder-open" aria-hidden="true" role="img"> <use href="#icon-folder-open" xlink:href="#icon-folder-open"></use> </svg><span class="screen-reader-text">Categories</span><a href="http://www.wildml.com/category/deep-learning/" rel="category tag">Deep Learning</a>, <a href="http://www.wildml.com/category/gpu/" rel="category tag">GPU</a>, <a href="http://www.wildml.com/category/language-modeling/" rel="category tag">Language Modeling</a>, <a href="http://www.wildml.com/category/neural-networks/recurrent-neural-networks/" rel="category tag">Recurrent Neural Networks</a></span></span></footer> <!-- .entry-footer -->
</article><!-- #post-## -->
<div id="disqus_thread"></div>
<nav class="navigation post-navigation" role="navigation">
<h2 class="screen-reader-text">Post navigation</h2>
<div class="nav-links"><div class="nav-previous"><a href="http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns/" rel="prev"><span class="screen-reader-text">Previous Post</span><span aria-hidden="true" class="nav-subtitle">Previous</span> <span class="nav-title"><span class="nav-title-icon-wrapper"><svg class="icon icon-arrow-left" aria-hidden="true" role="img"> <use href="#icon-arrow-left" xlink:href="#icon-arrow-left"></use> </svg></span>Recurrent Neural Networks Tutorial, Part 1 &#8211; Introduction to RNNs</span></a></div><div class="nav-next"><a href="http://www.wildml.com/2015/10/recurrent-neural-networks-tutorial-part-3-backpropagation-through-time-and-vanishing-gradients/" rel="next"><span class="screen-reader-text">Next Post</span><span aria-hidden="true" class="nav-subtitle">Next</span> <span class="nav-title">Recurrent Neural Networks Tutorial, Part 3 &#8211; Backpropagation Through Time and Vanishing Gradients<span class="nav-title-icon-wrapper"><svg class="icon icon-arrow-right" aria-hidden="true" role="img"> <use href="#icon-arrow-right" xlink:href="#icon-arrow-right"></use> </svg></span></span></a></div></div>
</nav>
</main><!-- #main -->
</div><!-- #primary -->
<aside id="secondary" class="widget-area" role="complementary" aria-label="Blog Sidebar">
<section id="blog_subscription-2" class="widget widget_blog_subscription jetpack_subscription_widget"><h2 class="widget-title">Subscribe to Blog via Email</h2>
<form action="#" method="post" accept-charset="utf-8" id="subscribe-blog-blog_subscription-2">
<div id="subscribe-text"><p>Enter your email address to subscribe to this blog and receive notifications of new posts by email.</p>
</div>                    <p id="subscribe-email">
<label id="jetpack-subscribe-label"
class="screen-reader-text"
for="subscribe-field-blog_subscription-2">
Email Address                        </label>
<input type="email" name="email" required="required" class="required"
value=""
id="subscribe-field-blog_subscription-2"
placeholder="Email Address"/>
</p>
<p id="subscribe-submit">
<input type="hidden" name="action" value="subscribe"/>
<input type="hidden" name="source" value="http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano/18/"/>
<input type="hidden" name="sub-type" value="widget"/>
<input type="hidden" name="redirect_fragment" value="blog_subscription-2"/>
<button type="submit"
name="jetpack_subscriptions_widget"
>
Subscribe                        </button>
</p>
</form>
</section>		<section id="recent-posts-2" class="widget widget_recent_entries">		<h2 class="widget-title">Recent Posts</h2>		<ul>
<li>
<a href="http://www.wildml.com/2018/02/introduction-to-learning-to-trade-with-reinforcement-learning/">Introduction to Learning to Trade with Reinforcement Learning</a>
</li>
<li>
<a href="http://www.wildml.com/2017/12/ai-and-deep-learning-in-2017-a-year-in-review/">AI and Deep Learning in 2017 &#8211; A Year in Review</a>
</li>
<li>
<a href="http://www.wildml.com/2017/08/hype-or-not-some-perspective-on-openais-dota-2-bot/">Hype or Not? Some Perspective on OpenAI&#8217;s DotA 2 Bot</a>
</li>
<li>
<a href="http://www.wildml.com/2016/10/learning-reinforcement-learning/">Learning Reinforcement Learning (with Code, Exercises and Solutions)</a>
</li>
<li>
<a href="http://www.wildml.com/2016/08/rnns-in-tensorflow-a-practical-guide-and-undocumented-features/">RNNs in Tensorflow, a Practical Guide and Undocumented Features</a>
</li>
<li>
<a href="http://www.wildml.com/2016/07/deep-learning-for-chatbots-2-retrieval-based-model-tensorflow/">Deep Learning for Chatbots, Part 2 &#8211; Implementing a Retrieval-Based Model in Tensorflow</a>
</li>
<li>
<a href="http://www.wildml.com/2016/04/deep-learning-for-chatbots-part-1-introduction/">Deep Learning for Chatbots, Part 1 &#8211; Introduction</a>
</li>
<li>
<a href="http://www.wildml.com/2016/01/attention-and-memory-in-deep-learning-and-nlp/">Attention and Memory in Deep Learning and NLP</a>
</li>
</ul>
</section><section id="archives-2" class="widget widget_archive"><h2 class="widget-title">Archives</h2>		<ul>
<li><a href='http://www.wildml.com/2018/02/'>February 2018</a></li>
<li><a href='http://www.wildml.com/2017/12/'>December 2017</a></li>
<li><a href='http://www.wildml.com/2017/08/'>August 2017</a></li>
<li><a href='http://www.wildml.com/2016/10/'>October 2016</a></li>
<li><a href='http://www.wildml.com/2016/08/'>August 2016</a></li>
<li><a href='http://www.wildml.com/2016/07/'>July 2016</a></li>
<li><a href='http://www.wildml.com/2016/04/'>April 2016</a></li>
<li><a href='http://www.wildml.com/2016/01/'>January 2016</a></li>
<li><a href='http://www.wildml.com/2015/12/'>December 2015</a></li>
<li><a href='http://www.wildml.com/2015/11/'>November 2015</a></li>
<li><a href='http://www.wildml.com/2015/10/'>October 2015</a></li>
<li><a href='http://www.wildml.com/2015/09/'>September 2015</a></li>
</ul>
</section><section id="categories-2" class="widget widget_categories"><h2 class="widget-title">Categories</h2>		<ul>
<li class="cat-item cat-item-15"><a href="http://www.wildml.com/category/conversational-agents/" >Conversational Agents</a>
</li>
<li class="cat-item cat-item-8"><a href="http://www.wildml.com/category/neural-networks/convolutional-neural-networks/" >Convolutional Neural Networks</a>
</li>
<li class="cat-item cat-item-3"><a href="http://www.wildml.com/category/deep-learning/" >Deep Learning</a>
</li>
<li class="cat-item cat-item-4"><a href="http://www.wildml.com/category/gpu/" >GPU</a>
</li>
<li class="cat-item cat-item-7"><a href="http://www.wildml.com/category/language-modeling/" >Language Modeling</a>
</li>
<li class="cat-item cat-item-11"><a href="http://www.wildml.com/category/memory/" >Memory</a>
</li>
<li class="cat-item cat-item-2"><a href="http://www.wildml.com/category/neural-networks/" >Neural Networks</a>
</li>
<li class="cat-item cat-item-19"><a href="http://www.wildml.com/category/news/" >News</a>
</li>
<li class="cat-item cat-item-9"><a href="http://www.wildml.com/category/nlp/" >NLP</a>
</li>
<li class="cat-item cat-item-6"><a href="http://www.wildml.com/category/neural-networks/recurrent-neural-networks/" >Recurrent Neural Networks</a>
</li>
<li class="cat-item cat-item-17"><a href="http://www.wildml.com/category/reinforcement-learning/" >Reinforcement Learning</a>
</li>
<li class="cat-item cat-item-5"><a href="http://www.wildml.com/category/rnns/" >RNNs</a>
</li>
<li class="cat-item cat-item-16"><a href="http://www.wildml.com/category/tensorflow/" >Tensorflow</a>
</li>
<li class="cat-item cat-item-20"><a href="http://www.wildml.com/category/trading/" >Trading</a>
</li>
<li class="cat-item cat-item-1"><a href="http://www.wildml.com/category/uncategorized/" >Uncategorized</a>
</li>
</ul>
</section><section id="meta-2" class="widget widget_meta"><h2 class="widget-title">Meta</h2>			<ul>
<li><a href="http://www.wildml.com/wp-login.php">Log in</a></li>
<li><a href="http://www.wildml.com/feed/">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
<li><a href="http://www.wildml.com/comments/feed/">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
<li><a href="https://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>			</ul>
</section></aside><!-- #secondary -->
</div><!-- .wrap -->

</div><!-- #content -->
<footer id="colophon" class="site-footer" role="contentinfo">
<div class="wrap">
<aside class="widget-area" role="complementary" aria-label="Footer">
<div class="widget-column footer-widget-1">
</div>
<div class="widget-column footer-widget-2">
</div>
</aside><!-- .widget-area -->
<div class="site-info">
<a href="https://wordpress.org/" class="imprint">
Proudly powered by WordPress	</a>
</div><!-- .site-info -->
</div><!-- .wrap -->
</footer><!-- #colophon -->
</div><!-- .site-content-contain -->
</div><!-- #page -->
<div style="display:none">
</div>
<script type='text/javascript'>
/* <![CDATA[ */
var countVars = {"disqusShortname":"wildml"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/plugins/disqus-comment-system/public/js/comment_count.js?ver=3.0.17'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var embedVars = {"disqusConfig":{"integration":"wordpress 3.0.17"},"disqusIdentifier":"249 http:\/\/www.wildml.com\/?p=249","disqusShortname":"wildml","disqusTitle":"Recurrent Neural Networks Tutorial, Part 2 \u2013 Implementing a RNN with Python, Numpy and Theano","disqusUrl":"http:\/\/www.wildml.com\/2015\/09\/recurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano\/","postId":"249"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/plugins/disqus-comment-system/public/js/comment_embed.js?ver=3.0.17'></script>
<script type='text/javascript' src='https://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201911'></script>
<script type='text/javascript' src='https://secure.gravatar.com/js/gprofiles.js?ver=2019Maraa'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=5.1.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var twentyseventeenScreenReaderText = {"quote":"<svg class=\"icon icon-quote-right\" aria-hidden=\"true\" role=\"img\"> <use href=\"#icon-quote-right\" xlink:href=\"#icon-quote-right\"><\/use> <\/svg>","expand":"Expand child menu","collapse":"Collapse child menu","icon":"<svg class=\"icon icon-angle-down\" aria-hidden=\"true\" role=\"img\"> <use href=\"#icon-angle-down\" xlink:href=\"#icon-angle-down\"><\/use> <span class=\"svg-fallback icon-angle-down\"><\/span><\/svg>"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/js/skip-link-focus-fix.js?ver=1.0'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/js/navigation.js?ver=1.0'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/js/global.js?ver=1.0'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/js/jquery.scrollTo.js?ver=2.1.2'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-includes/js/comment-reply.min.js?ver=5.1.1'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-includes/js/wp-embed.min.js?ver=5.1.1'></script>
<script type='text/javascript' src='https://stats.wp.com/e-201911.js' async='async' defer='defer'></script>
<script type='text/javascript'>
_stq = window._stq || [];
_stq.push([ 'view', {v:'ext',j:'1:7.1.1',blog:'98789418',post:'249',tz:'-7',srv:'www.wildml.com'} ]);
_stq.push([ 'clickTrackerInit', '98789418', '249' ]);
</script>
<svg style="position: absolute; width: 0; height: 0; overflow: hidden;" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<defs>
<symbol id="icon-behance" viewBox="0 0 37 32">
<path class="path1" d="M33 6.054h-9.125v2.214h9.125v-2.214zM28.5 13.661q-1.607 0-2.607 0.938t-1.107 2.545h7.286q-0.321-3.482-3.571-3.482zM28.786 24.107q1.125 0 2.179-0.571t1.357-1.554h3.946q-1.786 5.482-7.625 5.482-3.821 0-6.080-2.357t-2.259-6.196q0-3.714 2.33-6.17t6.009-2.455q2.464 0 4.295 1.214t2.732 3.196 0.902 4.429q0 0.304-0.036 0.839h-11.75q0 1.982 1.027 3.063t2.973 1.080zM4.946 23.214h5.286q3.661 0 3.661-2.982 0-3.214-3.554-3.214h-5.393v6.196zM4.946 13.625h5.018q1.393 0 2.205-0.652t0.813-2.027q0-2.571-3.393-2.571h-4.643v5.25zM0 4.536h10.607q1.554 0 2.768 0.25t2.259 0.848 1.607 1.723 0.563 2.75q0 3.232-3.071 4.696 2.036 0.571 3.071 2.054t1.036 3.643q0 1.339-0.438 2.438t-1.179 1.848-1.759 1.268-2.161 0.75-2.393 0.232h-10.911v-22.5z"></path>
</symbol>
<symbol id="icon-deviantart" viewBox="0 0 18 32">
<path class="path1" d="M18.286 5.411l-5.411 10.393 0.429 0.554h4.982v7.411h-9.054l-0.786 0.536-2.536 4.875-0.536 0.536h-5.375v-5.411l5.411-10.411-0.429-0.536h-4.982v-7.411h9.054l0.786-0.536 2.536-4.875 0.536-0.536h5.375v5.411z"></path>
</symbol>
<symbol id="icon-medium" viewBox="0 0 32 32">
<path class="path1" d="M10.661 7.518v20.946q0 0.446-0.223 0.759t-0.652 0.313q-0.304 0-0.589-0.143l-8.304-4.161q-0.375-0.179-0.634-0.598t-0.259-0.83v-20.357q0-0.357 0.179-0.607t0.518-0.25q0.25 0 0.786 0.268l9.125 4.571q0.054 0.054 0.054 0.089zM11.804 9.321l9.536 15.464-9.536-4.75v-10.714zM32 9.643v18.821q0 0.446-0.25 0.723t-0.679 0.277-0.839-0.232l-7.875-3.929zM31.946 7.5q0 0.054-4.58 7.491t-5.366 8.705l-6.964-11.321 5.786-9.411q0.304-0.5 0.929-0.5 0.25 0 0.464 0.107l9.661 4.821q0.071 0.036 0.071 0.107z"></path>
</symbol>
<symbol id="icon-slideshare" viewBox="0 0 32 32">
<path class="path1" d="M15.589 13.214q0 1.482-1.134 2.545t-2.723 1.063-2.723-1.063-1.134-2.545q0-1.5 1.134-2.554t2.723-1.054 2.723 1.054 1.134 2.554zM24.554 13.214q0 1.482-1.125 2.545t-2.732 1.063q-1.589 0-2.723-1.063t-1.134-2.545q0-1.5 1.134-2.554t2.723-1.054q1.607 0 2.732 1.054t1.125 2.554zM28.571 16.429v-11.911q0-1.554-0.571-2.205t-1.982-0.652h-19.857q-1.482 0-2.009 0.607t-0.527 2.25v12.018q0.768 0.411 1.58 0.714t1.446 0.5 1.446 0.33 1.268 0.196 1.25 0.071 1.045 0.009 1.009-0.036 0.795-0.036q1.214-0.018 1.696 0.482 0.107 0.107 0.179 0.161 0.464 0.446 1.089 0.911 0.125-1.625 2.107-1.554 0.089 0 0.652 0.027t0.768 0.036 0.813 0.018 0.946-0.018 0.973-0.080 1.089-0.152 1.107-0.241 1.196-0.348 1.205-0.482 1.286-0.616zM31.482 16.339q-2.161 2.661-6.643 4.5 1.5 5.089-0.411 8.304-1.179 2.018-3.268 2.643-1.857 0.571-3.25-0.268-1.536-0.911-1.464-2.929l-0.018-5.821v-0.018q-0.143-0.036-0.438-0.107t-0.42-0.089l-0.018 6.036q0.071 2.036-1.482 2.929-1.411 0.839-3.268 0.268-2.089-0.643-3.25-2.679-1.875-3.214-0.393-8.268-4.482-1.839-6.643-4.5-0.446-0.661-0.071-1.125t1.071 0.018q0.054 0.036 0.196 0.125t0.196 0.143v-12.393q0-1.286 0.839-2.196t2.036-0.911h22.446q1.196 0 2.036 0.911t0.839 2.196v12.393l0.375-0.268q0.696-0.482 1.071-0.018t-0.071 1.125z"></path>
</symbol>
<symbol id="icon-snapchat-ghost" viewBox="0 0 30 32">
<path class="path1" d="M15.143 2.286q2.393-0.018 4.295 1.223t2.92 3.438q0.482 1.036 0.482 3.196 0 0.839-0.161 3.411 0.25 0.125 0.5 0.125 0.321 0 0.911-0.241t0.911-0.241q0.518 0 1 0.321t0.482 0.821q0 0.571-0.563 0.964t-1.232 0.563-1.232 0.518-0.563 0.848q0 0.268 0.214 0.768 0.661 1.464 1.83 2.679t2.58 1.804q0.5 0.214 1.429 0.411 0.5 0.107 0.5 0.625 0 1.25-3.911 1.839-0.125 0.196-0.196 0.696t-0.25 0.83-0.589 0.33q-0.357 0-1.107-0.116t-1.143-0.116q-0.661 0-1.107 0.089-0.571 0.089-1.125 0.402t-1.036 0.679-1.036 0.723-1.357 0.598-1.768 0.241q-0.929 0-1.723-0.241t-1.339-0.598-1.027-0.723-1.036-0.679-1.107-0.402q-0.464-0.089-1.125-0.089-0.429 0-1.17 0.134t-1.045 0.134q-0.446 0-0.625-0.33t-0.25-0.848-0.196-0.714q-3.911-0.589-3.911-1.839 0-0.518 0.5-0.625 0.929-0.196 1.429-0.411 1.393-0.571 2.58-1.804t1.83-2.679q0.214-0.5 0.214-0.768 0-0.5-0.563-0.848t-1.241-0.527-1.241-0.563-0.563-0.938q0-0.482 0.464-0.813t0.982-0.33q0.268 0 0.857 0.232t0.946 0.232q0.321 0 0.571-0.125-0.161-2.536-0.161-3.393 0-2.179 0.482-3.214 1.143-2.446 3.071-3.536t4.714-1.125z"></path>
</symbol>
<symbol id="icon-yelp" viewBox="0 0 27 32">
<path class="path1" d="M13.804 23.554v2.268q-0.018 5.214-0.107 5.446-0.214 0.571-0.911 0.714-0.964 0.161-3.241-0.679t-2.902-1.589q-0.232-0.268-0.304-0.643-0.018-0.214 0.071-0.464 0.071-0.179 0.607-0.839t3.232-3.857q0.018 0 1.071-1.25 0.268-0.339 0.705-0.438t0.884 0.063q0.429 0.179 0.67 0.518t0.223 0.75zM11.143 19.071q-0.054 0.982-0.929 1.25l-2.143 0.696q-4.911 1.571-5.214 1.571-0.625-0.036-0.964-0.643-0.214-0.446-0.304-1.339-0.143-1.357 0.018-2.973t0.536-2.223 1-0.571q0.232 0 3.607 1.375 1.25 0.518 2.054 0.839l1.5 0.607q0.411 0.161 0.634 0.545t0.205 0.866zM25.893 24.375q-0.125 0.964-1.634 2.875t-2.42 2.268q-0.661 0.25-1.125-0.125-0.25-0.179-3.286-5.125l-0.839-1.375q-0.25-0.375-0.205-0.821t0.348-0.821q0.625-0.768 1.482-0.464 0.018 0.018 2.125 0.714 3.625 1.179 4.321 1.42t0.839 0.366q0.5 0.393 0.393 1.089zM13.893 13.089q0.089 1.821-0.964 2.179-1.036 0.304-2.036-1.268l-6.75-10.679q-0.143-0.625 0.339-1.107 0.732-0.768 3.705-1.598t4.009-0.563q0.714 0.179 0.875 0.804 0.054 0.321 0.393 5.455t0.429 6.777zM25.714 15.018q0.054 0.696-0.464 1.054-0.268 0.179-5.875 1.536-1.196 0.268-1.625 0.411l0.018-0.036q-0.411 0.107-0.821-0.071t-0.661-0.571q-0.536-0.839 0-1.554 0.018-0.018 1.339-1.821 2.232-3.054 2.679-3.643t0.607-0.696q0.5-0.339 1.161-0.036 0.857 0.411 2.196 2.384t1.446 2.991v0.054z"></path>
</symbol>
<symbol id="icon-vine" viewBox="0 0 27 32">
<path class="path1" d="M26.732 14.768v3.536q-1.804 0.411-3.536 0.411-1.161 2.429-2.955 4.839t-3.241 3.848-2.286 1.902q-1.429 0.804-2.893-0.054-0.5-0.304-1.080-0.777t-1.518-1.491-1.83-2.295-1.92-3.286-1.884-4.357-1.634-5.616-1.259-6.964h5.054q0.464 3.893 1.25 7.116t1.866 5.661 2.17 4.205 2.5 3.482q3.018-3.018 5.125-7.25-2.536-1.286-3.982-3.929t-1.446-5.946q0-3.429 1.857-5.616t5.071-2.188q3.179 0 4.875 1.884t1.696 5.313q0 2.839-1.036 5.107-0.125 0.018-0.348 0.054t-0.821 0.036-1.125-0.107-1.107-0.455-0.902-0.92q0.554-1.839 0.554-3.286 0-1.554-0.518-2.357t-1.411-0.804q-0.946 0-1.518 0.884t-0.571 2.509q0 3.321 1.875 5.241t4.768 1.92q1.107 0 2.161-0.25z"></path>
</symbol>
<symbol id="icon-vk" viewBox="0 0 35 32">
<path class="path1" d="M34.232 9.286q0.411 1.143-2.679 5.25-0.429 0.571-1.161 1.518-1.393 1.786-1.607 2.339-0.304 0.732 0.25 1.446 0.304 0.375 1.446 1.464h0.018l0.071 0.071q2.518 2.339 3.411 3.946 0.054 0.089 0.116 0.223t0.125 0.473-0.009 0.607-0.446 0.491-1.054 0.223l-4.571 0.071q-0.429 0.089-1-0.089t-0.929-0.393l-0.357-0.214q-0.536-0.375-1.25-1.143t-1.223-1.384-1.089-1.036-1.009-0.277q-0.054 0.018-0.143 0.063t-0.304 0.259-0.384 0.527-0.304 0.929-0.116 1.384q0 0.268-0.063 0.491t-0.134 0.33l-0.071 0.089q-0.321 0.339-0.946 0.393h-2.054q-1.268 0.071-2.607-0.295t-2.348-0.946-1.839-1.179-1.259-1.027l-0.446-0.429q-0.179-0.179-0.491-0.536t-1.277-1.625-1.893-2.696-2.188-3.768-2.33-4.857q-0.107-0.286-0.107-0.482t0.054-0.286l0.071-0.107q0.268-0.339 1.018-0.339l4.893-0.036q0.214 0.036 0.411 0.116t0.286 0.152l0.089 0.054q0.286 0.196 0.429 0.571 0.357 0.893 0.821 1.848t0.732 1.455l0.286 0.518q0.518 1.071 1 1.857t0.866 1.223 0.741 0.688 0.607 0.25 0.482-0.089q0.036-0.018 0.089-0.089t0.214-0.393 0.241-0.839 0.17-1.446 0-2.232q-0.036-0.714-0.161-1.304t-0.25-0.821l-0.107-0.214q-0.446-0.607-1.518-0.768-0.232-0.036 0.089-0.429 0.304-0.339 0.679-0.536 0.946-0.464 4.268-0.429 1.464 0.018 2.411 0.232 0.357 0.089 0.598 0.241t0.366 0.429 0.188 0.571 0.063 0.813-0.018 0.982-0.045 1.259-0.027 1.473q0 0.196-0.018 0.75t-0.009 0.857 0.063 0.723 0.205 0.696 0.402 0.438q0.143 0.036 0.304 0.071t0.464-0.196 0.679-0.616 0.929-1.196 1.214-1.92q1.071-1.857 1.911-4.018 0.071-0.179 0.179-0.313t0.196-0.188l0.071-0.054 0.089-0.045t0.232-0.054 0.357-0.009l5.143-0.036q0.696-0.089 1.143 0.045t0.554 0.295z"></path>
</symbol>
<symbol id="icon-search" viewBox="0 0 30 32">
<path class="path1" d="M20.571 14.857q0-3.304-2.348-5.652t-5.652-2.348-5.652 2.348-2.348 5.652 2.348 5.652 5.652 2.348 5.652-2.348 2.348-5.652zM29.714 29.714q0 0.929-0.679 1.607t-1.607 0.679q-0.964 0-1.607-0.679l-6.125-6.107q-3.196 2.214-7.125 2.214-2.554 0-4.884-0.991t-4.018-2.679-2.679-4.018-0.991-4.884 0.991-4.884 2.679-4.018 4.018-2.679 4.884-0.991 4.884 0.991 4.018 2.679 2.679 4.018 0.991 4.884q0 3.929-2.214 7.125l6.125 6.125q0.661 0.661 0.661 1.607z"></path>
</symbol>
<symbol id="icon-envelope-o" viewBox="0 0 32 32">
<path class="path1" d="M29.714 26.857v-13.714q-0.571 0.643-1.232 1.179-4.786 3.679-7.607 6.036-0.911 0.768-1.482 1.196t-1.545 0.866-1.83 0.438h-0.036q-0.857 0-1.83-0.438t-1.545-0.866-1.482-1.196q-2.821-2.357-7.607-6.036-0.661-0.536-1.232-1.179v13.714q0 0.232 0.17 0.402t0.402 0.17h26.286q0.232 0 0.402-0.17t0.17-0.402zM29.714 8.089v-0.438t-0.009-0.232-0.054-0.223-0.098-0.161-0.161-0.134-0.25-0.045h-26.286q-0.232 0-0.402 0.17t-0.17 0.402q0 3 2.625 5.071 3.446 2.714 7.161 5.661 0.107 0.089 0.625 0.527t0.821 0.67 0.795 0.563 0.902 0.491 0.768 0.161h0.036q0.357 0 0.768-0.161t0.902-0.491 0.795-0.563 0.821-0.67 0.625-0.527q3.714-2.946 7.161-5.661 0.964-0.768 1.795-2.063t0.83-2.348zM32 7.429v19.429q0 1.179-0.839 2.018t-2.018 0.839h-26.286q-1.179 0-2.018-0.839t-0.839-2.018v-19.429q0-1.179 0.839-2.018t2.018-0.839h26.286q1.179 0 2.018 0.839t0.839 2.018z"></path>
</symbol>
<symbol id="icon-close" viewBox="0 0 25 32">
<path class="path1" d="M23.179 23.607q0 0.714-0.5 1.214l-2.429 2.429q-0.5 0.5-1.214 0.5t-1.214-0.5l-5.25-5.25-5.25 5.25q-0.5 0.5-1.214 0.5t-1.214-0.5l-2.429-2.429q-0.5-0.5-0.5-1.214t0.5-1.214l5.25-5.25-5.25-5.25q-0.5-0.5-0.5-1.214t0.5-1.214l2.429-2.429q0.5-0.5 1.214-0.5t1.214 0.5l5.25 5.25 5.25-5.25q0.5-0.5 1.214-0.5t1.214 0.5l2.429 2.429q0.5 0.5 0.5 1.214t-0.5 1.214l-5.25 5.25 5.25 5.25q0.5 0.5 0.5 1.214z"></path>
</symbol>
<symbol id="icon-angle-down" viewBox="0 0 21 32">
<path class="path1" d="M19.196 13.143q0 0.232-0.179 0.411l-8.321 8.321q-0.179 0.179-0.411 0.179t-0.411-0.179l-8.321-8.321q-0.179-0.179-0.179-0.411t0.179-0.411l0.893-0.893q0.179-0.179 0.411-0.179t0.411 0.179l7.018 7.018 7.018-7.018q0.179-0.179 0.411-0.179t0.411 0.179l0.893 0.893q0.179 0.179 0.179 0.411z"></path>
</symbol>
<symbol id="icon-folder-open" viewBox="0 0 34 32">
<path class="path1" d="M33.554 17q0 0.554-0.554 1.179l-6 7.071q-0.768 0.911-2.152 1.545t-2.563 0.634h-19.429q-0.607 0-1.080-0.232t-0.473-0.768q0-0.554 0.554-1.179l6-7.071q0.768-0.911 2.152-1.545t2.563-0.634h19.429q0.607 0 1.080 0.232t0.473 0.768zM27.429 10.857v2.857h-14.857q-1.679 0-3.518 0.848t-2.929 2.134l-6.107 7.179q0-0.071-0.009-0.223t-0.009-0.223v-17.143q0-1.643 1.179-2.821t2.821-1.179h5.714q1.643 0 2.821 1.179t1.179 2.821v0.571h9.714q1.643 0 2.821 1.179t1.179 2.821z"></path>
</symbol>
<symbol id="icon-twitter" viewBox="0 0 30 32">
<path class="path1" d="M28.929 7.286q-1.196 1.75-2.893 2.982 0.018 0.25 0.018 0.75 0 2.321-0.679 4.634t-2.063 4.437-3.295 3.759-4.607 2.607-5.768 0.973q-4.839 0-8.857-2.589 0.625 0.071 1.393 0.071 4.018 0 7.161-2.464-1.875-0.036-3.357-1.152t-2.036-2.848q0.589 0.089 1.089 0.089 0.768 0 1.518-0.196-2-0.411-3.313-1.991t-1.313-3.67v-0.071q1.214 0.679 2.607 0.732-1.179-0.786-1.875-2.054t-0.696-2.75q0-1.571 0.786-2.911 2.161 2.661 5.259 4.259t6.634 1.777q-0.143-0.679-0.143-1.321 0-2.393 1.688-4.080t4.080-1.688q2.5 0 4.214 1.821 1.946-0.375 3.661-1.393-0.661 2.054-2.536 3.179 1.661-0.179 3.321-0.893z"></path>
</symbol>
<symbol id="icon-facebook" viewBox="0 0 19 32">
<path class="path1" d="M17.125 0.214v4.714h-2.804q-1.536 0-2.071 0.643t-0.536 1.929v3.375h5.232l-0.696 5.286h-4.536v13.554h-5.464v-13.554h-4.554v-5.286h4.554v-3.893q0-3.321 1.857-5.152t4.946-1.83q2.625 0 4.071 0.214z"></path>
</symbol>
<symbol id="icon-github" viewBox="0 0 27 32">
<path class="path1" d="M13.714 2.286q3.732 0 6.884 1.839t4.991 4.991 1.839 6.884q0 4.482-2.616 8.063t-6.759 4.955q-0.482 0.089-0.714-0.125t-0.232-0.536q0-0.054 0.009-1.366t0.009-2.402q0-1.732-0.929-2.536 1.018-0.107 1.83-0.321t1.679-0.696 1.446-1.188 0.946-1.875 0.366-2.688q0-2.125-1.411-3.679 0.661-1.625-0.143-3.643-0.5-0.161-1.446 0.196t-1.643 0.786l-0.679 0.429q-1.661-0.464-3.429-0.464t-3.429 0.464q-0.286-0.196-0.759-0.482t-1.491-0.688-1.518-0.241q-0.804 2.018-0.143 3.643-1.411 1.554-1.411 3.679 0 1.518 0.366 2.679t0.938 1.875 1.438 1.196 1.679 0.696 1.83 0.321q-0.696 0.643-0.875 1.839-0.375 0.179-0.804 0.268t-1.018 0.089-1.17-0.384-0.991-1.116q-0.339-0.571-0.866-0.929t-0.884-0.429l-0.357-0.054q-0.375 0-0.518 0.080t-0.089 0.205 0.161 0.25 0.232 0.214l0.125 0.089q0.393 0.179 0.777 0.679t0.563 0.911l0.179 0.411q0.232 0.679 0.786 1.098t1.196 0.536 1.241 0.125 0.991-0.063l0.411-0.071q0 0.679 0.009 1.58t0.009 0.973q0 0.321-0.232 0.536t-0.714 0.125q-4.143-1.375-6.759-4.955t-2.616-8.063q0-3.732 1.839-6.884t4.991-4.991 6.884-1.839zM5.196 21.982q0.054-0.125-0.125-0.214-0.179-0.054-0.232 0.036-0.054 0.125 0.125 0.214 0.161 0.107 0.232-0.036zM5.75 22.589q0.125-0.089-0.036-0.286-0.179-0.161-0.286-0.054-0.125 0.089 0.036 0.286 0.179 0.179 0.286 0.054zM6.286 23.393q0.161-0.125 0-0.339-0.143-0.232-0.304-0.107-0.161 0.089 0 0.321t0.304 0.125zM7.036 24.143q0.143-0.143-0.071-0.339-0.214-0.214-0.357-0.054-0.161 0.143 0.071 0.339 0.214 0.214 0.357 0.054zM8.054 24.589q0.054-0.196-0.232-0.286-0.268-0.071-0.339 0.125t0.232 0.268q0.268 0.107 0.339-0.107zM9.179 24.679q0-0.232-0.304-0.196-0.286 0-0.286 0.196 0 0.232 0.304 0.196 0.286 0 0.286-0.196zM10.214 24.5q-0.036-0.196-0.321-0.161-0.286 0.054-0.25 0.268t0.321 0.143 0.25-0.25z"></path>
</symbol>
<symbol id="icon-bars" viewBox="0 0 27 32">
<path class="path1" d="M27.429 24v2.286q0 0.464-0.339 0.804t-0.804 0.339h-25.143q-0.464 0-0.804-0.339t-0.339-0.804v-2.286q0-0.464 0.339-0.804t0.804-0.339h25.143q0.464 0 0.804 0.339t0.339 0.804zM27.429 14.857v2.286q0 0.464-0.339 0.804t-0.804 0.339h-25.143q-0.464 0-0.804-0.339t-0.339-0.804v-2.286q0-0.464 0.339-0.804t0.804-0.339h25.143q0.464 0 0.804 0.339t0.339 0.804zM27.429 5.714v2.286q0 0.464-0.339 0.804t-0.804 0.339h-25.143q-0.464 0-0.804-0.339t-0.339-0.804v-2.286q0-0.464 0.339-0.804t0.804-0.339h25.143q0.464 0 0.804 0.339t0.339 0.804z"></path>
</symbol>
<symbol id="icon-google-plus" viewBox="0 0 41 32">
<path class="path1" d="M25.661 16.304q0 3.714-1.554 6.616t-4.429 4.536-6.589 1.634q-2.661 0-5.089-1.036t-4.179-2.786-2.786-4.179-1.036-5.089 1.036-5.089 2.786-4.179 4.179-2.786 5.089-1.036q5.107 0 8.768 3.429l-3.554 3.411q-2.089-2.018-5.214-2.018-2.196 0-4.063 1.107t-2.955 3.009-1.089 4.152 1.089 4.152 2.955 3.009 4.063 1.107q1.482 0 2.723-0.411t2.045-1.027 1.402-1.402 0.875-1.482 0.384-1.321h-7.429v-4.5h12.357q0.214 1.125 0.214 2.179zM41.143 14.125v3.75h-3.732v3.732h-3.75v-3.732h-3.732v-3.75h3.732v-3.732h3.75v3.732h3.732z"></path>
</symbol>
<symbol id="icon-linkedin" viewBox="0 0 27 32">
<path class="path1" d="M6.232 11.161v17.696h-5.893v-17.696h5.893zM6.607 5.696q0.018 1.304-0.902 2.179t-2.42 0.875h-0.036q-1.464 0-2.357-0.875t-0.893-2.179q0-1.321 0.92-2.188t2.402-0.866 2.375 0.866 0.911 2.188zM27.429 18.714v10.143h-5.875v-9.464q0-1.875-0.723-2.938t-2.259-1.063q-1.125 0-1.884 0.616t-1.134 1.527q-0.196 0.536-0.196 1.446v9.875h-5.875q0.036-7.125 0.036-11.554t-0.018-5.286l-0.018-0.857h5.875v2.571h-0.036q0.357-0.571 0.732-1t1.009-0.929 1.554-0.777 2.045-0.277q3.054 0 4.911 2.027t1.857 5.938z"></path>
</symbol>
<symbol id="icon-quote-right" viewBox="0 0 30 32">
<path class="path1" d="M13.714 5.714v12.571q0 1.857-0.723 3.545t-1.955 2.92-2.92 1.955-3.545 0.723h-1.143q-0.464 0-0.804-0.339t-0.339-0.804v-2.286q0-0.464 0.339-0.804t0.804-0.339h1.143q1.893 0 3.232-1.339t1.339-3.232v-0.571q0-0.714-0.5-1.214t-1.214-0.5h-4q-1.429 0-2.429-1t-1-2.429v-6.857q0-1.429 1-2.429t2.429-1h6.857q1.429 0 2.429 1t1 2.429zM29.714 5.714v12.571q0 1.857-0.723 3.545t-1.955 2.92-2.92 1.955-3.545 0.723h-1.143q-0.464 0-0.804-0.339t-0.339-0.804v-2.286q0-0.464 0.339-0.804t0.804-0.339h1.143q1.893 0 3.232-1.339t1.339-3.232v-0.571q0-0.714-0.5-1.214t-1.214-0.5h-4q-1.429 0-2.429-1t-1-2.429v-6.857q0-1.429 1-2.429t2.429-1h6.857q1.429 0 2.429 1t1 2.429z"></path>
</symbol>
<symbol id="icon-mail-reply" viewBox="0 0 32 32">
<path class="path1" d="M32 20q0 2.964-2.268 8.054-0.054 0.125-0.188 0.429t-0.241 0.536-0.232 0.393q-0.214 0.304-0.5 0.304-0.268 0-0.42-0.179t-0.152-0.446q0-0.161 0.045-0.473t0.045-0.42q0.089-1.214 0.089-2.196 0-1.804-0.313-3.232t-0.866-2.473-1.429-1.804-1.884-1.241-2.375-0.759-2.75-0.384-3.134-0.107h-4v4.571q0 0.464-0.339 0.804t-0.804 0.339-0.804-0.339l-9.143-9.143q-0.339-0.339-0.339-0.804t0.339-0.804l9.143-9.143q0.339-0.339 0.804-0.339t0.804 0.339 0.339 0.804v4.571h4q12.732 0 15.625 7.196 0.946 2.393 0.946 5.946z"></path>
</symbol>
<symbol id="icon-youtube" viewBox="0 0 27 32">
<path class="path1" d="M17.339 22.214v3.768q0 1.196-0.696 1.196-0.411 0-0.804-0.393v-5.375q0.393-0.393 0.804-0.393 0.696 0 0.696 1.196zM23.375 22.232v0.821h-1.607v-0.821q0-1.214 0.804-1.214t0.804 1.214zM6.125 18.339h1.911v-1.679h-5.571v1.679h1.875v10.161h1.786v-10.161zM11.268 28.5h1.589v-8.821h-1.589v6.75q-0.536 0.75-1.018 0.75-0.321 0-0.375-0.375-0.018-0.054-0.018-0.625v-6.5h-1.589v6.982q0 0.875 0.143 1.304 0.214 0.661 1.036 0.661 0.857 0 1.821-1.089v0.964zM18.929 25.857v-3.518q0-1.304-0.161-1.768-0.304-1-1.268-1-0.893 0-1.661 0.964v-3.875h-1.589v11.839h1.589v-0.857q0.804 0.982 1.661 0.982 0.964 0 1.268-0.982 0.161-0.482 0.161-1.786zM24.964 25.679v-0.232h-1.625q0 0.911-0.036 1.089-0.125 0.643-0.714 0.643-0.821 0-0.821-1.232v-1.554h3.196v-1.839q0-1.411-0.482-2.071-0.696-0.911-1.893-0.911-1.214 0-1.911 0.911-0.5 0.661-0.5 2.071v3.089q0 1.411 0.518 2.071 0.696 0.911 1.929 0.911 1.286 0 1.929-0.946 0.321-0.482 0.375-0.964 0.036-0.161 0.036-1.036zM14.107 9.375v-3.75q0-1.232-0.768-1.232t-0.768 1.232v3.75q0 1.25 0.768 1.25t0.768-1.25zM26.946 22.786q0 4.179-0.464 6.25-0.25 1.054-1.036 1.768t-1.821 0.821q-3.286 0.375-9.911 0.375t-9.911-0.375q-1.036-0.107-1.83-0.821t-1.027-1.768q-0.464-2-0.464-6.25 0-4.179 0.464-6.25 0.25-1.054 1.036-1.768t1.839-0.839q3.268-0.357 9.893-0.357t9.911 0.357q1.036 0.125 1.83 0.839t1.027 1.768q0.464 2 0.464 6.25zM9.125 0h1.821l-2.161 7.125v4.839h-1.786v-4.839q-0.25-1.321-1.089-3.786-0.661-1.839-1.161-3.339h1.893l1.268 4.696zM15.732 5.946v3.125q0 1.446-0.5 2.107-0.661 0.911-1.893 0.911-1.196 0-1.875-0.911-0.5-0.679-0.5-2.107v-3.125q0-1.429 0.5-2.089 0.679-0.911 1.875-0.911 1.232 0 1.893 0.911 0.5 0.661 0.5 2.089zM21.714 3.054v8.911h-1.625v-0.982q-0.946 1.107-1.839 1.107-0.821 0-1.054-0.661-0.143-0.429-0.143-1.339v-7.036h1.625v6.554q0 0.589 0.018 0.625 0.054 0.393 0.375 0.393 0.482 0 1.018-0.768v-6.804h1.625z"></path>
</symbol>
<symbol id="icon-dropbox" viewBox="0 0 32 32">
<path class="path1" d="M7.179 12.625l8.821 5.446-6.107 5.089-8.75-5.696zM24.786 22.536v1.929l-8.75 5.232v0.018l-0.018-0.018-0.018 0.018v-0.018l-8.732-5.232v-1.929l2.625 1.714 6.107-5.071v-0.036l0.018 0.018 0.018-0.018v0.036l6.125 5.071zM9.893 2.107l6.107 5.089-8.821 5.429-6.036-4.821zM24.821 12.625l6.036 4.839-8.732 5.696-6.125-5.089zM22.125 2.107l8.732 5.696-6.036 4.821-8.821-5.429z"></path>
</symbol>
<symbol id="icon-instagram" viewBox="0 0 27 32">
<path class="path1" d="M18.286 16q0-1.893-1.339-3.232t-3.232-1.339-3.232 1.339-1.339 3.232 1.339 3.232 3.232 1.339 3.232-1.339 1.339-3.232zM20.75 16q0 2.929-2.054 4.982t-4.982 2.054-4.982-2.054-2.054-4.982 2.054-4.982 4.982-2.054 4.982 2.054 2.054 4.982zM22.679 8.679q0 0.679-0.482 1.161t-1.161 0.482-1.161-0.482-0.482-1.161 0.482-1.161 1.161-0.482 1.161 0.482 0.482 1.161zM13.714 4.75q-0.125 0-1.366-0.009t-1.884 0-1.723 0.054-1.839 0.179-1.277 0.33q-0.893 0.357-1.571 1.036t-1.036 1.571q-0.196 0.518-0.33 1.277t-0.179 1.839-0.054 1.723 0 1.884 0.009 1.366-0.009 1.366 0 1.884 0.054 1.723 0.179 1.839 0.33 1.277q0.357 0.893 1.036 1.571t1.571 1.036q0.518 0.196 1.277 0.33t1.839 0.179 1.723 0.054 1.884 0 1.366-0.009 1.366 0.009 1.884 0 1.723-0.054 1.839-0.179 1.277-0.33q0.893-0.357 1.571-1.036t1.036-1.571q0.196-0.518 0.33-1.277t0.179-1.839 0.054-1.723 0-1.884-0.009-1.366 0.009-1.366 0-1.884-0.054-1.723-0.179-1.839-0.33-1.277q-0.357-0.893-1.036-1.571t-1.571-1.036q-0.518-0.196-1.277-0.33t-1.839-0.179-1.723-0.054-1.884 0-1.366 0.009zM27.429 16q0 4.089-0.089 5.661-0.179 3.714-2.214 5.75t-5.75 2.214q-1.571 0.089-5.661 0.089t-5.661-0.089q-3.714-0.179-5.75-2.214t-2.214-5.75q-0.089-1.571-0.089-5.661t0.089-5.661q0.179-3.714 2.214-5.75t5.75-2.214q1.571-0.089 5.661-0.089t5.661 0.089q3.714 0.179 5.75 2.214t2.214 5.75q0.089 1.571 0.089 5.661z"></path>
</symbol>
<symbol id="icon-flickr" viewBox="0 0 27 32">
<path class="path1" d="M22.286 2.286q2.125 0 3.634 1.509t1.509 3.634v17.143q0 2.125-1.509 3.634t-3.634 1.509h-17.143q-2.125 0-3.634-1.509t-1.509-3.634v-17.143q0-2.125 1.509-3.634t3.634-1.509h17.143zM12.464 16q0-1.571-1.107-2.679t-2.679-1.107-2.679 1.107-1.107 2.679 1.107 2.679 2.679 1.107 2.679-1.107 1.107-2.679zM22.536 16q0-1.571-1.107-2.679t-2.679-1.107-2.679 1.107-1.107 2.679 1.107 2.679 2.679 1.107 2.679-1.107 1.107-2.679z"></path>
</symbol>
<symbol id="icon-tumblr" viewBox="0 0 19 32">
<path class="path1" d="M16.857 23.732l1.429 4.232q-0.411 0.625-1.982 1.179t-3.161 0.571q-1.857 0.036-3.402-0.464t-2.545-1.321-1.696-1.893-0.991-2.143-0.295-2.107v-9.714h-3v-3.839q1.286-0.464 2.304-1.241t1.625-1.607 1.036-1.821 0.607-1.768 0.268-1.58q0.018-0.089 0.080-0.152t0.134-0.063h4.357v7.571h5.946v4.5h-5.964v9.25q0 0.536 0.116 1t0.402 0.938 0.884 0.741 1.455 0.25q1.393-0.036 2.393-0.518z"></path>
</symbol>
<symbol id="icon-dockerhub" viewBox="0 0 24 28">
<path class="path1" d="M1.597 10.257h2.911v2.83H1.597v-2.83zm3.573 0h2.91v2.83H5.17v-2.83zm0-3.627h2.91v2.829H5.17V6.63zm3.57 3.627h2.912v2.83H8.74v-2.83zm0-3.627h2.912v2.829H8.74V6.63zm3.573 3.627h2.911v2.83h-2.911v-2.83zm0-3.627h2.911v2.829h-2.911V6.63zm3.572 3.627h2.911v2.83h-2.911v-2.83zM12.313 3h2.911v2.83h-2.911V3zm-6.65 14.173c-.449 0-.812.354-.812.788 0 .435.364.788.812.788.447 0 .811-.353.811-.788 0-.434-.363-.788-.811-.788"></path>
<path class="path2" d="M28.172 11.721c-.978-.549-2.278-.624-3.388-.306-.136-1.146-.91-2.149-1.83-2.869l-.366-.286-.307.345c-.618.692-.8 1.845-.718 2.73.063.651.273 1.312.685 1.834-.313.183-.668.328-.985.434-.646.212-1.347.33-2.028.33H.083l-.042.429c-.137 1.432.065 2.866.674 4.173l.262.519.03.048c1.8 2.973 4.963 4.225 8.41 4.225 6.672 0 12.174-2.896 14.702-9.015 1.689.085 3.417-.4 4.243-1.968l.211-.4-.401-.223zM5.664 19.458c-.85 0-1.542-.671-1.542-1.497 0-.825.691-1.498 1.541-1.498.849 0 1.54.672 1.54 1.497s-.69 1.498-1.539 1.498z"></path>
</symbol>
<symbol id="icon-dribbble" viewBox="0 0 27 32">
<path class="path1" d="M18.286 26.786q-0.75-4.304-2.5-8.893h-0.036l-0.036 0.018q-0.286 0.107-0.768 0.295t-1.804 0.875-2.446 1.464-2.339 2.045-1.839 2.643l-0.268-0.196q3.286 2.679 7.464 2.679 2.357 0 4.571-0.929zM14.982 15.946q-0.375-0.875-0.946-1.982-5.554 1.661-12.018 1.661-0.018 0.125-0.018 0.375 0 2.214 0.786 4.223t2.214 3.598q0.893-1.589 2.205-2.973t2.545-2.223 2.33-1.446 1.777-0.857l0.661-0.232q0.071-0.018 0.232-0.063t0.232-0.080zM13.071 12.161q-2.143-3.804-4.357-6.75-2.464 1.161-4.179 3.321t-2.286 4.857q5.393 0 10.821-1.429zM25.286 17.857q-3.75-1.071-7.304-0.518 1.554 4.268 2.286 8.375 1.982-1.339 3.304-3.384t1.714-4.473zM10.911 4.625q-0.018 0-0.036 0.018 0.018-0.018 0.036-0.018zM21.446 7.214q-3.304-2.929-7.732-2.929-1.357 0-2.768 0.339 2.339 3.036 4.393 6.821 1.232-0.464 2.321-1.080t1.723-1.098 1.17-1.018 0.67-0.723zM25.429 15.875q-0.054-4.143-2.661-7.321l-0.018 0.018q-0.161 0.214-0.339 0.438t-0.777 0.795-1.268 1.080-1.786 1.161-2.348 1.152q0.446 0.946 0.786 1.696 0.036 0.107 0.116 0.313t0.134 0.295q0.643-0.089 1.33-0.125t1.313-0.036 1.232 0.027 1.143 0.071 1.009 0.098 0.857 0.116 0.652 0.107 0.446 0.080zM27.429 16q0 3.732-1.839 6.884t-4.991 4.991-6.884 1.839-6.884-1.839-4.991-4.991-1.839-6.884 1.839-6.884 4.991-4.991 6.884-1.839 6.884 1.839 4.991 4.991 1.839 6.884z"></path>
</symbol>
<symbol id="icon-skype" viewBox="0 0 27 32">
<path class="path1" d="M20.946 18.982q0-0.893-0.348-1.634t-0.866-1.223-1.304-0.875-1.473-0.607-1.563-0.411l-1.857-0.429q-0.536-0.125-0.786-0.188t-0.625-0.205-0.536-0.286-0.295-0.375-0.134-0.536q0-1.375 2.571-1.375 0.768 0 1.375 0.214t0.964 0.509 0.679 0.598 0.714 0.518 0.857 0.214q0.839 0 1.348-0.571t0.509-1.375q0-0.982-1-1.777t-2.536-1.205-3.25-0.411q-1.214 0-2.357 0.277t-2.134 0.839-1.589 1.554-0.598 2.295q0 1.089 0.339 1.902t1 1.348 1.429 0.866 1.839 0.58l2.607 0.643q1.607 0.393 2 0.643 0.571 0.357 0.571 1.071 0 0.696-0.714 1.152t-1.875 0.455q-0.911 0-1.634-0.286t-1.161-0.688-0.813-0.804-0.821-0.688-0.964-0.286q-0.893 0-1.348 0.536t-0.455 1.339q0 1.643 2.179 2.813t5.196 1.17q1.304 0 2.5-0.33t2.188-0.955 1.58-1.67 0.589-2.348zM27.429 22.857q0 2.839-2.009 4.848t-4.848 2.009q-2.321 0-4.179-1.429-1.375 0.286-2.679 0.286-2.554 0-4.884-0.991t-4.018-2.679-2.679-4.018-0.991-4.884q0-1.304 0.286-2.679-1.429-1.857-1.429-4.179 0-2.839 2.009-4.848t4.848-2.009q2.321 0 4.179 1.429 1.375-0.286 2.679-0.286 2.554 0 4.884 0.991t4.018 2.679 2.679 4.018 0.991 4.884q0 1.304-0.286 2.679 1.429 1.857 1.429 4.179z"></path>
</symbol>
<symbol id="icon-foursquare" viewBox="0 0 23 32">
<path class="path1" d="M17.857 7.75l0.661-3.464q0.089-0.411-0.161-0.714t-0.625-0.304h-12.714q-0.411 0-0.688 0.304t-0.277 0.661v19.661q0 0.125 0.107 0.018l5.196-6.286q0.411-0.464 0.679-0.598t0.857-0.134h4.268q0.393 0 0.661-0.259t0.321-0.527q0.429-2.321 0.661-3.411 0.071-0.375-0.205-0.714t-0.652-0.339h-5.25q-0.518 0-0.857-0.339t-0.339-0.857v-0.75q0-0.518 0.339-0.848t0.857-0.33h6.179q0.321 0 0.625-0.241t0.357-0.527zM21.911 3.786q-0.268 1.304-0.955 4.759t-1.241 6.25-0.625 3.098q-0.107 0.393-0.161 0.58t-0.25 0.58-0.438 0.589-0.688 0.375-1.036 0.179h-4.839q-0.232 0-0.393 0.179-0.143 0.161-7.607 8.821-0.393 0.446-1.045 0.509t-0.866-0.098q-0.982-0.393-0.982-1.75v-25.179q0-0.982 0.679-1.83t2.143-0.848h15.857q1.696 0 2.268 0.946t0.179 2.839zM21.911 3.786l-2.821 14.107q0.071-0.304 0.625-3.098t1.241-6.25 0.955-4.759z"></path>
</symbol>
<symbol id="icon-wordpress" viewBox="0 0 32 32">
<path class="path1" d="M2.268 16q0-2.911 1.196-5.589l6.554 17.946q-3.5-1.696-5.625-5.018t-2.125-7.339zM25.268 15.304q0 0.339-0.045 0.688t-0.179 0.884-0.205 0.786-0.313 1.054-0.313 1.036l-1.357 4.571-4.964-14.75q0.821-0.054 1.571-0.143 0.339-0.036 0.464-0.33t-0.045-0.554-0.509-0.241l-3.661 0.179q-1.339-0.018-3.607-0.179-0.214-0.018-0.366 0.089t-0.205 0.268-0.027 0.33 0.161 0.295 0.348 0.143l1.429 0.143 2.143 5.857-3 9-5-14.857q0.821-0.054 1.571-0.143 0.339-0.036 0.464-0.33t-0.045-0.554-0.509-0.241l-3.661 0.179q-0.125 0-0.411-0.009t-0.464-0.009q1.875-2.857 4.902-4.527t6.563-1.67q2.625 0 5.009 0.946t4.259 2.661h-0.179q-0.982 0-1.643 0.723t-0.661 1.705q0 0.214 0.036 0.429t0.071 0.384 0.143 0.411 0.161 0.375 0.214 0.402 0.223 0.375 0.259 0.429 0.25 0.411q1.125 1.911 1.125 3.786zM16.232 17.196l4.232 11.554q0.018 0.107 0.089 0.196-2.25 0.786-4.554 0.786-2 0-3.875-0.571zM28.036 9.411q1.696 3.107 1.696 6.589 0 3.732-1.857 6.884t-4.982 4.973l4.196-12.107q1.054-3.018 1.054-4.929 0-0.75-0.107-1.411zM16 0q3.25 0 6.214 1.268t5.107 3.411 3.411 5.107 1.268 6.214-1.268 6.214-3.411 5.107-5.107 3.411-6.214 1.268-6.214-1.268-5.107-3.411-3.411-5.107-1.268-6.214 1.268-6.214 3.411-5.107 5.107-3.411 6.214-1.268zM16 31.268q3.089 0 5.92-1.214t4.875-3.259 3.259-4.875 1.214-5.92-1.214-5.92-3.259-4.875-4.875-3.259-5.92-1.214-5.92 1.214-4.875 3.259-3.259 4.875-1.214 5.92 1.214 5.92 3.259 4.875 4.875 3.259 5.92 1.214z"></path>
</symbol>
<symbol id="icon-stumbleupon" viewBox="0 0 34 32">
<path class="path1" d="M18.964 12.714v-2.107q0-0.75-0.536-1.286t-1.286-0.536-1.286 0.536-0.536 1.286v10.929q0 3.125-2.25 5.339t-5.411 2.214q-3.179 0-5.42-2.241t-2.241-5.42v-4.75h5.857v4.679q0 0.768 0.536 1.295t1.286 0.527 1.286-0.527 0.536-1.295v-11.071q0-3.054 2.259-5.214t5.384-2.161q3.143 0 5.393 2.179t2.25 5.25v2.429l-3.482 1.036zM28.429 16.679h5.857v4.75q0 3.179-2.241 5.42t-5.42 2.241q-3.161 0-5.411-2.223t-2.25-5.366v-4.786l2.339 1.089 3.482-1.036v4.821q0 0.75 0.536 1.277t1.286 0.527 1.286-0.527 0.536-1.277v-4.911z"></path>
</symbol>
<symbol id="icon-digg" viewBox="0 0 37 32">
<path class="path1" d="M5.857 5.036h3.643v17.554h-9.5v-12.446h5.857v-5.107zM5.857 19.661v-6.589h-2.196v6.589h2.196zM10.964 10.143v12.446h3.661v-12.446h-3.661zM10.964 5.036v3.643h3.661v-3.643h-3.661zM16.089 10.143h9.518v16.821h-9.518v-2.911h5.857v-1.464h-5.857v-12.446zM21.946 19.661v-6.589h-2.196v6.589h2.196zM27.071 10.143h9.5v16.821h-9.5v-2.911h5.839v-1.464h-5.839v-12.446zM32.911 19.661v-6.589h-2.196v6.589h2.196z"></path>
</symbol>
<symbol id="icon-spotify" viewBox="0 0 27 32">
<path class="path1" d="M20.125 21.607q0-0.571-0.536-0.911-3.446-2.054-7.982-2.054-2.375 0-5.125 0.607-0.75 0.161-0.75 0.929 0 0.357 0.241 0.616t0.634 0.259q0.089 0 0.661-0.143 2.357-0.482 4.339-0.482 4.036 0 7.089 1.839 0.339 0.196 0.589 0.196 0.339 0 0.589-0.241t0.25-0.616zM21.839 17.768q0-0.714-0.625-1.089-4.232-2.518-9.786-2.518-2.732 0-5.411 0.75-0.857 0.232-0.857 1.143 0 0.446 0.313 0.759t0.759 0.313q0.125 0 0.661-0.143 2.179-0.589 4.482-0.589 4.982 0 8.714 2.214 0.429 0.232 0.679 0.232 0.446 0 0.759-0.313t0.313-0.759zM23.768 13.339q0-0.839-0.714-1.25-2.25-1.304-5.232-1.973t-6.125-0.67q-3.643 0-6.5 0.839-0.411 0.125-0.688 0.455t-0.277 0.866q0 0.554 0.366 0.929t0.92 0.375q0.196 0 0.714-0.143 2.375-0.661 5.482-0.661 2.839 0 5.527 0.607t4.527 1.696q0.375 0.214 0.714 0.214 0.518 0 0.902-0.366t0.384-0.92zM27.429 16q0 3.732-1.839 6.884t-4.991 4.991-6.884 1.839-6.884-1.839-4.991-4.991-1.839-6.884 1.839-6.884 4.991-4.991 6.884-1.839 6.884 1.839 4.991 4.991 1.839 6.884z"></path>
</symbol>
<symbol id="icon-soundcloud" viewBox="0 0 41 32">
<path class="path1" d="M14 24.5l0.286-4.304-0.286-9.339q-0.018-0.179-0.134-0.304t-0.295-0.125q-0.161 0-0.286 0.125t-0.125 0.304l-0.25 9.339 0.25 4.304q0.018 0.179 0.134 0.295t0.277 0.116q0.393 0 0.429-0.411zM19.286 23.982l0.196-3.768-0.214-10.464q0-0.286-0.232-0.429-0.143-0.089-0.286-0.089t-0.286 0.089q-0.232 0.143-0.232 0.429l-0.018 0.107-0.179 10.339q0 0.018 0.196 4.214v0.018q0 0.179 0.107 0.304 0.161 0.196 0.411 0.196 0.196 0 0.357-0.161 0.161-0.125 0.161-0.357zM0.625 17.911l0.357 2.286-0.357 2.25q-0.036 0.161-0.161 0.161t-0.161-0.161l-0.304-2.25 0.304-2.286q0.036-0.161 0.161-0.161t0.161 0.161zM2.161 16.5l0.464 3.696-0.464 3.625q-0.036 0.161-0.179 0.161-0.161 0-0.161-0.179l-0.411-3.607 0.411-3.696q0-0.161 0.161-0.161 0.143 0 0.179 0.161zM3.804 15.821l0.446 4.375-0.446 4.232q0 0.196-0.196 0.196-0.179 0-0.214-0.196l-0.375-4.232 0.375-4.375q0.036-0.214 0.214-0.214 0.196 0 0.196 0.214zM5.482 15.696l0.411 4.5-0.411 4.357q-0.036 0.232-0.25 0.232-0.232 0-0.232-0.232l-0.375-4.357 0.375-4.5q0-0.232 0.232-0.232 0.214 0 0.25 0.232zM7.161 16.018l0.375 4.179-0.375 4.393q-0.036 0.286-0.286 0.286-0.107 0-0.188-0.080t-0.080-0.205l-0.357-4.393 0.357-4.179q0-0.107 0.080-0.188t0.188-0.080q0.25 0 0.286 0.268zM8.839 13.411l0.375 6.786-0.375 4.393q0 0.125-0.089 0.223t-0.214 0.098q-0.286 0-0.321-0.321l-0.321-4.393 0.321-6.786q0.036-0.321 0.321-0.321 0.125 0 0.214 0.098t0.089 0.223zM10.518 11.875l0.339 8.357-0.339 4.357q0 0.143-0.098 0.241t-0.241 0.098q-0.321 0-0.357-0.339l-0.286-4.357 0.286-8.357q0.036-0.339 0.357-0.339 0.143 0 0.241 0.098t0.098 0.241zM12.268 11.161l0.321 9.036-0.321 4.321q-0.036 0.375-0.393 0.375-0.339 0-0.375-0.375l-0.286-4.321 0.286-9.036q0-0.161 0.116-0.277t0.259-0.116q0.161 0 0.268 0.116t0.125 0.277zM19.268 24.411v0 0zM15.732 11.089l0.268 9.107-0.268 4.268q0 0.179-0.134 0.313t-0.313 0.134-0.304-0.125-0.143-0.321l-0.25-4.268 0.25-9.107q0-0.196 0.134-0.321t0.313-0.125 0.313 0.125 0.134 0.321zM17.5 11.429l0.25 8.786-0.25 4.214q0 0.196-0.143 0.339t-0.339 0.143-0.339-0.143-0.161-0.339l-0.214-4.214 0.214-8.786q0.018-0.214 0.161-0.357t0.339-0.143 0.33 0.143 0.152 0.357zM21.286 20.214l-0.25 4.125q0 0.232-0.161 0.393t-0.393 0.161-0.393-0.161-0.179-0.393l-0.107-2.036-0.107-2.089 0.214-11.357v-0.054q0.036-0.268 0.214-0.429 0.161-0.125 0.357-0.125 0.143 0 0.268 0.089 0.25 0.143 0.286 0.464zM41.143 19.875q0 2.089-1.482 3.563t-3.571 1.473h-14.036q-0.232-0.036-0.393-0.196t-0.161-0.393v-16.054q0-0.411 0.5-0.589 1.518-0.607 3.232-0.607 3.482 0 6.036 2.348t2.857 5.777q0.946-0.393 1.964-0.393 2.089 0 3.571 1.482t1.482 3.589z"></path>
</symbol>
<symbol id="icon-codepen" viewBox="0 0 32 32">
<path class="path1" d="M3.857 20.875l10.768 7.179v-6.411l-5.964-3.982zM2.75 18.304l3.446-2.304-3.446-2.304v4.607zM17.375 28.054l10.768-7.179-4.804-3.214-5.964 3.982v6.411zM16 19.25l4.857-3.25-4.857-3.25-4.857 3.25zM8.661 14.339l5.964-3.982v-6.411l-10.768 7.179zM25.804 16l3.446 2.304v-4.607zM23.339 14.339l4.804-3.214-10.768-7.179v6.411zM32 11.125v9.75q0 0.732-0.607 1.143l-14.625 9.75q-0.375 0.232-0.768 0.232t-0.768-0.232l-14.625-9.75q-0.607-0.411-0.607-1.143v-9.75q0-0.732 0.607-1.143l14.625-9.75q0.375-0.232 0.768-0.232t0.768 0.232l14.625 9.75q0.607 0.411 0.607 1.143z"></path>
</symbol>
<symbol id="icon-twitch" viewBox="0 0 32 32">
<path class="path1" d="M16 7.75v7.75h-2.589v-7.75h2.589zM23.107 7.75v7.75h-2.589v-7.75h2.589zM23.107 21.321l4.518-4.536v-14.196h-21.321v18.732h5.821v3.875l3.875-3.875h7.107zM30.214 0v18.089l-7.75 7.75h-5.821l-3.875 3.875h-3.875v-3.875h-7.107v-20.679l1.946-5.161h26.482z"></path>
</symbol>
<symbol id="icon-meanpath" viewBox="0 0 27 32">
<path class="path1" d="M23.411 15.036v2.036q0 0.429-0.241 0.679t-0.67 0.25h-3.607q-0.429 0-0.679-0.25t-0.25-0.679v-2.036q0-0.429 0.25-0.679t0.679-0.25h3.607q0.429 0 0.67 0.25t0.241 0.679zM14.661 19.143v-4.464q0-0.946-0.58-1.527t-1.527-0.58h-2.375q-1.214 0-1.714 0.929-0.5-0.929-1.714-0.929h-2.321q-0.946 0-1.527 0.58t-0.58 1.527v4.464q0 0.393 0.375 0.393h0.982q0.393 0 0.393-0.393v-4.107q0-0.429 0.241-0.679t0.688-0.25h1.679q0.429 0 0.679 0.25t0.25 0.679v4.107q0 0.393 0.375 0.393h0.964q0.393 0 0.393-0.393v-4.107q0-0.429 0.25-0.679t0.679-0.25h1.732q0.429 0 0.67 0.25t0.241 0.679v4.107q0 0.393 0.393 0.393h0.982q0.375 0 0.375-0.393zM25.179 17.429v-2.75q0-0.946-0.589-1.527t-1.536-0.58h-4.714q-0.946 0-1.536 0.58t-0.589 1.527v7.321q0 0.375 0.393 0.375h0.982q0.375 0 0.375-0.375v-3.214q0.554 0.75 1.679 0.75h3.411q0.946 0 1.536-0.58t0.589-1.527zM27.429 6.429v19.143q0 1.714-1.214 2.929t-2.929 1.214h-19.143q-1.714 0-2.929-1.214t-1.214-2.929v-19.143q0-1.714 1.214-2.929t2.929-1.214h19.143q1.714 0 2.929 1.214t1.214 2.929z"></path>
</symbol>
<symbol id="icon-pinterest-p" viewBox="0 0 23 32">
<path class="path1" d="M0 10.661q0-1.929 0.67-3.634t1.848-2.973 2.714-2.196 3.304-1.393 3.607-0.464q2.821 0 5.25 1.188t3.946 3.455 1.518 5.125q0 1.714-0.339 3.357t-1.071 3.161-1.786 2.67-2.589 1.839-3.375 0.688q-1.214 0-2.411-0.571t-1.714-1.571q-0.179 0.696-0.5 2.009t-0.42 1.696-0.366 1.268-0.464 1.268-0.571 1.116-0.821 1.384-1.107 1.545l-0.25 0.089-0.161-0.179q-0.268-2.804-0.268-3.357 0-1.643 0.384-3.688t1.188-5.134 0.929-3.625q-0.571-1.161-0.571-3.018 0-1.482 0.929-2.786t2.357-1.304q1.089 0 1.696 0.723t0.607 1.83q0 1.179-0.786 3.411t-0.786 3.339q0 1.125 0.804 1.866t1.946 0.741q0.982 0 1.821-0.446t1.402-1.214 1-1.696 0.679-1.973 0.357-1.982 0.116-1.777q0-3.089-1.955-4.813t-5.098-1.723q-3.571 0-5.964 2.313t-2.393 5.866q0 0.786 0.223 1.518t0.482 1.161 0.482 0.813 0.223 0.545q0 0.5-0.268 1.304t-0.661 0.804q-0.036 0-0.304-0.054-0.911-0.268-1.616-1t-1.089-1.688-0.58-1.929-0.196-1.902z"></path>
</symbol>
<symbol id="icon-periscope" viewBox="0 0 24 28">
<path class="path1" d="M12.285,1C6.696,1,2.277,5.643,2.277,11.243c0,5.851,7.77,14.578,10.007,14.578c1.959,0,9.729-8.728,9.729-14.578 C22.015,5.643,17.596,1,12.285,1z M12.317,16.551c-3.473,0-6.152-2.611-6.152-5.664c0-1.292,0.39-2.472,1.065-3.438 c0.206,1.084,1.18,1.906,2.352,1.906c1.322,0,2.393-1.043,2.393-2.333c0-0.832-0.447-1.561-1.119-1.975 c0.467-0.105,0.955-0.161,1.46-0.161c3.133,0,5.81,2.611,5.81,5.998C18.126,13.94,15.449,16.551,12.317,16.551z"></path>
</symbol>
<symbol id="icon-get-pocket" viewBox="0 0 31 32">
<path class="path1" d="M27.946 2.286q1.161 0 1.964 0.813t0.804 1.973v9.268q0 3.143-1.214 6t-3.259 4.911-4.893 3.259-5.973 1.205q-3.143 0-5.991-1.205t-4.902-3.259-3.268-4.911-1.214-6v-9.268q0-1.143 0.821-1.964t1.964-0.821h25.161zM15.375 21.286q0.839 0 1.464-0.589l7.214-6.929q0.661-0.625 0.661-1.518 0-0.875-0.616-1.491t-1.491-0.616q-0.839 0-1.464 0.589l-5.768 5.536-5.768-5.536q-0.625-0.589-1.446-0.589-0.875 0-1.491 0.616t-0.616 1.491q0 0.911 0.643 1.518l7.232 6.929q0.589 0.589 1.446 0.589z"></path>
</symbol>
<symbol id="icon-vimeo" viewBox="0 0 32 32">
<path class="path1" d="M30.518 9.25q-0.179 4.214-5.929 11.625-5.946 7.696-10.036 7.696-2.536 0-4.286-4.696-0.786-2.857-2.357-8.607-1.286-4.679-2.804-4.679-0.321 0-2.268 1.357l-1.375-1.75q0.429-0.375 1.929-1.723t2.321-2.063q2.786-2.464 4.304-2.607 1.696-0.161 2.732 0.991t1.446 3.634q0.786 5.125 1.179 6.661 0.982 4.446 2.143 4.446 0.911 0 2.75-2.875 1.804-2.875 1.946-4.393 0.232-2.482-1.946-2.482-1.018 0-2.161 0.464 2.143-7.018 8.196-6.821 4.482 0.143 4.214 5.821z"></path>
</symbol>
<symbol id="icon-reddit-alien" viewBox="0 0 32 32">
<path class="path1" d="M32 15.107q0 1.036-0.527 1.884t-1.42 1.295q0.214 0.821 0.214 1.714 0 2.768-1.902 5.125t-5.188 3.723-7.143 1.366-7.134-1.366-5.179-3.723-1.902-5.125q0-0.839 0.196-1.679-0.911-0.446-1.464-1.313t-0.554-1.902q0-1.464 1.036-2.509t2.518-1.045q1.518 0 2.589 1.125 3.893-2.714 9.196-2.893l2.071-9.304q0.054-0.232 0.268-0.375t0.464-0.089l6.589 1.446q0.321-0.661 0.964-1.063t1.411-0.402q1.107 0 1.893 0.777t0.786 1.884-0.786 1.893-1.893 0.786-1.884-0.777-0.777-1.884l-5.964-1.321-1.857 8.429q5.357 0.161 9.268 2.857 1.036-1.089 2.554-1.089 1.482 0 2.518 1.045t1.036 2.509zM7.464 18.661q0 1.107 0.777 1.893t1.884 0.786 1.893-0.786 0.786-1.893-0.786-1.884-1.893-0.777q-1.089 0-1.875 0.786t-0.786 1.875zM21.929 25q0.196-0.196 0.196-0.464t-0.196-0.464q-0.179-0.179-0.446-0.179t-0.464 0.179q-0.732 0.75-2.161 1.107t-2.857 0.357-2.857-0.357-2.161-1.107q-0.196-0.179-0.464-0.179t-0.446 0.179q-0.196 0.179-0.196 0.455t0.196 0.473q0.768 0.768 2.116 1.214t2.188 0.527 1.625 0.080 1.625-0.080 2.188-0.527 2.116-1.214zM21.875 21.339q1.107 0 1.884-0.786t0.777-1.893q0-1.089-0.786-1.875t-1.875-0.786q-1.107 0-1.893 0.777t-0.786 1.884 0.786 1.893 1.893 0.786z"></path>
</symbol>
<symbol id="icon-hashtag" viewBox="0 0 32 32">
<path class="path1" d="M17.696 18.286l1.143-4.571h-4.536l-1.143 4.571h4.536zM31.411 9.286l-1 4q-0.125 0.429-0.554 0.429h-5.839l-1.143 4.571h5.554q0.268 0 0.446 0.214 0.179 0.25 0.107 0.5l-1 4q-0.089 0.429-0.554 0.429h-5.839l-1.446 5.857q-0.125 0.429-0.554 0.429h-4q-0.286 0-0.464-0.214-0.161-0.214-0.107-0.5l1.393-5.571h-4.536l-1.446 5.857q-0.125 0.429-0.554 0.429h-4.018q-0.268 0-0.446-0.214-0.161-0.214-0.107-0.5l1.393-5.571h-5.554q-0.268 0-0.446-0.214-0.161-0.214-0.107-0.5l1-4q0.125-0.429 0.554-0.429h5.839l1.143-4.571h-5.554q-0.268 0-0.446-0.214-0.179-0.25-0.107-0.5l1-4q0.089-0.429 0.554-0.429h5.839l1.446-5.857q0.125-0.429 0.571-0.429h4q0.268 0 0.446 0.214 0.161 0.214 0.107 0.5l-1.393 5.571h4.536l1.446-5.857q0.125-0.429 0.571-0.429h4q0.268 0 0.446 0.214 0.161 0.214 0.107 0.5l-1.393 5.571h5.554q0.268 0 0.446 0.214 0.161 0.214 0.107 0.5z"></path>
</symbol>
<symbol id="icon-chain" viewBox="0 0 30 32">
<path class="path1" d="M26 21.714q0-0.714-0.5-1.214l-3.714-3.714q-0.5-0.5-1.214-0.5-0.75 0-1.286 0.571 0.054 0.054 0.339 0.33t0.384 0.384 0.268 0.339 0.232 0.455 0.063 0.491q0 0.714-0.5 1.214t-1.214 0.5q-0.268 0-0.491-0.063t-0.455-0.232-0.339-0.268-0.384-0.384-0.33-0.339q-0.589 0.554-0.589 1.304 0 0.714 0.5 1.214l3.679 3.696q0.482 0.482 1.214 0.482 0.714 0 1.214-0.464l2.625-2.607q0.5-0.5 0.5-1.196zM13.446 9.125q0-0.714-0.5-1.214l-3.679-3.696q-0.5-0.5-1.214-0.5-0.696 0-1.214 0.482l-2.625 2.607q-0.5 0.5-0.5 1.196 0 0.714 0.5 1.214l3.714 3.714q0.482 0.482 1.214 0.482 0.75 0 1.286-0.554-0.054-0.054-0.339-0.33t-0.384-0.384-0.268-0.339-0.232-0.455-0.063-0.491q0-0.714 0.5-1.214t1.214-0.5q0.268 0 0.491 0.063t0.455 0.232 0.339 0.268 0.384 0.384 0.33 0.339q0.589-0.554 0.589-1.304zM29.429 21.714q0 2.143-1.518 3.625l-2.625 2.607q-1.482 1.482-3.625 1.482-2.161 0-3.643-1.518l-3.679-3.696q-1.482-1.482-1.482-3.625 0-2.196 1.571-3.732l-1.571-1.571q-1.536 1.571-3.714 1.571-2.143 0-3.643-1.5l-3.714-3.714q-1.5-1.5-1.5-3.643t1.518-3.625l2.625-2.607q1.482-1.482 3.625-1.482 2.161 0 3.643 1.518l3.679 3.696q1.482 1.482 1.482 3.625 0 2.196-1.571 3.732l1.571 1.571q1.536-1.571 3.714-1.571 2.143 0 3.643 1.5l3.714 3.714q1.5 1.5 1.5 3.643z"></path>
</symbol>
<symbol id="icon-thumb-tack" viewBox="0 0 21 32">
<path class="path1" d="M8.571 15.429v-8q0-0.25-0.161-0.411t-0.411-0.161-0.411 0.161-0.161 0.411v8q0 0.25 0.161 0.411t0.411 0.161 0.411-0.161 0.161-0.411zM20.571 21.714q0 0.464-0.339 0.804t-0.804 0.339h-7.661l-0.911 8.625q-0.036 0.214-0.188 0.366t-0.366 0.152h-0.018q-0.482 0-0.571-0.482l-1.357-8.661h-7.214q-0.464 0-0.804-0.339t-0.339-0.804q0-2.196 1.402-3.955t3.17-1.759v-9.143q-0.929 0-1.607-0.679t-0.679-1.607 0.679-1.607 1.607-0.679h11.429q0.929 0 1.607 0.679t0.679 1.607-0.679 1.607-1.607 0.679v9.143q1.768 0 3.17 1.759t1.402 3.955z"></path>
</symbol>
<symbol id="icon-arrow-left" viewBox="0 0 43 32">
<path class="path1" d="M42.311 14.044c-0.178-0.178-0.533-0.356-0.711-0.356h-33.778l10.311-10.489c0.178-0.178 0.356-0.533 0.356-0.711 0-0.356-0.178-0.533-0.356-0.711l-1.6-1.422c-0.356-0.178-0.533-0.356-0.889-0.356s-0.533 0.178-0.711 0.356l-14.578 14.933c-0.178 0.178-0.356 0.533-0.356 0.711s0.178 0.533 0.356 0.711l14.756 14.933c0 0.178 0.356 0.356 0.533 0.356s0.533-0.178 0.711-0.356l1.6-1.6c0.178-0.178 0.356-0.533 0.356-0.711s-0.178-0.533-0.356-0.711l-10.311-10.489h33.778c0.178 0 0.533-0.178 0.711-0.356 0.356-0.178 0.533-0.356 0.533-0.711v-2.133c0-0.356-0.178-0.711-0.356-0.889z"></path>
</symbol>
<symbol id="icon-arrow-right" viewBox="0 0 43 32">
<path class="path1" d="M0.356 17.956c0.178 0.178 0.533 0.356 0.711 0.356h33.778l-10.311 10.489c-0.178 0.178-0.356 0.533-0.356 0.711 0 0.356 0.178 0.533 0.356 0.711l1.6 1.6c0.178 0.178 0.533 0.356 0.711 0.356s0.533-0.178 0.711-0.356l14.756-14.933c0.178-0.356 0.356-0.711 0.356-0.889s-0.178-0.533-0.356-0.711l-14.756-14.933c0-0.178-0.356-0.356-0.533-0.356s-0.533 0.178-0.711 0.356l-1.6 1.6c-0.178 0.178-0.356 0.533-0.356 0.711s0.178 0.533 0.356 0.711l10.311 10.489h-33.778c-0.178 0-0.533 0.178-0.711 0.356-0.356 0.178-0.533 0.356-0.533 0.711v2.311c0 0.178 0.178 0.533 0.356 0.711z"></path>
</symbol>
<symbol id="icon-play" viewBox="0 0 22 28">
<path d="M21.625 14.484l-20.75 11.531c-0.484 0.266-0.875 0.031-0.875-0.516v-23c0-0.547 0.391-0.781 0.875-0.516l20.75 11.531c0.484 0.266 0.484 0.703 0 0.969z"></path>
</symbol>
<symbol id="icon-pause" viewBox="0 0 24 28">
<path d="M24 3v22c0 0.547-0.453 1-1 1h-8c-0.547 0-1-0.453-1-1v-22c0-0.547 0.453-1 1-1h8c0.547 0 1 0.453 1 1zM10 3v22c0 0.547-0.453 1-1 1h-8c-0.547 0-1-0.453-1-1v-22c0-0.547 0.453-1 1-1h8c0.547 0 1 0.453 1 1z"></path>
</symbol>
</defs>
</svg>
</body>
</html><!-- WP Fastest Cache file was created in 0.16348481178284 seconds, on 16-03-19 0:36:45 -->