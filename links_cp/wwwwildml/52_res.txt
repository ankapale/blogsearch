<!DOCTYPE html>
<html lang="en-US" class="no-js no-svg">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="profile" href="http://gmpg.org/xfn/11">
<script>(function(html){html.className = html.className.replace(/\bno-js\b/,'js')})(document.documentElement);</script>
<title>Deep Learning for Chatbots, Part 2 &#8211; Implementing a Retrieval-Based Model in Tensorflow &#8211; WildML</title>
<link rel='dns-prefetch' href='//s0.wp.com' />
<link rel='dns-prefetch' href='//secure.gravatar.com' />
<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link href='https://fonts.gstatic.com' crossorigin rel='preconnect' />
<link rel="alternate" type="application/rss+xml" title="WildML &raquo; Feed" href="http://www.wildml.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="WildML &raquo; Comments Feed" href="http://www.wildml.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="WildML &raquo; Deep Learning for Chatbots, Part 2 &#8211; Implementing a Retrieval-Based Model in Tensorflow Comments Feed" href="http://www.wildml.com/2016/07/deep-learning-for-chatbots-2-retrieval-based-model-tensorflow/feed/" />
<script type="text/javascript">
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/www.wildml.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.1.1"}};
!function(a,b,c){function d(a,b){var c=String.fromCharCode;l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,a),0,0);var d=k.toDataURL();l.clearRect(0,0,k.width,k.height),l.fillText(c.apply(this,b),0,0);var e=k.toDataURL();return d===e}function e(a){var b;if(!l||!l.fillText)return!1;switch(l.textBaseline="top",l.font="600 32px Arial",a){case"flag":return!(b=d([55356,56826,55356,56819],[55356,56826,8203,55356,56819]))&&(b=d([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]),!b);case"emoji":return b=d([55358,56760,9792,65039],[55358,56760,8203,9792,65039]),!b}return!1}function f(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var g,h,i,j,k=b.createElement("canvas"),l=k.getContext&&k.getContext("2d");for(j=Array("flag","emoji"),c.supports={everything:!0,everythingExceptFlag:!0},i=0;i<j.length;i++)c.supports[j[i]]=e(j[i]),c.supports.everything=c.supports.everything&&c.supports[j[i]],"flag"!==j[i]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[j[i]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(h=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",h,!1),a.addEventListener("load",h,!1)):(a.attachEvent("onload",h),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),g=c.source||{},g.concatemoji?f(g.concatemoji):g.wpemoji&&g.twemoji&&(f(g.twemoji),f(g.wpemoji)))}(window,document,window._wpemojiSettings);
</script>
<style type="text/css">
img.wp-smiley,
img.emoji {
display: inline !important;
border: none !important;
box-shadow: none !important;
height: 1em !important;
width: 1em !important;
margin: 0 .07em !important;
vertical-align: -0.1em !important;
background: none !important;
padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.wildml.com/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=_2.7.2_beta' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-github-css'  href='http://www.wildml.com/wp-content/plugins/crayon-syntax-highlighter/themes/github/github.css?ver=_2.7.2_beta' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.wildml.com/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=_2.7.2_beta' type='text/css' media='all' />
<link rel='stylesheet' id='wp-block-library-css'  href='http://www.wildml.com/wp-includes/css/dist/block-library/style.min.css?ver=5.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-block-library-theme-css'  href='http://www.wildml.com/wp-includes/css/dist/block-library/theme.min.css?ver=5.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='twentyseventeen-fonts-css'  href='https://fonts.googleapis.com/css?family=Libre+Franklin%3A300%2C300i%2C400%2C400i%2C600%2C600i%2C800%2C800i&#038;subset=latin%2Clatin-ext' type='text/css' media='all' />
<link rel='stylesheet' id='twentyseventeen-style-css'  href='http://www.wildml.com/wp-content/themes/twentyseventeen/style.css?ver=5.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='twentyseventeen-block-style-css'  href='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/css/blocks.css?ver=1.1' type='text/css' media='all' />
<!--[if lt IE 9]>
<link rel='stylesheet' id='twentyseventeen-ie8-css'  href='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/css/ie8.css?ver=1.0' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.wildml.com/wp-content/plugins/jetpack/css/jetpack.css?ver=7.1.1' type='text/css' media='all' />
<script type='text/javascript' src='http://www.wildml.com/wp-includes/js/jquery/jquery.js?ver=1.12.4'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","ajaxurl":"http:\/\/www.wildml.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=_2.7.2_beta'></script>
<!--[if lt IE 9]>
<script type='text/javascript' src='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/js/html5.js?ver=3.7.3'></script>
<![endif]-->
<link rel='https://api.w.org/' href='http://www.wildml.com/wp-json/' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.wildml.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.wildml.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Deep Learning for Chatbots, Part 1 &#8211; Introduction' href='http://www.wildml.com/2016/04/deep-learning-for-chatbots-part-1-introduction/' />
<link rel='next' title='RNNs in Tensorflow, a Practical Guide and Undocumented Features' href='http://www.wildml.com/2016/08/rnns-in-tensorflow-a-practical-guide-and-undocumented-features/' />
<meta name="generator" content="WordPress 5.1.1" />
<link rel="canonical" href="http://www.wildml.com/2016/07/deep-learning-for-chatbots-2-retrieval-based-model-tensorflow/" />
<link rel='shortlink' href='https://wp.me/p6GvDI-cr' />
<link rel="alternate" type="application/json+oembed" href="http://www.wildml.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.wildml.com%2F2016%2F07%2Fdeep-learning-for-chatbots-2-retrieval-based-model-tensorflow%2F" />
<link rel="alternate" type="text/xml+oembed" href="http://www.wildml.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.wildml.com%2F2016%2F07%2Fdeep-learning-for-chatbots-2-retrieval-based-model-tensorflow%2F&#038;format=xml" />
<link rel='dns-prefetch' href='//v0.wordpress.com'/>
<style type='text/css'>img#wpstats{display:none}</style><link rel="pingback" href="http://www.wildml.com/xmlrpc.php">
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Deep Learning for Chatbots, Part 2 &#8211; Implementing a Retrieval-Based Model in Tensorflow" />
<meta property="og:url" content="http://www.wildml.com/2016/07/deep-learning-for-chatbots-2-retrieval-based-model-tensorflow/" />
<meta property="og:description" content="The Code and data for this tutorial is on Github. Retrieval-Based bots In this post we&#8217;ll implement a retrieval-based bot. Retrieval-based models have a repository of pre-defined responses thâ€¦" />
<meta property="article:published_time" content="2016-07-04T19:15:42+00:00" />
<meta property="article:modified_time" content="2016-08-18T14:49:59+00:00" />
<meta property="og:site_name" content="WildML" />
<meta property="og:image" content="http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-21-at-10.51.18-AM-1024x690.png" />
<meta property="og:image:width" content="620" />
<meta property="og:image:height" content="418" />
<meta property="og:image:alt" content="Dual Encoder RNN" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:text:title" content="Deep Learning for Chatbots, Part 2 &#8211; Implementing a Retrieval-Based Model in Tensorflow" />
<meta name="twitter:card" content="summary" />
<!-- End Jetpack Open Graph Tags -->
<style type="text/css" id="wp-custom-css">
/*
You can add your own CSS here.
Click the help icon above to learn more.
*/
@import url('https://fonts.googleapis.com/css?family=Lora');
@media screen and (min-width: 48em) {
#content > .wrap {
max-width: 100%;
font-family: Lora;
}
#content #primary { 
width: 65%;
font-size: 1.1em;
line-height: 1.7em
}
#content #secondary { 
width: 25%;
font-size: 1.1em;
}
div[id^=highlighter] {
font-size: 0.8em !important
}
ul, ol {
padding: 1em;
}
}
.entry-content ul {
padding: 0 0 0 2em
}
/*
CSS Migrated from Jetpack:
*/
/*
CSS Migrated from Jetpack:
*/
</style>
</head>
<body class="post-template-default single single-post postid-771 single-format-standard wp-embed-responsive has-sidebar colors-light">
<div id="page" class="site">
<a class="skip-link screen-reader-text" href="#content">Skip to content</a>
<header id="masthead" class="site-header" role="banner">
<div class="custom-header">
<div class="custom-header-media">
</div>
<div class="site-branding">
<div class="wrap">
<div class="site-branding-text">
<p class="site-title"><a href="http://www.wildml.com/" rel="home">WildML</a></p>
<p class="site-description">Artificial Intelligence, Deep Learning, and NLP</p>
</div><!-- .site-branding-text -->
</div><!-- .wrap -->
</div><!-- .site-branding -->
</div><!-- .custom-header -->
<div class="navigation-top">
<div class="wrap">
<nav id="site-navigation" class="main-navigation" role="navigation" aria-label="Top Menu">
<button class="menu-toggle" aria-controls="top-menu" aria-expanded="false">
<svg class="icon icon-bars" aria-hidden="true" role="img"> <use href="#icon-bars" xlink:href="#icon-bars"></use> </svg><svg class="icon icon-close" aria-hidden="true" role="img"> <use href="#icon-close" xlink:href="#icon-close"></use> </svg>Menu	</button>
<div class="menu-header-menu-container"><ul id="top-menu" class="menu"><li id="menu-item-655" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-655"><a href="http://www.wildml.com">Home</a></li>
<li id="menu-item-821" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-821"><a href="https://www.getrevue.co/profile/wildml">AI Newsletter</a></li>
<li id="menu-item-694" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-694"><a href="http://www.wildml.com/deep-learning-glossary/">Deep Learning Glossary</a></li>
<li id="menu-item-732" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-732"><a href="mailto:dennybritz@gmail.com">Contact</a></li>
<li id="menu-item-654" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-654"><a href="http://www.wildml.com/about/">About</a></li>
</ul></div>
</nav><!-- #site-navigation -->
</div><!-- .wrap -->
</div><!-- .navigation-top -->
</header><!-- #masthead -->
<div class="site-content-contain">
<div id="content" class="site-content">
<div class="wrap">
<div id="primary" class="content-area">
<main id="main" class="site-main" role="main">
<article id="post-771" class="post-771 post type-post status-publish format-standard hentry category-conversational-agents category-neural-networks category-nlp category-recurrent-neural-networks">
<header class="entry-header">
<div class="entry-meta"><span class="posted-on"><span class="screen-reader-text">Posted on</span> <a href="http://www.wildml.com/2016/07/deep-learning-for-chatbots-2-retrieval-based-model-tensorflow/" rel="bookmark"><time class="entry-date published" datetime="2016-07-04T12:15:42-07:00">July 4, 2016</time><time class="updated" datetime="2016-08-18T07:49:59-07:00">August 18, 2016</time></a></span><span class="byline"> by <span class="author vcard"><a class="url fn n" href="http://www.wildml.com/author/dennybritz/">Denny Britz</a></span></span></div><!-- .entry-meta --><h1 class="entry-title">Deep Learning for Chatbots, Part 2 &#8211; Implementing a Retrieval-Based Model in Tensorflow</h1>	</header><!-- .entry-header -->
<div class="entry-content">
<p><strong><a href="https://github.com/dennybritz/chatbot-retrieval/">The Code and data for this tutorial is on Github.</a></strong></p>
<h4>Retrieval-Based bots</h4>
<p>In this post we&#8217;ll implement a retrieval-based bot. Retrieval-based models have a repository of pre-defined responses they can use, which is unlike <em>generative</em> models that can generate responses they&#8217;ve never seen before. A bit more formally, the input to a retrieval-based model is a context <img src="//s0.wp.com/latex.php?latex=c&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="c" title="c" class="latex" /> (the conversation up to this point) and a potential response <img src="//s0.wp.com/latex.php?latex=r&#038;bg=ffffff&#038;fg=000&#038;s=0" alt="r" title="r" class="latex" />. The model outputs is a score for the response. To find a good response you would calculate the score for multiple responses and choose the one with the highest score.</p>
<p><span id="more-771"></span></p>
<p>But why would you want to build a retrieval-based model if you can build a generative model? Generative models seem more flexible because they don&#8217;t need this repository of predefined responses, right?</p>
<p>The problem is that generative models don&#8217;t work well in practice. At least not yet. Because they have so much freedom in how they can respond, generative models tend to make grammatical mistakes and produce irrelevant, generic or inconsistent responses. They also need huge amounts of training data and are hard to optimize. The vast majority of production systems today are retrieval-based, or a combination of retrieval-based and generative. Google&#8217;s <a href="http://arxiv.org/abs/1606.04870">Smart Reply</a> is a good example. Generative models are an active area of research, but we&#8217;re not quite there yet. If you want to build a conversational agent today your best bet is most likely a retrieval-based model.</p>
<h4>The Ubuntu Dialog Corpus</h4>
<p>In this post we&#8217;ll work with the Ubuntu Dialog Corpus (<a href="http://arxiv.org/abs/1506.08909">paper</a>, <a href="https://github.com/rkadlec/ubuntu-ranking-dataset-creator">github</a>). The Ubuntu Dialog Corpus (UDC) is one of the largest public dialog datasets available. It&#8217;s based on chat logs from the Ubuntu channels on a public IRC network. The <a href="http://arxiv.org/abs/1506.08909">paper</a> goes into detail on how exactly the corpus was created, so I won&#8217;t repeat that here. However, it&#8217;s important to understand what kind of data we&#8217;re working with, so let&#8217;s do some exploration first.</p>
<p>The training data consists of 1,000,000 examples, 50% positive (label 1) and 50% negative (label 0). Each example consists of a <em>context</em>, the conversation up to this point, and an <em>utterance</em>, a response to the context. A positive label means that an utterance was an actual response to a context, and a negative label means that the utterance wasn&#8217;t &#8211; it was picked randomly from somewhere in the corpus. Here is some sample data.</p>
<p><a href="http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.29.42-PM.png"><img src="http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.29.42-PM-1024x541.png" alt="Head of Ubuntu Dialog Corpus Training Set" width="620" height="328" class="alignnone size-large wp-image-772" srcset="http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.29.42-PM-1024x541.png 1024w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.29.42-PM-300x159.png 300w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.29.42-PM-768x406.png 768w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.29.42-PM-719x380.png 719w" sizes="(max-width: 620px) 100vw, 620px" /></a></p>
<p>Note that the dataset generation script has already done a bunch of preprocessing for us &#8211; it has <a href="http://www.nltk.org/api/nltk.tokenize.html#module-nltk.tokenize">tokenized</a>, <a href="http://www.nltk.org/api/nltk.stem.html#module-nltk.stem.snowball">stemmed</a>, and <a href="http://www.nltk.org/api/nltk.stem.html#module-nltk.stem.wordnet">lemmatized</a> the output using the <a href="http://www.nltk.org/">NLTK tool</a>. The script also replaced entities like names, locations, organizations, URLs, and system paths with special tokens. This preprocessing isn&#8217;t strictly necessary, but it&#8217;s likely to improve performance by a few percent. The average context is 86 words long and the average utterance is 17 words long. <a href="https://github.com/dennybritz/chatbot-retrieval/blob/master/notebooks/Data%20Exploration.ipynb">Check out the Jupyter notebook to see the data analysis</a>.</p>
<p>The data set comes with test and validations sets. The format of these is different from that of the training data. Each record in the test/validation set consists of a context, a ground truth utterance (the real response) and 9 incorrect utterances called <em>distractors</em>. The goal of the model is to assign the highest score to the true utterance, and lower scores to wrong utterances.</p>
<p><a href="http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.43.09-PM.png"><img src="http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.43.09-PM-1024x373.png" alt="Ubuntu Dialog Corpus Test Head" width="620" height="226" class="alignnone size-large wp-image-774" srcset="http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.43.09-PM-1024x373.png 1024w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.43.09-PM-300x109.png 300w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.43.09-PM-768x280.png 768w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-20-at-12.43.09-PM-1043x380.png 1043w" sizes="(max-width: 620px) 100vw, 620px" /></a></p>
<p>The are various ways to evaluate how well our model does. A commonly used metric is <em>recall@k</em>. Recall@k means that we let the model pick the k best responses out of the 10 possible responses (1 true and 9 distractors). If the correct one is among the picked ones we mark that test example as correct. So, a larger k means that the task becomes easier. If we set <code>k=10</code> we get a recall of 100% because we only have 10 responses to pick from. If we set k=1 the model has only one chance to pick the right response.</p>
<p>At this point you may be wondering how the 9 distractors were chosen. In this data set the 9 distractors were picked at random. However, in the real world you may have millions of possible responses and you don&#8217;t know which one is correct. You can&#8217;t possibly evaluate a million potential responses to pick the one with the highest score &#8211; that&#8217;d be too expensive. Google&#8217;s <a href="http://arxiv.org/abs/1606.04870">Smart Reply uses clustering techniques to come up with a set of possible responses</a> to choose from first. Or, if you only have a few hundred potential responses in total you could just evaluate all of them.</p>
<h4>Baselines</h4>
<p>Before starting with fancy Neural Network models let&#8217;s build some simple baseline models to help us understand what kind of performance we can expect. We&#8217;ll use the following function to evaluate our <code>recall@k</code> metric:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b911370953288" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b911370953288-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b911370953288-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b911370953288-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b911370953288-4">4</div><div class="crayon-num" data-line="crayon-5c8ba69f7b911370953288-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b911370953288-6">6</div><div class="crayon-num" data-line="crayon-5c8ba69f7b911370953288-7">7</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b911370953288-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">evaluate_recall</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_test</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">k</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b911370953288-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">num_examples</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">float</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b911370953288-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">num_correct</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b911370953288-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-v">predictions</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">label </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">zip</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_test</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ba69f7b911370953288-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">label </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">predictions</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-v">k</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b911370953288-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">num_correct</span><span class="crayon-h"> </span><span class="crayon-o">+=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span></div><div class="crayon-line" id="crayon-5c8ba69f7b911370953288-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">num_correct</span><span class="crayon-o">/</span><span class="crayon-v">num_examples</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0022 seconds] -->
<p></p>
<p>Here, <code>y</code> is a list of our predictions sorted by score in descending order, and <code>y_test</code> is the actual label. For example, a <code>y</code> of <code>[0,3,1,2,5,6,4,7,8,9]</code> Would mean that the utterance number 0 got the highest score, and utterance 9 got the lowest score. Remember that we have 10 utterances for each test example, and the first one (index 0) is always the correct one because the utterance column comes before the distractor columns in our data.</p>
<p>Intuitively, a completely random predictor should get a score of 10% for <code>recall@1</code>, a score of 20% for <code>recall@2</code>, and so on. Let&#8217;s see if that&#8217;s the case.</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b91b204242101" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b91b204242101-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91b204242101-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91b204242101-3">3</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b91b204242101-1"><span class="crayon-c"># Random Predictor</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91b204242101-2"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">predict_random</span><span class="crayon-sy">(</span><span class="crayon-v">context</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">utterances</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91b204242101-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">random</span><span class="crayon-sy">.</span><span class="crayon-e">choice</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">utterances</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">replace</span><span class="crayon-o">=</span><span class="crayon-t">False</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0002 seconds] -->
<p></p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b91d939365403" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b91d939365403-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91d939365403-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91d939365403-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91d939365403-4">4</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91d939365403-5">5</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b91d939365403-1"><span class="crayon-c"># Evaluate Random predictor</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91d939365403-2"><span class="crayon-v">y_random</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">predict_random</span><span class="crayon-sy">(</span><span class="crayon-v">test_df</span><span class="crayon-sy">.</span><span class="crayon-v">Context</span><span class="crayon-sy">[</span><span class="crayon-v">x</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">test_df</span><span class="crayon-sy">.</span><span class="crayon-v">iloc</span><span class="crayon-sy">[</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-cn">1</span><span class="crayon-o">:</span><span class="crayon-sy">]</span><span class="crayon-sy">.</span><span class="crayon-v">values</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">x</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">range</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">test_df</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91d939365403-3"><span class="crayon-v">y_test</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">y_random</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91d939365403-4"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">n</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91d939365403-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Recall</span><span class="crayon-h"> </span><span class="crayon-sy">@</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">{</span><span class="crayon-sy">}</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">)</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-o">:</span><span class="crayon-v">g</span><span class="crayon-sy">}</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">n</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">evaluate_recall</span><span class="crayon-sy">(</span><span class="crayon-v">y_random</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_test</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0005 seconds] -->
<p></p>
<p>[text]<br />
Recall @ (1, 10): 0.0937632<br />
Recall @ (2, 10): 0.194503<br />
Recall @ (5, 10): 0.49297<br />
Recall @ (10, 10): 1<br />
[/text]</p>
<p>Great, seems to work. Of course we don&#8217;t just want a random predictor. Another baseline that was discussed in the original paper is a tf-idf predictor. <a href="https://en.wikipedia.org/wiki/Tf%E2%80%93idf">tf-idf</a> stands for &#8220;term frequency &#8211; inverse document&#8221; frequency and it measures how important a word in a document is relative to the whole corpus. Without going into too much detail (you can find many tutorials about tf-idf on the web), documents that have similar content will have similar tf-idf vectors. Intuitively, if a context and a response have similar words they are more likely to be a correct pair. At least more likely than random. Many libraries out there (such as <a href="http://scikit-learn.org/">scikit-learn</a>) come with built-in tf-idf functions, so it&#8217;s very easy to use. Let&#8217;s build a tf-idf predictor and see how well it performs.</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b91e297071726" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b91e297071726-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91e297071726-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91e297071726-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91e297071726-4">4</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91e297071726-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91e297071726-6">6</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91e297071726-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91e297071726-8">8</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91e297071726-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91e297071726-10">10</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91e297071726-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91e297071726-12">12</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91e297071726-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91e297071726-14">14</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91e297071726-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91e297071726-16">16</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b91e297071726-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">TFIDFPredictor</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91e297071726-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">__init__</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91e297071726-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">vectorizer</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">TfidfVectorizer</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91e297071726-4">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b91e297071726-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">train</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">data</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91e297071726-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">vectorizer</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">data</span><span class="crayon-sy">.</span><span class="crayon-v">Context</span><span class="crayon-sy">.</span><span class="crayon-v">values</span><span class="crayon-sy">,</span><span class="crayon-v">data</span><span class="crayon-sy">.</span><span class="crayon-v">Utterance</span><span class="crayon-sy">.</span><span class="crayon-v">values</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91e297071726-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91e297071726-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">context</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">utterances</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91e297071726-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Convert context and utterances into tfidf vector</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91e297071726-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">vector_context</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">vectorizer</span><span class="crayon-sy">.</span><span class="crayon-e">transform</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">context</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91e297071726-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">vector_doc</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">vectorizer</span><span class="crayon-sy">.</span><span class="crayon-e">transform</span><span class="crayon-sy">(</span><span class="crayon-v">utterances</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91e297071726-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># The dot product measures the similarity of the resulting vectors</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91e297071726-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">dot</span><span class="crayon-sy">(</span><span class="crayon-v">vector_doc</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">vector_context</span><span class="crayon-sy">.</span><span class="crayon-v">T</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">todense</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91e297071726-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">asarray</span><span class="crayon-sy">(</span><span class="crayon-v">result</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">flatten</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91e297071726-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Sort by top results and return the indices in descending order</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91e297071726-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">argsort</span><span class="crayon-sy">(</span><span class="crayon-v">result</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">axis</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span><span class="crayon-sy">[</span><span class="crayon-o">::</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b91f317296389" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b91f317296389-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91f317296389-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91f317296389-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91f317296389-4">4</div><div class="crayon-num" data-line="crayon-5c8ba69f7b91f317296389-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b91f317296389-6">6</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b91f317296389-1"><span class="crayon-c"># Evaluate TFIDF predictor</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91f317296389-2"><span class="crayon-v">pred</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">TFIDFPredictor</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91f317296389-3"><span class="crayon-v">pred</span><span class="crayon-sy">.</span><span class="crayon-e">train</span><span class="crayon-sy">(</span><span class="crayon-v">train_df</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91f317296389-4"><span class="crayon-v">y</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">pred</span><span class="crayon-sy">.</span><span class="crayon-e">predict</span><span class="crayon-sy">(</span><span class="crayon-v">test_df</span><span class="crayon-sy">.</span><span class="crayon-v">Context</span><span class="crayon-sy">[</span><span class="crayon-v">x</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">test_df</span><span class="crayon-sy">.</span><span class="crayon-v">iloc</span><span class="crayon-sy">[</span><span class="crayon-v">x</span><span class="crayon-sy">,</span><span class="crayon-cn">1</span><span class="crayon-o">:</span><span class="crayon-sy">]</span><span class="crayon-sy">.</span><span class="crayon-v">values</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">x</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">range</span><span class="crayon-sy">(</span><span class="crayon-k ">len</span><span class="crayon-sy">(</span><span class="crayon-v">test_df</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-5c8ba69f7b91f317296389-5"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">n</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b91f317296389-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-sy">(</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-e">Recall</span><span class="crayon-h"> </span><span class="crayon-sy">@</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">{</span><span class="crayon-sy">}</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">)</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-o">:</span><span class="crayon-v">g</span><span class="crayon-sy">}</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">.</span><span class="crayon-k ">format</span><span class="crayon-sy">(</span><span class="crayon-v">n</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">evaluate_recall</span><span class="crayon-sy">(</span><span class="crayon-v">y</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">y_test</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0005 seconds] -->
<p></p>
<p>[text]<br />
Recall @ (1, 10): 0.495032<br />
Recall @ (2, 10): 0.596882<br />
Recall @ (5, 10): 0.766121<br />
Recall @ (10, 10): 1<br />
[/text]</p>
<p>We can see that the tf-idf model performs significantly better than the random model. It&#8217;s far from perfect though. The assumptions we made aren&#8217;t that great. First of all, a response doesn&#8217;t necessarily need to be similar to the context to be correct. Secondly, tf-idf ignores word order, which can be an important signal. With a Neural Network model we can do a bit better.</p>
<h4>Dual Encoder LSTM</h4>
<p>The Deep Learning model we will build in this post is called a <em>Dual Encoder LSTM</em> network. This type of network is just one of many we could apply to this problem and it&#8217;s not necessarily the best one. You can come up with all kinds of Deep Learning architectures that haven&#8217;t been tried yet &#8211; it&#8217;s an active research area. For example, the <a href="https://www.tensorflow.org/versions/r0.9/tutorials/seq2seq/index.html">seq2seq model</a> often used in Machine Translation would probably do well on this task. The reason we are going for the Dual Encoder is because it has been <a href="http://arxiv.org/abs/1510.03753">reported</a> to give decent performance on this data set. This means we know what to expect and can be sure that our implementation is correct. Applying other models to this problem would be an interesting project.</p>
<p>The Dual Encoder LSTM we&#8217;ll build looks like this (<a href="http://arxiv.org/abs/1506.08909">paper</a>):</p>
<p><a href="http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-21-at-10.51.18-AM.png"><img src="http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-21-at-10.51.18-AM-1024x690.png" alt="Dual Encoder RNN" width="620" height="418" class="alignnone size-large wp-image-776" srcset="http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-21-at-10.51.18-AM-1024x690.png 1024w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-21-at-10.51.18-AM-300x202.png 300w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-21-at-10.51.18-AM-768x518.png 768w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-21-at-10.51.18-AM-360x242.png 360w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-21-at-10.51.18-AM-564x380.png 564w, http://www.wildml.com/wp-content/uploads/2016/04/Screen-Shot-2016-04-21-at-10.51.18-AM.png 1300w" sizes="(max-width: 620px) 100vw, 620px" /></a></p>
<p>It roughly works as follows:</p>
<ol>
<li>Both the context and the response text are split by words, and each word is <a href="https://en.wikipedia.org/wiki/Word_embedding">embedded</a> into a vector. The word embeddings are initialized with Stanford&#8217;s <a href="http://nlp.stanford.edu/projects/glove/">GloVe</a> vectors and are fine-tuned during training (Side note: This is optional and not shown in the picture. I found that initializing the word embeddings with GloVe did not make a big difference in terms of model performance).</p>
</li>
<li>
<p>Both the embedded context and response are fed into the same Recurrent Neural Network word-by-word. The RNN generates a vector representation that, loosely speaking, captures the &#8220;meaning&#8221; of the context and response (<code>c</code> and <code>r</code> in the picture). We can choose how large these vectors should be, but let&#8217;s say we pick 256 dimensions.</p>
</li>
<li>
<p>We multiply <code>c</code> with a matrix <code>M</code> to &#8220;predict&#8221; a response <code>r'</code>. If <code>c</code> is a 256-dimensional vector, then <code>M</code> is a 256&#215;256 dimensional matrix, and the result is another 256-dimensional vector, which we can interpret as a generated response. The matrix <code>M</code> is learned during training.</p>
</li>
<li>
<p>We measure the similarity of the predicted response <code>r'</code> and the actual response <code>r</code> by taking the dot product of these two vectors. A large dot product means the vectors are similar and that the response should receive a high score. We then apply a sigmoid function to convert that score into a probability. Note that steps 3 and 4 are combined in the figure.</p>
</li>
</ol>
<p>To train the network, we also need a loss (cost) function. We&#8217;ll use the binary cross-entropy loss common for classification problems. Let&#8217;s call our true label for a context-response pair <code>y</code>. This can be either 1 (actual response) or 0 (incorrect response). Let&#8217;s call our predicted probability from 4. above <code>y'</code>. Then, the cross entropy loss is calculated as <code>L= âˆ’y * ln(y') âˆ’ (1 âˆ’ y) * ln(1âˆ’y')</code>. The intuition behind this formula is simple. If <code>y=1</code> we are left with <code>L = -ln(y')</code>, which penalizes a prediction far away from 1, and if <code>y=0</code> we are left with <code>L= âˆ’ln(1âˆ’y')</code>, which penalizes a prediction far away from 0.</p>
<p>For our implementation we&#8217;ll use a combination of <a href="http://www.numpy.org/">numpy</a>, <a href="http://pandas.pydata.org/">pandas</a>, <a href="http://www.tensorflow.org">Tensorflow</a> and <a href="https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/learn/python/learn">TF Learn</a> (a combination of high-level convenience functions for Tensorflow).</p>
<h4>Data Preprocessing</h4>
<p>The <a href="https://github.com/rkadlec/ubuntu-ranking-dataset-creator">dataset</a> originally comes in CSV format. We could work directly with CSVs, but it&#8217;s better to convert our data into Tensorflow&#8217;s proprietary <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/example/example.proto">Example</a> format. (Quick side note: There&#8217;s also <code>tf.SequenceExample</code> but it doesn&#8217;t seem to be supported by tf.learn yet). The main benefit of this format is that it allows us to load tensors directly from the input files and let Tensorflow handle all the shuffling, batching and queuing of inputs. As part of the preprocessing we also create a vocabulary. This means we map each word to an integer number, e.g. &#8220;cat&#8221; may become <code>2631</code>. The <code>TFRecord</code> files we will generate store these integer numbers instead of the word strings. We will also save the vocabulary so that we can map back from integers to words later on.</p>
<p>Each <code>Example</code> contains the following fields:</p>
<ul>
<li><code>context</code>: A sequence of word ids representing the context text, e.g. <code>[231, 2190, 737, 0, 912]</code></li>
<li><code>context_len</code>: The length of the context, e.g. <code>5</code> for the above example</li>
<li><code>utterance</code> A sequence of word ids representing the utterance (response)</li>
<li><code>utterance_len</code>: The length of the utterance</li>
<li><code>label</code>: Only in the training data. <code>0</code> or <code>1</code>.</li>
<li><code>distractor_[N]</code>: Only in the test/validation data. N ranges from 0 to 8. A sequence of word ids representing the distractor utterance.</li>
<li><code>distractor_[N]_len</code>: Only in the test/validation data. N ranges from 0 to 8. The length of the utterance.</li>
</ul>
<p>The preprocessing is done by the <a href="https://github.com/dennybritz/chatbot-retrieval/blob/master/scripts/prepare_data.py"><code>prepare_data.py</code></a> Python script, which generates 3 files: <code>train.tfrecords</code>, <code>validation.tfrecords</code> and <code>test.tfrecords</code>. You can run the script yourself or <a href="https://drive.google.com/open?id=0B_bZck-ksdkpVEtVc1R6Y01HMWM">download the data files here</a>.</p>
<h4>Creating an input function</h4>
<p>In order to use Tensorflow&#8217;s built-in support for training and evaluation we need to create an input function &#8211; a function that returns batches of our input data. In fact, because our training and test data have different formats, we need different input functions for them. The input function should return a batch of features and labels (if available). Something along the lines of:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b920337936023" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b920337936023-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b920337936023-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b920337936023-3">3</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b920337936023-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">input_fn</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b920337936023-2"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c"># TODO Load and preprocess data here</span></div><div class="crayon-line" id="crayon-5c8ba69f7b920337936023-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">batched_features</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">labels</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0001 seconds] -->
<p></p>
<p>Because we need different input functions during training and evaluation and because we hate code duplication we create a wrapper called <code>create_input_fn</code> that creates an input function for the appropriate mode. It also takes a few other parameters. Here&#8217;s the definition we&#8217;re using:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b931447304647" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b931447304647-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b931447304647-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b931447304647-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b931447304647-4">4</div><div class="crayon-num" data-line="crayon-5c8ba69f7b931447304647-5">5</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b931447304647-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">create_input_fn</span><span class="crayon-sy">(</span><span class="crayon-v">mode</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">input_files</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">batch_size</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">num_epochs</span><span class="crayon-o">=</span><span class="crayon-t">None</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b931447304647-2"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">input_fn</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ba69f7b931447304647-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># TODO Load and preprocess data here</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b931447304647-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">batched_features</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">labels</span></div><div class="crayon-line" id="crayon-5c8ba69f7b931447304647-5"><span class="crayon-e">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">input_fn</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0002 seconds] -->
<p></p>
<p>The complete code can be found in <a href="https://github.com/dennybritz/chatbot-retrieval/blob/master/udc_inputs.py"><code>udc_inputs.py</code></a>. On a high level, the function does the following:</p>
<ol>
<li>Create a feature definition that describes the fields in our <code>Example</code> file</li>
<li>Read records from the <code>input_files</code> with <code>tf.TFRecordReader</code></li>
<li>Parse the records according to the feature definition</li>
<li>Extract the training labels</li>
<li>Batch multiple examples and training labels</li>
<li>Return the batched examples and training labels</li>
</ol>
<h4>Defining Evaluation Metrics</h4>
<p>We already mentioned that we want to use the <code>recall@k</code> metric to evaluate our model. Luckily, Tensorflow already comes with many standard evaluation metrics that we can use, including <code>recall@k</code>. To use these metrics we need to create a dictionary that maps from a metric name to a function that takes the predictions and label as arguments:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b932642078260" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b932642078260-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b932642078260-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b932642078260-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b932642078260-4">4</div><div class="crayon-num" data-line="crayon-5c8ba69f7b932642078260-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b932642078260-6">6</div><div class="crayon-num" data-line="crayon-5c8ba69f7b932642078260-7">7</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b932642078260-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">create_evaluation_metrics</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b932642078260-2"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">eval_metrics</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-5c8ba69f7b932642078260-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">k</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b932642078260-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">eval_metrics</span><span class="crayon-sy">[</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">recall_at_</span><span class="crayon-o">%</span><span class="crayon-v">d</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-v">k</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">functools</span><span class="crayon-sy">.</span><span class="crayon-e">partial</span><span class="crayon-sy">(</span></div><div class="crayon-line" id="crayon-5c8ba69f7b932642078260-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">contrib</span><span class="crayon-sy">.</span><span class="crayon-v">metrics</span><span class="crayon-sy">.</span><span class="crayon-v">streaming_sparse_recall_at_k</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b932642078260-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">k</span><span class="crayon-o">=</span><span class="crayon-v">k</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b932642078260-7"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">eval_metrics</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<p>Above, we use <a href="https://docs.python.org/2/library/functools.html#functools.partial"><code>functools.partial</code></a> to convert a function that takes 3 arguments to one that only takes 2 arguments. Don&#8217;t let the name <code>streaming_sparse_recall_at_k</code> confuse you. Streaming just means that the metric is accumulated over multiple batches, and sparse refers to the format of our labels.</p>
<p>This brings is to an important point: What exactly is the format of our predictions during evaluation? During training, we predict the probability of the example being correct. But during evaluation our goal is to score the utterance and 9 distractors and pick the best one &#8211; we don&#8217;t simply predict correct/incorrect. This means that during evaluation each example should result in a vector of 10 scores, e.g. <code>[0.34, 0.11, 0.22, 0.45, 0.01, 0.02, 0.03, 0.08, 0.33, 0.11]</code>, where the scores correspond to the true response and the 9 distractors respectively. Each utterance is scored independently, so the probabilities don&#8217;t need to add up to 1. Because the true response is always element 0 in array, the label for each example is 0. The example above would be counted as classified incorrectly by <code>recall@1</code> because the third distractor got a probability of <code>0.45</code> while the true response only got <code>0.34</code>. It would be scored as correct by <code>recall@2</code> however.</p>
<h4>Boilerplate Training Code</h4>
<p>Before writing the actual neural network code I like to write the boilerplate code for training and evaluating the model. That&#8217;s because, as long as you adhere to the right interfaces, it&#8217;s easy to swap out what kind of network you are using. Let&#8217;s assume we have a model function <code>model_fn</code> that takes as inputs our batched features, labels and mode (train or evaluation) and returns the predictions. Then we can write general-purpose code to train our model as follows:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b933686415496" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-4">4</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-6">6</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-8">8</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-10">10</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-12">12</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-14">14</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-16">16</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-18">18</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-20">20</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-22">22</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-24">24</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-26">26</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-28">28</div><div class="crayon-num" data-line="crayon-5c8ba69f7b933686415496-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b933686415496-30">30</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-1"><span class="crayon-v">estimator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">contrib</span><span class="crayon-sy">.</span><span class="crayon-v">learn</span><span class="crayon-sy">.</span><span class="crayon-e">Estimator</span><span class="crayon-sy">(</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-2"><span class="crayon-v">model_fn</span><span class="crayon-o">=</span><span class="crayon-v">model_fn</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-3"><span class="crayon-v">model_dir</span><span class="crayon-o">=</span><span class="crayon-v">MODEL_DIR</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-4"><span class="crayon-v">config</span><span class="crayon-o">=</span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">contrib</span><span class="crayon-sy">.</span><span class="crayon-v">learn</span><span class="crayon-sy">.</span><span class="crayon-e">RunConfig</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-6"><span class="crayon-v">input_fn_train</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">udc_inputs</span><span class="crayon-sy">.</span><span class="crayon-e">create_input_fn</span><span class="crayon-sy">(</span></div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-7"><span class="crayon-v">mode</span><span class="crayon-o">=</span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">contrib</span><span class="crayon-sy">.</span><span class="crayon-v">learn</span><span class="crayon-sy">.</span><span class="crayon-v">ModeKeys</span><span class="crayon-sy">.</span><span class="crayon-v">TRAIN</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-8"><span class="crayon-v">input_files</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-v">TRAIN_FILE</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-9"><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-v">hparams</span><span class="crayon-sy">.</span><span class="crayon-v">batch_size</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-10">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-11"><span class="crayon-v">input_fn_eval</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">udc_inputs</span><span class="crayon-sy">.</span><span class="crayon-e">create_input_fn</span><span class="crayon-sy">(</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-12"><span class="crayon-v">mode</span><span class="crayon-o">=</span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">contrib</span><span class="crayon-sy">.</span><span class="crayon-v">learn</span><span class="crayon-sy">.</span><span class="crayon-v">ModeKeys</span><span class="crayon-sy">.</span><span class="crayon-k ">EVAL</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-13"><span class="crayon-v">input_files</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-v">VALIDATION_FILE</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-14"><span class="crayon-v">batch_size</span><span class="crayon-o">=</span><span class="crayon-v">hparams</span><span class="crayon-sy">.</span><span class="crayon-v">eval_batch_size</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-15"><span class="crayon-v">num_epochs</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-16">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-17"><span class="crayon-v">eval_metrics</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">udc_metrics</span><span class="crayon-sy">.</span><span class="crayon-e">create_evaluation_metrics</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-18">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-19"><span class="crayon-c"># We need to subclass theis manually for now. The next TF version will</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-20"><span class="crayon-c"># have support ValidationMonitors with metrics built-in.</span></div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-21"><span class="crayon-c"># It's already on the master branch.</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-22"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">EvaluationMonitor</span><span class="crayon-sy">(</span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">contrib</span><span class="crayon-sy">.</span><span class="crayon-v">learn</span><span class="crayon-sy">.</span><span class="crayon-v">monitors</span><span class="crayon-sy">.</span><span class="crayon-v">EveryN</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-23"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">every_n_step_end</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">step</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">outputs</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-24"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">_estimator</span><span class="crayon-sy">.</span><span class="crayon-e">evaluate</span><span class="crayon-sy">(</span></div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">input_fn</span><span class="crayon-o">=</span><span class="crayon-v">input_fn_eval</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">metrics</span><span class="crayon-o">=</span><span class="crayon-v">eval_metrics</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">steps</span><span class="crayon-o">=</span><span class="crayon-t">None</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-28">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b933686415496-29"><span class="crayon-v">eval_monitor</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">EvaluationMonitor</span><span class="crayon-sy">(</span><span class="crayon-v">every_n_steps</span><span class="crayon-o">=</span><span class="crayon-v">FLAGS</span><span class="crayon-sy">.</span><span class="crayon-v">eval_every</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b933686415496-30"><span class="crayon-v">estimator</span><span class="crayon-sy">.</span><span class="crayon-e">fit</span><span class="crayon-sy">(</span><span class="crayon-v">input_fn</span><span class="crayon-o">=</span><span class="crayon-v">input_fn_train</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">steps</span><span class="crayon-o">=</span><span class="crayon-t">None</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">monitors</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-v">eval_monitor</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>Here we create an estimator for our <code>model_fn</code>, two input functions for training and evaluation data, and our evaluation metrics dictionary. We also define a monitor that evaluates our model every <code>FLAGS.eval_every</code> steps during training. Finally, we train the model. The training runs indefinitely, but Tensorflow automatically saves checkpoint files in <code>MODEL_DIR</code>, so you can stop the training at any time. A more fancy technique would be to use early stopping, which means you automatically stop training when a validation set metric stops improving (i.e. you are starting to overfit). You can see the full code in <a href="https://github.com/dennybritz/chatbot-retrieval/blob/master/udc_train.py"><code>udc_train.py</code></a>.</p>
<p>Two things I want to mention briefly is the usage of <code>FLAGS</code>. This is a way to give command line parameters to the program (similar to Python&#8217;s argparse). <code>hparams</code> is a custom object we create in <a href="https://github.com/dennybritz/chatbot-retrieval/blob/master/udc_hparams.py"><code>hparams.py</code></a> that holds hyperparameters, nobs we can tweak, of our model. This hparams object is given to the model when we instantiate it.</p>
<h4>Creating the model</h4>
<p>Now that we have set up the boilerplate code around inputs, parsing, evaluation and training it&#8217;s time to write code for our Dual LSTM neural network. Because we have different formats of training and evaluation data I&#8217;ve written a <a href="https://github.com/dennybritz/chatbot-retrieval/blob/master/udc_model.py"><code>create_model_fn</code></a> wrapper that takes care of bringing the data into the right format for us. It takes a <code>model_impl</code> argument, which is a function that actually makes predictions. In our case it&#8217;s the Dual Encoder LSTM we described above, but we could easily swap it out for some other neural network. Let&#8217;s see what that looks like:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b937582927333" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-4">4</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-6">6</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-8">8</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-10">10</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-12">12</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-14">14</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-16">16</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-18">18</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-20">20</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-22">22</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-24">24</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-26">26</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-28">28</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-30">30</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-32">32</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-34">34</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-36">36</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-38">38</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-40">40</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-42">42</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-44">44</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-46">46</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-48">48</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-50">50</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-51">51</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-52">52</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-53">53</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-54">54</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-55">55</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-56">56</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-57">57</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-58">58</div><div class="crayon-num" data-line="crayon-5c8ba69f7b937582927333-59">59</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b937582927333-60">60</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-1"><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">dual_encoder_model</span><span class="crayon-sy">(</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">hparams</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">mode</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">context</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">context_len</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">utterance</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">utterance_len</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">targets</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-10"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c"># Initialize embedidngs randomly or with pre-trained vectors if available</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-11"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">embeddings_W</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">get_embeddings</span><span class="crayon-sy">(</span><span class="crayon-v">hparams</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-12">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-13"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c"># Embed the context and the utterance</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-14"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">context_embedded</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">nn</span><span class="crayon-sy">.</span><span class="crayon-e">embedding_lookup</span><span class="crayon-sy">(</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">embeddings_W</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">context</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">name</span><span class="crayon-o">=&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">embed_context</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-16"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">utterance_embedded</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">nn</span><span class="crayon-sy">.</span><span class="crayon-e">embedding_lookup</span><span class="crayon-sy">(</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">embeddings_W</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">utterance</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">name</span><span class="crayon-o">=&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">embed_utterance</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-18">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-19">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-20"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c"># Build the RNN</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-21"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">with</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">variable_scope</span><span class="crayon-sy">(</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">rnn</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-v">vs</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># We use an LSTM Cell</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cell</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">nn</span><span class="crayon-sy">.</span><span class="crayon-v">rnn_cell</span><span class="crayon-sy">.</span><span class="crayon-e">LSTMCell</span><span class="crayon-sy">(</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">hparams</span><span class="crayon-sy">.</span><span class="crayon-v">rnn_dim</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">forget_bias</span><span class="crayon-o">=</span><span class="crayon-cn">2.0</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">use_peepholes</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">state_is_tuple</span><span class="crayon-o">=</span><span class="crayon-t">True</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-28">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-29"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Run the utterance and context through the RNN</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-30"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">rnn_outputs</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">rnn_states</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">nn</span><span class="crayon-sy">.</span><span class="crayon-e">dynamic_rnn</span><span class="crayon-sy">(</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-31"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cell</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-32"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">concat</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">context_embedded</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">utterance_embedded</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-33"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">sequence_length</span><span class="crayon-o">=</span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">concat</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">context_len</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">utterance_len</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-34"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">dtype</span><span class="crayon-o">=</span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">float32</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-35"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">encoding_context</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">encoding_utterance</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">split</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">rnn_states</span><span class="crayon-sy">.</span><span class="crayon-v">h</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-36">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-37"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">with</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">variable_scope</span><span class="crayon-sy">(</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">prediction</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-v">vs</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-38"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">M</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">get_variable</span><span class="crayon-sy">(</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">M</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-39"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">shape</span><span class="crayon-o">=</span><span class="crayon-sy">[</span><span class="crayon-v">hparams</span><span class="crayon-sy">.</span><span class="crayon-v">rnn_dim</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">hparams</span><span class="crayon-sy">.</span><span class="crayon-v">rnn_dim</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-40"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">initializer</span><span class="crayon-o">=</span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">truncated_normal_initializer</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-41">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-42"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># &amp;quot;Predict&amp;quot; a&nbsp;&nbsp;response: c * M</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-43"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">generated_response</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">matmul</span><span class="crayon-sy">(</span><span class="crayon-v">encoding_context</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">M</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-44"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">generated_response</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">expand_dims</span><span class="crayon-sy">(</span><span class="crayon-v">generated_response</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-45"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">encoding_utterance</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">expand_dims</span><span class="crayon-sy">(</span><span class="crayon-v">encoding_utterance</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-46">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-47"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Dot product between generated response and actual response</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-48"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># (c * M) * r</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-49"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">logits</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">batch_matmul</span><span class="crayon-sy">(</span><span class="crayon-v">generated_response</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">encoding_utterance</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-50"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">logits</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">squeeze</span><span class="crayon-sy">(</span><span class="crayon-v">logits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-51">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-52"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Apply sigmoid to convert logits to probabilities</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-53"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">probs</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">sigmoid</span><span class="crayon-sy">(</span><span class="crayon-v">logits</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-54">&nbsp;</div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-55"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># Calculate the binary cross-entropy loss</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-56"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">losses</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-v">nn</span><span class="crayon-sy">.</span><span class="crayon-e">sigmoid_cross_entropy_with_logits</span><span class="crayon-sy">(</span><span class="crayon-v">logits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">to_float</span><span class="crayon-sy">(</span><span class="crayon-v">targets</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-57">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-58"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c"># Mean loss across the batch of examples</span></div><div class="crayon-line" id="crayon-5c8ba69f7b937582927333-59"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">mean_loss</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tf</span><span class="crayon-sy">.</span><span class="crayon-e">reduce_mean</span><span class="crayon-sy">(</span><span class="crayon-v">losses</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">name</span><span class="crayon-o">=&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-v">mean_loss</span><span class="crayon-o">&amp;</span><span class="crayon-v">quot</span><span class="crayon-sy">;</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b937582927333-60"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">probs</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">mean_loss</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0018 seconds] -->
<p></p>
<p>The full code is in <a href="https://github.com/dennybritz/chatbot-retrieval/blob/master/models/dual_encoder.py">dual_encoder.py</a>. Given this, we can now instantiate our model function in the main routine in <a href="https://github.com/dennybritz/chatbot-retrieval/blob/master/udc_train.py">udc_train.py</a> that we defined earlier.</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->
<div id="crayon-5c8ba69f7b939461335396" class="crayon-syntax crayon-theme-github crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; margin-left: 12px; font-size: 12px !important; line-height: 15px !important;">
<div class="crayon-plain-wrap"></div>
<div class="crayon-main" style="">
<table class="crayon-table">
<tr class="crayon-row">
<td class="crayon-nums " data-settings="show">
<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-5c8ba69f7b939461335396-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-5c8ba69f7b939461335396-2">2</div><div class="crayon-num" data-line="crayon-5c8ba69f7b939461335396-3">3</div></div>
</td>
<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5c8ba69f7b939461335396-1"><span class="crayon-v">model_fn</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">udc_model</span><span class="crayon-sy">.</span><span class="crayon-e">create_model_fn</span><span class="crayon-sy">(</span></div><div class="crayon-line crayon-striped-line" id="crayon-5c8ba69f7b939461335396-2"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">hparams</span><span class="crayon-o">=</span><span class="crayon-v">hparams</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-5c8ba69f7b939461335396-3"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">model_impl</span><span class="crayon-o">=</span><span class="crayon-v">dual_encoder_model</span><span class="crayon-sy">)</span></div></div></td>
</tr>
</table>
</div>
</div>
<!-- [Format Time: 0.0002 seconds] -->
<p></p>
<p>That&#8217;s it! We can now run <code>python udc_train.py</code> and it should start training our networks, occasionally evaluating recall on our validation data (you can choose how often you want to evaluate using the <code>--eval_every</code> switch). To get a complete list of all available command line flags that we defined using <code>tf.flags</code> and <code>hparams</code> you can run <code>python udc_train.py --help</code>.</p>
<p>[text]<br />
INFO:tensorflow:training step 20200, loss = 0.36895 (0.330 sec/batch).<br />
INFO:tensorflow:Step 20201: mean_loss:0 = 0.385877<br />
INFO:tensorflow:training step 20300, loss = 0.25251 (0.338 sec/batch).<br />
INFO:tensorflow:Step 20301: mean_loss:0 = 0.405653<br />
&#8230;<br />
INFO:tensorflow:Results after 270 steps (0.248 sec/batch): recall_at_1 = 0.507581018519, recall_at_2 = 0.689699074074, recall_at_5 = 0.913020833333, recall_at_10 = 1.0, loss = 0.5383<br />
&#8230;<br />
[/text]</p>
<h4>Evaluating the Model</h4>
<p>After you&#8217;ve trained the model you can evaluate it on the test set using <code>python udc_test.py --model_dir=$MODEL_DIR_FROM_TRAINING</code>, e.g. <code>python udc_test.py --model_dir=~/github/chatbot-retrieval/runs/1467389151</code>. This will run the recall@k evaluation metrics on the test set instead of the validation set. Note that you must call <code>udc_test.py</code> with the same parameters you used during training. So, if you trained with <code>--embedding_size=128</code> you need to call the test script with the same.</p>
<p>After training for about 20,000 steps (around an hour on a fast GPU) our model gets the following results on the test set:</p>
<p>[text]<br />
recall_at_1 = 0.507581018519<br />
recall_at_2 = 0.689699074074<br />
recall_at_5 = 0.913020833333<br />
[/text]</p>
<p>While recall@1 is close to our TFIDF model, recall@2 and recall@5 are significantly better, suggesting that our neural network assigns higher scores to the correct answers. The original paper reported <code>0.55</code>, <code>0.72</code> and <code>0.92</code> for recall@1, recall@2, and recall@5 respectively, but I haven&#8217;t been able to reproduce scores quite as high. Perhaps additional data preprocessing or hyperparameter optimization may bump scores up a bit more.</p>
<h4>Making Predictions</h4>
<p>You can modify and run <a href="https://github.com/dennybritz/chatbot-retrieval/blob/master/udc_predict.py"><code>udc_predict.py</code></a> to get probability scores for unseen data. For example <code>python udc_predict.py --model_dir=./runs/1467576365/</code> outputs:</p>
<p>[text]<br />
Context: Example context<br />
Response 1: 0.44806<br />
Response 2: 0.481638<br />
[/text]</p>
<p>You could imagine feeding in 100 potential responses to a context and then picking the one with the highest score.</p>
<h4>Conclusion</h4>
<p>In this post we&#8217;ve implemented a retrieval-based neural network model that can assign scores to potential responses given a conversation context. There is still a lot of room for improvement, however. One can imagine that other neural networks do better on this task than a dual LSTM encoder. There is also a lot of room for hyperparameter optimization, or improvements to the preprocessing step.  <strong><a href="https://github.com/dennybritz/chatbot-retrieval/">The Code and data for this tutorial is on Github, so check it out.</a></strong></p>
<p></p>
</div><!-- .entry-content -->
<footer class="entry-footer"><span class="cat-tags-links"><span class="cat-links"><svg class="icon icon-folder-open" aria-hidden="true" role="img"> <use href="#icon-folder-open" xlink:href="#icon-folder-open"></use> </svg><span class="screen-reader-text">Categories</span><a href="http://www.wildml.com/category/conversational-agents/" rel="category tag">Conversational Agents</a>, <a href="http://www.wildml.com/category/neural-networks/" rel="category tag">Neural Networks</a>, <a href="http://www.wildml.com/category/nlp/" rel="category tag">NLP</a>, <a href="http://www.wildml.com/category/neural-networks/recurrent-neural-networks/" rel="category tag">Recurrent Neural Networks</a></span></span></footer> <!-- .entry-footer -->
</article><!-- #post-## -->
<div id="disqus_thread"></div>
<nav class="navigation post-navigation" role="navigation">
<h2 class="screen-reader-text">Post navigation</h2>
<div class="nav-links"><div class="nav-previous"><a href="http://www.wildml.com/2016/04/deep-learning-for-chatbots-part-1-introduction/" rel="prev"><span class="screen-reader-text">Previous Post</span><span aria-hidden="true" class="nav-subtitle">Previous</span> <span class="nav-title"><span class="nav-title-icon-wrapper"><svg class="icon icon-arrow-left" aria-hidden="true" role="img"> <use href="#icon-arrow-left" xlink:href="#icon-arrow-left"></use> </svg></span>Deep Learning for Chatbots, Part 1 &#8211; Introduction</span></a></div><div class="nav-next"><a href="http://www.wildml.com/2016/08/rnns-in-tensorflow-a-practical-guide-and-undocumented-features/" rel="next"><span class="screen-reader-text">Next Post</span><span aria-hidden="true" class="nav-subtitle">Next</span> <span class="nav-title">RNNs in Tensorflow, a Practical Guide and Undocumented Features<span class="nav-title-icon-wrapper"><svg class="icon icon-arrow-right" aria-hidden="true" role="img"> <use href="#icon-arrow-right" xlink:href="#icon-arrow-right"></use> </svg></span></span></a></div></div>
</nav>
</main><!-- #main -->
</div><!-- #primary -->
<aside id="secondary" class="widget-area" role="complementary" aria-label="Blog Sidebar">
<section id="blog_subscription-2" class="widget widget_blog_subscription jetpack_subscription_widget"><h2 class="widget-title">Subscribe to Blog via Email</h2>
<form action="#" method="post" accept-charset="utf-8" id="subscribe-blog-blog_subscription-2">
<div id="subscribe-text"><p>Enter your email address to subscribe to this blog and receive notifications of new posts by email.</p>
</div>                    <p id="subscribe-email">
<label id="jetpack-subscribe-label"
class="screen-reader-text"
for="subscribe-field-blog_subscription-2">
Email Address                        </label>
<input type="email" name="email" required="required" class="required"
value=""
id="subscribe-field-blog_subscription-2"
placeholder="Email Address"/>
</p>
<p id="subscribe-submit">
<input type="hidden" name="action" value="subscribe"/>
<input type="hidden" name="source" value="http://www.wildml.com/2016/07/deep-learning-for-chatbots-2-retrieval-based-model-tensorflow/"/>
<input type="hidden" name="sub-type" value="widget"/>
<input type="hidden" name="redirect_fragment" value="blog_subscription-2"/>
<button type="submit"
name="jetpack_subscriptions_widget"
>
Subscribe                        </button>
</p>
</form>
</section>		<section id="recent-posts-2" class="widget widget_recent_entries">		<h2 class="widget-title">Recent Posts</h2>		<ul>
<li>
<a href="http://www.wildml.com/2018/02/introduction-to-learning-to-trade-with-reinforcement-learning/">Introduction to Learning to Trade with Reinforcement Learning</a>
</li>
<li>
<a href="http://www.wildml.com/2017/12/ai-and-deep-learning-in-2017-a-year-in-review/">AI and Deep Learning in 2017 &#8211; A Year in Review</a>
</li>
<li>
<a href="http://www.wildml.com/2017/08/hype-or-not-some-perspective-on-openais-dota-2-bot/">Hype or Not? Some Perspective on OpenAI&#8217;s DotA 2 Bot</a>
</li>
<li>
<a href="http://www.wildml.com/2016/10/learning-reinforcement-learning/">Learning Reinforcement Learning (with Code, Exercises and Solutions)</a>
</li>
<li>
<a href="http://www.wildml.com/2016/08/rnns-in-tensorflow-a-practical-guide-and-undocumented-features/">RNNs in Tensorflow, a Practical Guide and Undocumented Features</a>
</li>
<li>
<a href="http://www.wildml.com/2016/07/deep-learning-for-chatbots-2-retrieval-based-model-tensorflow/">Deep Learning for Chatbots, Part 2 &#8211; Implementing a Retrieval-Based Model in Tensorflow</a>
</li>
<li>
<a href="http://www.wildml.com/2016/04/deep-learning-for-chatbots-part-1-introduction/">Deep Learning for Chatbots, Part 1 &#8211; Introduction</a>
</li>
<li>
<a href="http://www.wildml.com/2016/01/attention-and-memory-in-deep-learning-and-nlp/">Attention and Memory in Deep Learning and NLP</a>
</li>
</ul>
</section><section id="archives-2" class="widget widget_archive"><h2 class="widget-title">Archives</h2>		<ul>
<li><a href='http://www.wildml.com/2018/02/'>February 2018</a></li>
<li><a href='http://www.wildml.com/2017/12/'>December 2017</a></li>
<li><a href='http://www.wildml.com/2017/08/'>August 2017</a></li>
<li><a href='http://www.wildml.com/2016/10/'>October 2016</a></li>
<li><a href='http://www.wildml.com/2016/08/'>August 2016</a></li>
<li><a href='http://www.wildml.com/2016/07/'>July 2016</a></li>
<li><a href='http://www.wildml.com/2016/04/'>April 2016</a></li>
<li><a href='http://www.wildml.com/2016/01/'>January 2016</a></li>
<li><a href='http://www.wildml.com/2015/12/'>December 2015</a></li>
<li><a href='http://www.wildml.com/2015/11/'>November 2015</a></li>
<li><a href='http://www.wildml.com/2015/10/'>October 2015</a></li>
<li><a href='http://www.wildml.com/2015/09/'>September 2015</a></li>
</ul>
</section><section id="categories-2" class="widget widget_categories"><h2 class="widget-title">Categories</h2>		<ul>
<li class="cat-item cat-item-15"><a href="http://www.wildml.com/category/conversational-agents/" >Conversational Agents</a>
</li>
<li class="cat-item cat-item-8"><a href="http://www.wildml.com/category/neural-networks/convolutional-neural-networks/" >Convolutional Neural Networks</a>
</li>
<li class="cat-item cat-item-3"><a href="http://www.wildml.com/category/deep-learning/" >Deep Learning</a>
</li>
<li class="cat-item cat-item-4"><a href="http://www.wildml.com/category/gpu/" >GPU</a>
</li>
<li class="cat-item cat-item-7"><a href="http://www.wildml.com/category/language-modeling/" >Language Modeling</a>
</li>
<li class="cat-item cat-item-11"><a href="http://www.wildml.com/category/memory/" >Memory</a>
</li>
<li class="cat-item cat-item-2"><a href="http://www.wildml.com/category/neural-networks/" >Neural Networks</a>
</li>
<li class="cat-item cat-item-19"><a href="http://www.wildml.com/category/news/" >News</a>
</li>
<li class="cat-item cat-item-9"><a href="http://www.wildml.com/category/nlp/" >NLP</a>
</li>
<li class="cat-item cat-item-6"><a href="http://www.wildml.com/category/neural-networks/recurrent-neural-networks/" >Recurrent Neural Networks</a>
</li>
<li class="cat-item cat-item-17"><a href="http://www.wildml.com/category/reinforcement-learning/" >Reinforcement Learning</a>
</li>
<li class="cat-item cat-item-5"><a href="http://www.wildml.com/category/rnns/" >RNNs</a>
</li>
<li class="cat-item cat-item-16"><a href="http://www.wildml.com/category/tensorflow/" >Tensorflow</a>
</li>
<li class="cat-item cat-item-20"><a href="http://www.wildml.com/category/trading/" >Trading</a>
</li>
<li class="cat-item cat-item-1"><a href="http://www.wildml.com/category/uncategorized/" >Uncategorized</a>
</li>
</ul>
</section><section id="meta-2" class="widget widget_meta"><h2 class="widget-title">Meta</h2>			<ul>
<li><a href="http://www.wildml.com/wp-login.php">Log in</a></li>
<li><a href="http://www.wildml.com/feed/">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
<li><a href="http://www.wildml.com/comments/feed/">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
<li><a href="https://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>			</ul>
</section></aside><!-- #secondary -->
</div><!-- .wrap -->

</div><!-- #content -->
<footer id="colophon" class="site-footer" role="contentinfo">
<div class="wrap">
<aside class="widget-area" role="complementary" aria-label="Footer">
<div class="widget-column footer-widget-1">
</div>
<div class="widget-column footer-widget-2">
</div>
</aside><!-- .widget-area -->
<div class="site-info">
<a href="https://wordpress.org/" class="imprint">
Proudly powered by WordPress	</a>
</div><!-- .site-info -->
</div><!-- .wrap -->
</footer><!-- #colophon -->
</div><!-- .site-content-contain -->
</div><!-- #page -->
<div style="display:none">
</div>
<script type='text/javascript'>
/* <![CDATA[ */
var countVars = {"disqusShortname":"wildml"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/plugins/disqus-comment-system/public/js/comment_count.js?ver=3.0.17'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var embedVars = {"disqusConfig":{"integration":"wordpress 3.0.17"},"disqusIdentifier":"771 http:\/\/www.wildml.com\/?p=771","disqusShortname":"wildml","disqusTitle":"Deep Learning for Chatbots, Part 2 \u2013 Implementing a Retrieval-Based Model in Tensorflow","disqusUrl":"http:\/\/www.wildml.com\/2016\/07\/deep-learning-for-chatbots-2-retrieval-based-model-tensorflow\/","postId":"771"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/plugins/disqus-comment-system/public/js/comment_embed.js?ver=3.0.17'></script>
<script type='text/javascript' src='https://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201911'></script>
<script type='text/javascript' src='https://secure.gravatar.com/js/gprofiles.js?ver=2019Maraa'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=5.1.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var twentyseventeenScreenReaderText = {"quote":"<svg class=\"icon icon-quote-right\" aria-hidden=\"true\" role=\"img\"> <use href=\"#icon-quote-right\" xlink:href=\"#icon-quote-right\"><\/use> <\/svg>","expand":"Expand child menu","collapse":"Collapse child menu","icon":"<svg class=\"icon icon-angle-down\" aria-hidden=\"true\" role=\"img\"> <use href=\"#icon-angle-down\" xlink:href=\"#icon-angle-down\"><\/use> <span class=\"svg-fallback icon-angle-down\"><\/span><\/svg>"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/js/skip-link-focus-fix.js?ver=1.0'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/js/navigation.js?ver=1.0'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/js/global.js?ver=1.0'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-content/themes/twentyseventeen/assets/js/jquery.scrollTo.js?ver=2.1.2'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-includes/js/comment-reply.min.js?ver=5.1.1'></script>
<script type='text/javascript' src='http://www.wildml.com/wp-includes/js/wp-embed.min.js?ver=5.1.1'></script>
<script type='text/javascript' src='https://stats.wp.com/e-201911.js' async='async' defer='defer'></script>
<script type='text/javascript'>
_stq = window._stq || [];
_stq.push([ 'view', {v:'ext',j:'1:7.1.1',blog:'98789418',post:'771',tz:'-7',srv:'www.wildml.com'} ]);
_stq.push([ 'clickTrackerInit', '98789418', '771' ]);
</script>
<svg style="position: absolute; width: 0; height: 0; overflow: hidden;" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<defs>
<symbol id="icon-behance" viewBox="0 0 37 32">
<path class="path1" d="M33 6.054h-9.125v2.214h9.125v-2.214zM28.5 13.661q-1.607 0-2.607 0.938t-1.107 2.545h7.286q-0.321-3.482-3.571-3.482zM28.786 24.107q1.125 0 2.179-0.571t1.357-1.554h3.946q-1.786 5.482-7.625 5.482-3.821 0-6.080-2.357t-2.259-6.196q0-3.714 2.33-6.17t6.009-2.455q2.464 0 4.295 1.214t2.732 3.196 0.902 4.429q0 0.304-0.036 0.839h-11.75q0 1.982 1.027 3.063t2.973 1.080zM4.946 23.214h5.286q3.661 0 3.661-2.982 0-3.214-3.554-3.214h-5.393v6.196zM4.946 13.625h5.018q1.393 0 2.205-0.652t0.813-2.027q0-2.571-3.393-2.571h-4.643v5.25zM0 4.536h10.607q1.554 0 2.768 0.25t2.259 0.848 1.607 1.723 0.563 2.75q0 3.232-3.071 4.696 2.036 0.571 3.071 2.054t1.036 3.643q0 1.339-0.438 2.438t-1.179 1.848-1.759 1.268-2.161 0.75-2.393 0.232h-10.911v-22.5z"></path>
</symbol>
<symbol id="icon-deviantart" viewBox="0 0 18 32">
<path class="path1" d="M18.286 5.411l-5.411 10.393 0.429 0.554h4.982v7.411h-9.054l-0.786 0.536-2.536 4.875-0.536 0.536h-5.375v-5.411l5.411-10.411-0.429-0.536h-4.982v-7.411h9.054l0.786-0.536 2.536-4.875 0.536-0.536h5.375v5.411z"></path>
</symbol>
<symbol id="icon-medium" viewBox="0 0 32 32">
<path class="path1" d="M10.661 7.518v20.946q0 0.446-0.223 0.759t-0.652 0.313q-0.304 0-0.589-0.143l-8.304-4.161q-0.375-0.179-0.634-0.598t-0.259-0.83v-20.357q0-0.357 0.179-0.607t0.518-0.25q0.25 0 0.786 0.268l9.125 4.571q0.054 0.054 0.054 0.089zM11.804 9.321l9.536 15.464-9.536-4.75v-10.714zM32 9.643v18.821q0 0.446-0.25 0.723t-0.679 0.277-0.839-0.232l-7.875-3.929zM31.946 7.5q0 0.054-4.58 7.491t-5.366 8.705l-6.964-11.321 5.786-9.411q0.304-0.5 0.929-0.5 0.25 0 0.464 0.107l9.661 4.821q0.071 0.036 0.071 0.107z"></path>
</symbol>
<symbol id="icon-slideshare" viewBox="0 0 32 32">
<path class="path1" d="M15.589 13.214q0 1.482-1.134 2.545t-2.723 1.063-2.723-1.063-1.134-2.545q0-1.5 1.134-2.554t2.723-1.054 2.723 1.054 1.134 2.554zM24.554 13.214q0 1.482-1.125 2.545t-2.732 1.063q-1.589 0-2.723-1.063t-1.134-2.545q0-1.5 1.134-2.554t2.723-1.054q1.607 0 2.732 1.054t1.125 2.554zM28.571 16.429v-11.911q0-1.554-0.571-2.205t-1.982-0.652h-19.857q-1.482 0-2.009 0.607t-0.527 2.25v12.018q0.768 0.411 1.58 0.714t1.446 0.5 1.446 0.33 1.268 0.196 1.25 0.071 1.045 0.009 1.009-0.036 0.795-0.036q1.214-0.018 1.696 0.482 0.107 0.107 0.179 0.161 0.464 0.446 1.089 0.911 0.125-1.625 2.107-1.554 0.089 0 0.652 0.027t0.768 0.036 0.813 0.018 0.946-0.018 0.973-0.080 1.089-0.152 1.107-0.241 1.196-0.348 1.205-0.482 1.286-0.616zM31.482 16.339q-2.161 2.661-6.643 4.5 1.5 5.089-0.411 8.304-1.179 2.018-3.268 2.643-1.857 0.571-3.25-0.268-1.536-0.911-1.464-2.929l-0.018-5.821v-0.018q-0.143-0.036-0.438-0.107t-0.42-0.089l-0.018 6.036q0.071 2.036-1.482 2.929-1.411 0.839-3.268 0.268-2.089-0.643-3.25-2.679-1.875-3.214-0.393-8.268-4.482-1.839-6.643-4.5-0.446-0.661-0.071-1.125t1.071 0.018q0.054 0.036 0.196 0.125t0.196 0.143v-12.393q0-1.286 0.839-2.196t2.036-0.911h22.446q1.196 0 2.036 0.911t0.839 2.196v12.393l0.375-0.268q0.696-0.482 1.071-0.018t-0.071 1.125z"></path>
</symbol>
<symbol id="icon-snapchat-ghost" viewBox="0 0 30 32">
<path class="path1" d="M15.143 2.286q2.393-0.018 4.295 1.223t2.92 3.438q0.482 1.036 0.482 3.196 0 0.839-0.161 3.411 0.25 0.125 0.5 0.125 0.321 0 0.911-0.241t0.911-0.241q0.518 0 1 0.321t0.482 0.821q0 0.571-0.563 0.964t-1.232 0.563-1.232 0.518-0.563 0.848q0 0.268 0.214 0.768 0.661 1.464 1.83 2.679t2.58 1.804q0.5 0.214 1.429 0.411 0.5 0.107 0.5 0.625 0 1.25-3.911 1.839-0.125 0.196-0.196 0.696t-0.25 0.83-0.589 0.33q-0.357 0-1.107-0.116t-1.143-0.116q-0.661 0-1.107 0.089-0.571 0.089-1.125 0.402t-1.036 0.679-1.036 0.723-1.357 0.598-1.768 0.241q-0.929 0-1.723-0.241t-1.339-0.598-1.027-0.723-1.036-0.679-1.107-0.402q-0.464-0.089-1.125-0.089-0.429 0-1.17 0.134t-1.045 0.134q-0.446 0-0.625-0.33t-0.25-0.848-0.196-0.714q-3.911-0.589-3.911-1.839 0-0.518 0.5-0.625 0.929-0.196 1.429-0.411 1.393-0.571 2.58-1.804t1.83-2.679q0.214-0.5 0.214-0.768 0-0.5-0.563-0.848t-1.241-0.527-1.241-0.563-0.563-0.938q0-0.482 0.464-0.813t0.982-0.33q0.268 0 0.857 0.232t0.946 0.232q0.321 0 0.571-0.125-0.161-2.536-0.161-3.393 0-2.179 0.482-3.214 1.143-2.446 3.071-3.536t4.714-1.125z"></path>
</symbol>
<symbol id="icon-yelp" viewBox="0 0 27 32">
<path class="path1" d="M13.804 23.554v2.268q-0.018 5.214-0.107 5.446-0.214 0.571-0.911 0.714-0.964 0.161-3.241-0.679t-2.902-1.589q-0.232-0.268-0.304-0.643-0.018-0.214 0.071-0.464 0.071-0.179 0.607-0.839t3.232-3.857q0.018 0 1.071-1.25 0.268-0.339 0.705-0.438t0.884 0.063q0.429 0.179 0.67 0.518t0.223 0.75zM11.143 19.071q-0.054 0.982-0.929 1.25l-2.143 0.696q-4.911 1.571-5.214 1.571-0.625-0.036-0.964-0.643-0.214-0.446-0.304-1.339-0.143-1.357 0.018-2.973t0.536-2.223 1-0.571q0.232 0 3.607 1.375 1.25 0.518 2.054 0.839l1.5 0.607q0.411 0.161 0.634 0.545t0.205 0.866zM25.893 24.375q-0.125 0.964-1.634 2.875t-2.42 2.268q-0.661 0.25-1.125-0.125-0.25-0.179-3.286-5.125l-0.839-1.375q-0.25-0.375-0.205-0.821t0.348-0.821q0.625-0.768 1.482-0.464 0.018 0.018 2.125 0.714 3.625 1.179 4.321 1.42t0.839 0.366q0.5 0.393 0.393 1.089zM13.893 13.089q0.089 1.821-0.964 2.179-1.036 0.304-2.036-1.268l-6.75-10.679q-0.143-0.625 0.339-1.107 0.732-0.768 3.705-1.598t4.009-0.563q0.714 0.179 0.875 0.804 0.054 0.321 0.393 5.455t0.429 6.777zM25.714 15.018q0.054 0.696-0.464 1.054-0.268 0.179-5.875 1.536-1.196 0.268-1.625 0.411l0.018-0.036q-0.411 0.107-0.821-0.071t-0.661-0.571q-0.536-0.839 0-1.554 0.018-0.018 1.339-1.821 2.232-3.054 2.679-3.643t0.607-0.696q0.5-0.339 1.161-0.036 0.857 0.411 2.196 2.384t1.446 2.991v0.054z"></path>
</symbol>
<symbol id="icon-vine" viewBox="0 0 27 32">
<path class="path1" d="M26.732 14.768v3.536q-1.804 0.411-3.536 0.411-1.161 2.429-2.955 4.839t-3.241 3.848-2.286 1.902q-1.429 0.804-2.893-0.054-0.5-0.304-1.080-0.777t-1.518-1.491-1.83-2.295-1.92-3.286-1.884-4.357-1.634-5.616-1.259-6.964h5.054q0.464 3.893 1.25 7.116t1.866 5.661 2.17 4.205 2.5 3.482q3.018-3.018 5.125-7.25-2.536-1.286-3.982-3.929t-1.446-5.946q0-3.429 1.857-5.616t5.071-2.188q3.179 0 4.875 1.884t1.696 5.313q0 2.839-1.036 5.107-0.125 0.018-0.348 0.054t-0.821 0.036-1.125-0.107-1.107-0.455-0.902-0.92q0.554-1.839 0.554-3.286 0-1.554-0.518-2.357t-1.411-0.804q-0.946 0-1.518 0.884t-0.571 2.509q0 3.321 1.875 5.241t4.768 1.92q1.107 0 2.161-0.25z"></path>
</symbol>
<symbol id="icon-vk" viewBox="0 0 35 32">
<path class="path1" d="M34.232 9.286q0.411 1.143-2.679 5.25-0.429 0.571-1.161 1.518-1.393 1.786-1.607 2.339-0.304 0.732 0.25 1.446 0.304 0.375 1.446 1.464h0.018l0.071 0.071q2.518 2.339 3.411 3.946 0.054 0.089 0.116 0.223t0.125 0.473-0.009 0.607-0.446 0.491-1.054 0.223l-4.571 0.071q-0.429 0.089-1-0.089t-0.929-0.393l-0.357-0.214q-0.536-0.375-1.25-1.143t-1.223-1.384-1.089-1.036-1.009-0.277q-0.054 0.018-0.143 0.063t-0.304 0.259-0.384 0.527-0.304 0.929-0.116 1.384q0 0.268-0.063 0.491t-0.134 0.33l-0.071 0.089q-0.321 0.339-0.946 0.393h-2.054q-1.268 0.071-2.607-0.295t-2.348-0.946-1.839-1.179-1.259-1.027l-0.446-0.429q-0.179-0.179-0.491-0.536t-1.277-1.625-1.893-2.696-2.188-3.768-2.33-4.857q-0.107-0.286-0.107-0.482t0.054-0.286l0.071-0.107q0.268-0.339 1.018-0.339l4.893-0.036q0.214 0.036 0.411 0.116t0.286 0.152l0.089 0.054q0.286 0.196 0.429 0.571 0.357 0.893 0.821 1.848t0.732 1.455l0.286 0.518q0.518 1.071 1 1.857t0.866 1.223 0.741 0.688 0.607 0.25 0.482-0.089q0.036-0.018 0.089-0.089t0.214-0.393 0.241-0.839 0.17-1.446 0-2.232q-0.036-0.714-0.161-1.304t-0.25-0.821l-0.107-0.214q-0.446-0.607-1.518-0.768-0.232-0.036 0.089-0.429 0.304-0.339 0.679-0.536 0.946-0.464 4.268-0.429 1.464 0.018 2.411 0.232 0.357 0.089 0.598 0.241t0.366 0.429 0.188 0.571 0.063 0.813-0.018 0.982-0.045 1.259-0.027 1.473q0 0.196-0.018 0.75t-0.009 0.857 0.063 0.723 0.205 0.696 0.402 0.438q0.143 0.036 0.304 0.071t0.464-0.196 0.679-0.616 0.929-1.196 1.214-1.92q1.071-1.857 1.911-4.018 0.071-0.179 0.179-0.313t0.196-0.188l0.071-0.054 0.089-0.045t0.232-0.054 0.357-0.009l5.143-0.036q0.696-0.089 1.143 0.045t0.554 0.295z"></path>
</symbol>
<symbol id="icon-search" viewBox="0 0 30 32">
<path class="path1" d="M20.571 14.857q0-3.304-2.348-5.652t-5.652-2.348-5.652 2.348-2.348 5.652 2.348 5.652 5.652 2.348 5.652-2.348 2.348-5.652zM29.714 29.714q0 0.929-0.679 1.607t-1.607 0.679q-0.964 0-1.607-0.679l-6.125-6.107q-3.196 2.214-7.125 2.214-2.554 0-4.884-0.991t-4.018-2.679-2.679-4.018-0.991-4.884 0.991-4.884 2.679-4.018 4.018-2.679 4.884-0.991 4.884 0.991 4.018 2.679 2.679 4.018 0.991 4.884q0 3.929-2.214 7.125l6.125 6.125q0.661 0.661 0.661 1.607z"></path>
</symbol>
<symbol id="icon-envelope-o" viewBox="0 0 32 32">
<path class="path1" d="M29.714 26.857v-13.714q-0.571 0.643-1.232 1.179-4.786 3.679-7.607 6.036-0.911 0.768-1.482 1.196t-1.545 0.866-1.83 0.438h-0.036q-0.857 0-1.83-0.438t-1.545-0.866-1.482-1.196q-2.821-2.357-7.607-6.036-0.661-0.536-1.232-1.179v13.714q0 0.232 0.17 0.402t0.402 0.17h26.286q0.232 0 0.402-0.17t0.17-0.402zM29.714 8.089v-0.438t-0.009-0.232-0.054-0.223-0.098-0.161-0.161-0.134-0.25-0.045h-26.286q-0.232 0-0.402 0.17t-0.17 0.402q0 3 2.625 5.071 3.446 2.714 7.161 5.661 0.107 0.089 0.625 0.527t0.821 0.67 0.795 0.563 0.902 0.491 0.768 0.161h0.036q0.357 0 0.768-0.161t0.902-0.491 0.795-0.563 0.821-0.67 0.625-0.527q3.714-2.946 7.161-5.661 0.964-0.768 1.795-2.063t0.83-2.348zM32 7.429v19.429q0 1.179-0.839 2.018t-2.018 0.839h-26.286q-1.179 0-2.018-0.839t-0.839-2.018v-19.429q0-1.179 0.839-2.018t2.018-0.839h26.286q1.179 0 2.018 0.839t0.839 2.018z"></path>
</symbol>
<symbol id="icon-close" viewBox="0 0 25 32">
<path class="path1" d="M23.179 23.607q0 0.714-0.5 1.214l-2.429 2.429q-0.5 0.5-1.214 0.5t-1.214-0.5l-5.25-5.25-5.25 5.25q-0.5 0.5-1.214 0.5t-1.214-0.5l-2.429-2.429q-0.5-0.5-0.5-1.214t0.5-1.214l5.25-5.25-5.25-5.25q-0.5-0.5-0.5-1.214t0.5-1.214l2.429-2.429q0.5-0.5 1.214-0.5t1.214 0.5l5.25 5.25 5.25-5.25q0.5-0.5 1.214-0.5t1.214 0.5l2.429 2.429q0.5 0.5 0.5 1.214t-0.5 1.214l-5.25 5.25 5.25 5.25q0.5 0.5 0.5 1.214z"></path>
</symbol>
<symbol id="icon-angle-down" viewBox="0 0 21 32">
<path class="path1" d="M19.196 13.143q0 0.232-0.179 0.411l-8.321 8.321q-0.179 0.179-0.411 0.179t-0.411-0.179l-8.321-8.321q-0.179-0.179-0.179-0.411t0.179-0.411l0.893-0.893q0.179-0.179 0.411-0.179t0.411 0.179l7.018 7.018 7.018-7.018q0.179-0.179 0.411-0.179t0.411 0.179l0.893 0.893q0.179 0.179 0.179 0.411z"></path>
</symbol>
<symbol id="icon-folder-open" viewBox="0 0 34 32">
<path class="path1" d="M33.554 17q0 0.554-0.554 1.179l-6 7.071q-0.768 0.911-2.152 1.545t-2.563 0.634h-19.429q-0.607 0-1.080-0.232t-0.473-0.768q0-0.554 0.554-1.179l6-7.071q0.768-0.911 2.152-1.545t2.563-0.634h19.429q0.607 0 1.080 0.232t0.473 0.768zM27.429 10.857v2.857h-14.857q-1.679 0-3.518 0.848t-2.929 2.134l-6.107 7.179q0-0.071-0.009-0.223t-0.009-0.223v-17.143q0-1.643 1.179-2.821t2.821-1.179h5.714q1.643 0 2.821 1.179t1.179 2.821v0.571h9.714q1.643 0 2.821 1.179t1.179 2.821z"></path>
</symbol>
<symbol id="icon-twitter" viewBox="0 0 30 32">
<path class="path1" d="M28.929 7.286q-1.196 1.75-2.893 2.982 0.018 0.25 0.018 0.75 0 2.321-0.679 4.634t-2.063 4.437-3.295 3.759-4.607 2.607-5.768 0.973q-4.839 0-8.857-2.589 0.625 0.071 1.393 0.071 4.018 0 7.161-2.464-1.875-0.036-3.357-1.152t-2.036-2.848q0.589 0.089 1.089 0.089 0.768 0 1.518-0.196-2-0.411-3.313-1.991t-1.313-3.67v-0.071q1.214 0.679 2.607 0.732-1.179-0.786-1.875-2.054t-0.696-2.75q0-1.571 0.786-2.911 2.161 2.661 5.259 4.259t6.634 1.777q-0.143-0.679-0.143-1.321 0-2.393 1.688-4.080t4.080-1.688q2.5 0 4.214 1.821 1.946-0.375 3.661-1.393-0.661 2.054-2.536 3.179 1.661-0.179 3.321-0.893z"></path>
</symbol>
<symbol id="icon-facebook" viewBox="0 0 19 32">
<path class="path1" d="M17.125 0.214v4.714h-2.804q-1.536 0-2.071 0.643t-0.536 1.929v3.375h5.232l-0.696 5.286h-4.536v13.554h-5.464v-13.554h-4.554v-5.286h4.554v-3.893q0-3.321 1.857-5.152t4.946-1.83q2.625 0 4.071 0.214z"></path>
</symbol>
<symbol id="icon-github" viewBox="0 0 27 32">
<path class="path1" d="M13.714 2.286q3.732 0 6.884 1.839t4.991 4.991 1.839 6.884q0 4.482-2.616 8.063t-6.759 4.955q-0.482 0.089-0.714-0.125t-0.232-0.536q0-0.054 0.009-1.366t0.009-2.402q0-1.732-0.929-2.536 1.018-0.107 1.83-0.321t1.679-0.696 1.446-1.188 0.946-1.875 0.366-2.688q0-2.125-1.411-3.679 0.661-1.625-0.143-3.643-0.5-0.161-1.446 0.196t-1.643 0.786l-0.679 0.429q-1.661-0.464-3.429-0.464t-3.429 0.464q-0.286-0.196-0.759-0.482t-1.491-0.688-1.518-0.241q-0.804 2.018-0.143 3.643-1.411 1.554-1.411 3.679 0 1.518 0.366 2.679t0.938 1.875 1.438 1.196 1.679 0.696 1.83 0.321q-0.696 0.643-0.875 1.839-0.375 0.179-0.804 0.268t-1.018 0.089-1.17-0.384-0.991-1.116q-0.339-0.571-0.866-0.929t-0.884-0.429l-0.357-0.054q-0.375 0-0.518 0.080t-0.089 0.205 0.161 0.25 0.232 0.214l0.125 0.089q0.393 0.179 0.777 0.679t0.563 0.911l0.179 0.411q0.232 0.679 0.786 1.098t1.196 0.536 1.241 0.125 0.991-0.063l0.411-0.071q0 0.679 0.009 1.58t0.009 0.973q0 0.321-0.232 0.536t-0.714 0.125q-4.143-1.375-6.759-4.955t-2.616-8.063q0-3.732 1.839-6.884t4.991-4.991 6.884-1.839zM5.196 21.982q0.054-0.125-0.125-0.214-0.179-0.054-0.232 0.036-0.054 0.125 0.125 0.214 0.161 0.107 0.232-0.036zM5.75 22.589q0.125-0.089-0.036-0.286-0.179-0.161-0.286-0.054-0.125 0.089 0.036 0.286 0.179 0.179 0.286 0.054zM6.286 23.393q0.161-0.125 0-0.339-0.143-0.232-0.304-0.107-0.161 0.089 0 0.321t0.304 0.125zM7.036 24.143q0.143-0.143-0.071-0.339-0.214-0.214-0.357-0.054-0.161 0.143 0.071 0.339 0.214 0.214 0.357 0.054zM8.054 24.589q0.054-0.196-0.232-0.286-0.268-0.071-0.339 0.125t0.232 0.268q0.268 0.107 0.339-0.107zM9.179 24.679q0-0.232-0.304-0.196-0.286 0-0.286 0.196 0 0.232 0.304 0.196 0.286 0 0.286-0.196zM10.214 24.5q-0.036-0.196-0.321-0.161-0.286 0.054-0.25 0.268t0.321 0.143 0.25-0.25z"></path>
</symbol>
<symbol id="icon-bars" viewBox="0 0 27 32">
<path class="path1" d="M27.429 24v2.286q0 0.464-0.339 0.804t-0.804 0.339h-25.143q-0.464 0-0.804-0.339t-0.339-0.804v-2.286q0-0.464 0.339-0.804t0.804-0.339h25.143q0.464 0 0.804 0.339t0.339 0.804zM27.429 14.857v2.286q0 0.464-0.339 0.804t-0.804 0.339h-25.143q-0.464 0-0.804-0.339t-0.339-0.804v-2.286q0-0.464 0.339-0.804t0.804-0.339h25.143q0.464 0 0.804 0.339t0.339 0.804zM27.429 5.714v2.286q0 0.464-0.339 0.804t-0.804 0.339h-25.143q-0.464 0-0.804-0.339t-0.339-0.804v-2.286q0-0.464 0.339-0.804t0.804-0.339h25.143q0.464 0 0.804 0.339t0.339 0.804z"></path>
</symbol>
<symbol id="icon-google-plus" viewBox="0 0 41 32">
<path class="path1" d="M25.661 16.304q0 3.714-1.554 6.616t-4.429 4.536-6.589 1.634q-2.661 0-5.089-1.036t-4.179-2.786-2.786-4.179-1.036-5.089 1.036-5.089 2.786-4.179 4.179-2.786 5.089-1.036q5.107 0 8.768 3.429l-3.554 3.411q-2.089-2.018-5.214-2.018-2.196 0-4.063 1.107t-2.955 3.009-1.089 4.152 1.089 4.152 2.955 3.009 4.063 1.107q1.482 0 2.723-0.411t2.045-1.027 1.402-1.402 0.875-1.482 0.384-1.321h-7.429v-4.5h12.357q0.214 1.125 0.214 2.179zM41.143 14.125v3.75h-3.732v3.732h-3.75v-3.732h-3.732v-3.75h3.732v-3.732h3.75v3.732h3.732z"></path>
</symbol>
<symbol id="icon-linkedin" viewBox="0 0 27 32">
<path class="path1" d="M6.232 11.161v17.696h-5.893v-17.696h5.893zM6.607 5.696q0.018 1.304-0.902 2.179t-2.42 0.875h-0.036q-1.464 0-2.357-0.875t-0.893-2.179q0-1.321 0.92-2.188t2.402-0.866 2.375 0.866 0.911 2.188zM27.429 18.714v10.143h-5.875v-9.464q0-1.875-0.723-2.938t-2.259-1.063q-1.125 0-1.884 0.616t-1.134 1.527q-0.196 0.536-0.196 1.446v9.875h-5.875q0.036-7.125 0.036-11.554t-0.018-5.286l-0.018-0.857h5.875v2.571h-0.036q0.357-0.571 0.732-1t1.009-0.929 1.554-0.777 2.045-0.277q3.054 0 4.911 2.027t1.857 5.938z"></path>
</symbol>
<symbol id="icon-quote-right" viewBox="0 0 30 32">
<path class="path1" d="M13.714 5.714v12.571q0 1.857-0.723 3.545t-1.955 2.92-2.92 1.955-3.545 0.723h-1.143q-0.464 0-0.804-0.339t-0.339-0.804v-2.286q0-0.464 0.339-0.804t0.804-0.339h1.143q1.893 0 3.232-1.339t1.339-3.232v-0.571q0-0.714-0.5-1.214t-1.214-0.5h-4q-1.429 0-2.429-1t-1-2.429v-6.857q0-1.429 1-2.429t2.429-1h6.857q1.429 0 2.429 1t1 2.429zM29.714 5.714v12.571q0 1.857-0.723 3.545t-1.955 2.92-2.92 1.955-3.545 0.723h-1.143q-0.464 0-0.804-0.339t-0.339-0.804v-2.286q0-0.464 0.339-0.804t0.804-0.339h1.143q1.893 0 3.232-1.339t1.339-3.232v-0.571q0-0.714-0.5-1.214t-1.214-0.5h-4q-1.429 0-2.429-1t-1-2.429v-6.857q0-1.429 1-2.429t2.429-1h6.857q1.429 0 2.429 1t1 2.429z"></path>
</symbol>
<symbol id="icon-mail-reply" viewBox="0 0 32 32">
<path class="path1" d="M32 20q0 2.964-2.268 8.054-0.054 0.125-0.188 0.429t-0.241 0.536-0.232 0.393q-0.214 0.304-0.5 0.304-0.268 0-0.42-0.179t-0.152-0.446q0-0.161 0.045-0.473t0.045-0.42q0.089-1.214 0.089-2.196 0-1.804-0.313-3.232t-0.866-2.473-1.429-1.804-1.884-1.241-2.375-0.759-2.75-0.384-3.134-0.107h-4v4.571q0 0.464-0.339 0.804t-0.804 0.339-0.804-0.339l-9.143-9.143q-0.339-0.339-0.339-0.804t0.339-0.804l9.143-9.143q0.339-0.339 0.804-0.339t0.804 0.339 0.339 0.804v4.571h4q12.732 0 15.625 7.196 0.946 2.393 0.946 5.946z"></path>
</symbol>
<symbol id="icon-youtube" viewBox="0 0 27 32">
<path class="path1" d="M17.339 22.214v3.768q0 1.196-0.696 1.196-0.411 0-0.804-0.393v-5.375q0.393-0.393 0.804-0.393 0.696 0 0.696 1.196zM23.375 22.232v0.821h-1.607v-0.821q0-1.214 0.804-1.214t0.804 1.214zM6.125 18.339h1.911v-1.679h-5.571v1.679h1.875v10.161h1.786v-10.161zM11.268 28.5h1.589v-8.821h-1.589v6.75q-0.536 0.75-1.018 0.75-0.321 0-0.375-0.375-0.018-0.054-0.018-0.625v-6.5h-1.589v6.982q0 0.875 0.143 1.304 0.214 0.661 1.036 0.661 0.857 0 1.821-1.089v0.964zM18.929 25.857v-3.518q0-1.304-0.161-1.768-0.304-1-1.268-1-0.893 0-1.661 0.964v-3.875h-1.589v11.839h1.589v-0.857q0.804 0.982 1.661 0.982 0.964 0 1.268-0.982 0.161-0.482 0.161-1.786zM24.964 25.679v-0.232h-1.625q0 0.911-0.036 1.089-0.125 0.643-0.714 0.643-0.821 0-0.821-1.232v-1.554h3.196v-1.839q0-1.411-0.482-2.071-0.696-0.911-1.893-0.911-1.214 0-1.911 0.911-0.5 0.661-0.5 2.071v3.089q0 1.411 0.518 2.071 0.696 0.911 1.929 0.911 1.286 0 1.929-0.946 0.321-0.482 0.375-0.964 0.036-0.161 0.036-1.036zM14.107 9.375v-3.75q0-1.232-0.768-1.232t-0.768 1.232v3.75q0 1.25 0.768 1.25t0.768-1.25zM26.946 22.786q0 4.179-0.464 6.25-0.25 1.054-1.036 1.768t-1.821 0.821q-3.286 0.375-9.911 0.375t-9.911-0.375q-1.036-0.107-1.83-0.821t-1.027-1.768q-0.464-2-0.464-6.25 0-4.179 0.464-6.25 0.25-1.054 1.036-1.768t1.839-0.839q3.268-0.357 9.893-0.357t9.911 0.357q1.036 0.125 1.83 0.839t1.027 1.768q0.464 2 0.464 6.25zM9.125 0h1.821l-2.161 7.125v4.839h-1.786v-4.839q-0.25-1.321-1.089-3.786-0.661-1.839-1.161-3.339h1.893l1.268 4.696zM15.732 5.946v3.125q0 1.446-0.5 2.107-0.661 0.911-1.893 0.911-1.196 0-1.875-0.911-0.5-0.679-0.5-2.107v-3.125q0-1.429 0.5-2.089 0.679-0.911 1.875-0.911 1.232 0 1.893 0.911 0.5 0.661 0.5 2.089zM21.714 3.054v8.911h-1.625v-0.982q-0.946 1.107-1.839 1.107-0.821 0-1.054-0.661-0.143-0.429-0.143-1.339v-7.036h1.625v6.554q0 0.589 0.018 0.625 0.054 0.393 0.375 0.393 0.482 0 1.018-0.768v-6.804h1.625z"></path>
</symbol>
<symbol id="icon-dropbox" viewBox="0 0 32 32">
<path class="path1" d="M7.179 12.625l8.821 5.446-6.107 5.089-8.75-5.696zM24.786 22.536v1.929l-8.75 5.232v0.018l-0.018-0.018-0.018 0.018v-0.018l-8.732-5.232v-1.929l2.625 1.714 6.107-5.071v-0.036l0.018 0.018 0.018-0.018v0.036l6.125 5.071zM9.893 2.107l6.107 5.089-8.821 5.429-6.036-4.821zM24.821 12.625l6.036 4.839-8.732 5.696-6.125-5.089zM22.125 2.107l8.732 5.696-6.036 4.821-8.821-5.429z"></path>
</symbol>
<symbol id="icon-instagram" viewBox="0 0 27 32">
<path class="path1" d="M18.286 16q0-1.893-1.339-3.232t-3.232-1.339-3.232 1.339-1.339 3.232 1.339 3.232 3.232 1.339 3.232-1.339 1.339-3.232zM20.75 16q0 2.929-2.054 4.982t-4.982 2.054-4.982-2.054-2.054-4.982 2.054-4.982 4.982-2.054 4.982 2.054 2.054 4.982zM22.679 8.679q0 0.679-0.482 1.161t-1.161 0.482-1.161-0.482-0.482-1.161 0.482-1.161 1.161-0.482 1.161 0.482 0.482 1.161zM13.714 4.75q-0.125 0-1.366-0.009t-1.884 0-1.723 0.054-1.839 0.179-1.277 0.33q-0.893 0.357-1.571 1.036t-1.036 1.571q-0.196 0.518-0.33 1.277t-0.179 1.839-0.054 1.723 0 1.884 0.009 1.366-0.009 1.366 0 1.884 0.054 1.723 0.179 1.839 0.33 1.277q0.357 0.893 1.036 1.571t1.571 1.036q0.518 0.196 1.277 0.33t1.839 0.179 1.723 0.054 1.884 0 1.366-0.009 1.366 0.009 1.884 0 1.723-0.054 1.839-0.179 1.277-0.33q0.893-0.357 1.571-1.036t1.036-1.571q0.196-0.518 0.33-1.277t0.179-1.839 0.054-1.723 0-1.884-0.009-1.366 0.009-1.366 0-1.884-0.054-1.723-0.179-1.839-0.33-1.277q-0.357-0.893-1.036-1.571t-1.571-1.036q-0.518-0.196-1.277-0.33t-1.839-0.179-1.723-0.054-1.884 0-1.366 0.009zM27.429 16q0 4.089-0.089 5.661-0.179 3.714-2.214 5.75t-5.75 2.214q-1.571 0.089-5.661 0.089t-5.661-0.089q-3.714-0.179-5.75-2.214t-2.214-5.75q-0.089-1.571-0.089-5.661t0.089-5.661q0.179-3.714 2.214-5.75t5.75-2.214q1.571-0.089 5.661-0.089t5.661 0.089q3.714 0.179 5.75 2.214t2.214 5.75q0.089 1.571 0.089 5.661z"></path>
</symbol>
<symbol id="icon-flickr" viewBox="0 0 27 32">
<path class="path1" d="M22.286 2.286q2.125 0 3.634 1.509t1.509 3.634v17.143q0 2.125-1.509 3.634t-3.634 1.509h-17.143q-2.125 0-3.634-1.509t-1.509-3.634v-17.143q0-2.125 1.509-3.634t3.634-1.509h17.143zM12.464 16q0-1.571-1.107-2.679t-2.679-1.107-2.679 1.107-1.107 2.679 1.107 2.679 2.679 1.107 2.679-1.107 1.107-2.679zM22.536 16q0-1.571-1.107-2.679t-2.679-1.107-2.679 1.107-1.107 2.679 1.107 2.679 2.679 1.107 2.679-1.107 1.107-2.679z"></path>
</symbol>
<symbol id="icon-tumblr" viewBox="0 0 19 32">
<path class="path1" d="M16.857 23.732l1.429 4.232q-0.411 0.625-1.982 1.179t-3.161 0.571q-1.857 0.036-3.402-0.464t-2.545-1.321-1.696-1.893-0.991-2.143-0.295-2.107v-9.714h-3v-3.839q1.286-0.464 2.304-1.241t1.625-1.607 1.036-1.821 0.607-1.768 0.268-1.58q0.018-0.089 0.080-0.152t0.134-0.063h4.357v7.571h5.946v4.5h-5.964v9.25q0 0.536 0.116 1t0.402 0.938 0.884 0.741 1.455 0.25q1.393-0.036 2.393-0.518z"></path>
</symbol>
<symbol id="icon-dockerhub" viewBox="0 0 24 28">
<path class="path1" d="M1.597 10.257h2.911v2.83H1.597v-2.83zm3.573 0h2.91v2.83H5.17v-2.83zm0-3.627h2.91v2.829H5.17V6.63zm3.57 3.627h2.912v2.83H8.74v-2.83zm0-3.627h2.912v2.829H8.74V6.63zm3.573 3.627h2.911v2.83h-2.911v-2.83zm0-3.627h2.911v2.829h-2.911V6.63zm3.572 3.627h2.911v2.83h-2.911v-2.83zM12.313 3h2.911v2.83h-2.911V3zm-6.65 14.173c-.449 0-.812.354-.812.788 0 .435.364.788.812.788.447 0 .811-.353.811-.788 0-.434-.363-.788-.811-.788"></path>
<path class="path2" d="M28.172 11.721c-.978-.549-2.278-.624-3.388-.306-.136-1.146-.91-2.149-1.83-2.869l-.366-.286-.307.345c-.618.692-.8 1.845-.718 2.73.063.651.273 1.312.685 1.834-.313.183-.668.328-.985.434-.646.212-1.347.33-2.028.33H.083l-.042.429c-.137 1.432.065 2.866.674 4.173l.262.519.03.048c1.8 2.973 4.963 4.225 8.41 4.225 6.672 0 12.174-2.896 14.702-9.015 1.689.085 3.417-.4 4.243-1.968l.211-.4-.401-.223zM5.664 19.458c-.85 0-1.542-.671-1.542-1.497 0-.825.691-1.498 1.541-1.498.849 0 1.54.672 1.54 1.497s-.69 1.498-1.539 1.498z"></path>
</symbol>
<symbol id="icon-dribbble" viewBox="0 0 27 32">
<path class="path1" d="M18.286 26.786q-0.75-4.304-2.5-8.893h-0.036l-0.036 0.018q-0.286 0.107-0.768 0.295t-1.804 0.875-2.446 1.464-2.339 2.045-1.839 2.643l-0.268-0.196q3.286 2.679 7.464 2.679 2.357 0 4.571-0.929zM14.982 15.946q-0.375-0.875-0.946-1.982-5.554 1.661-12.018 1.661-0.018 0.125-0.018 0.375 0 2.214 0.786 4.223t2.214 3.598q0.893-1.589 2.205-2.973t2.545-2.223 2.33-1.446 1.777-0.857l0.661-0.232q0.071-0.018 0.232-0.063t0.232-0.080zM13.071 12.161q-2.143-3.804-4.357-6.75-2.464 1.161-4.179 3.321t-2.286 4.857q5.393 0 10.821-1.429zM25.286 17.857q-3.75-1.071-7.304-0.518 1.554 4.268 2.286 8.375 1.982-1.339 3.304-3.384t1.714-4.473zM10.911 4.625q-0.018 0-0.036 0.018 0.018-0.018 0.036-0.018zM21.446 7.214q-3.304-2.929-7.732-2.929-1.357 0-2.768 0.339 2.339 3.036 4.393 6.821 1.232-0.464 2.321-1.080t1.723-1.098 1.17-1.018 0.67-0.723zM25.429 15.875q-0.054-4.143-2.661-7.321l-0.018 0.018q-0.161 0.214-0.339 0.438t-0.777 0.795-1.268 1.080-1.786 1.161-2.348 1.152q0.446 0.946 0.786 1.696 0.036 0.107 0.116 0.313t0.134 0.295q0.643-0.089 1.33-0.125t1.313-0.036 1.232 0.027 1.143 0.071 1.009 0.098 0.857 0.116 0.652 0.107 0.446 0.080zM27.429 16q0 3.732-1.839 6.884t-4.991 4.991-6.884 1.839-6.884-1.839-4.991-4.991-1.839-6.884 1.839-6.884 4.991-4.991 6.884-1.839 6.884 1.839 4.991 4.991 1.839 6.884z"></path>
</symbol>
<symbol id="icon-skype" viewBox="0 0 27 32">
<path class="path1" d="M20.946 18.982q0-0.893-0.348-1.634t-0.866-1.223-1.304-0.875-1.473-0.607-1.563-0.411l-1.857-0.429q-0.536-0.125-0.786-0.188t-0.625-0.205-0.536-0.286-0.295-0.375-0.134-0.536q0-1.375 2.571-1.375 0.768 0 1.375 0.214t0.964 0.509 0.679 0.598 0.714 0.518 0.857 0.214q0.839 0 1.348-0.571t0.509-1.375q0-0.982-1-1.777t-2.536-1.205-3.25-0.411q-1.214 0-2.357 0.277t-2.134 0.839-1.589 1.554-0.598 2.295q0 1.089 0.339 1.902t1 1.348 1.429 0.866 1.839 0.58l2.607 0.643q1.607 0.393 2 0.643 0.571 0.357 0.571 1.071 0 0.696-0.714 1.152t-1.875 0.455q-0.911 0-1.634-0.286t-1.161-0.688-0.813-0.804-0.821-0.688-0.964-0.286q-0.893 0-1.348 0.536t-0.455 1.339q0 1.643 2.179 2.813t5.196 1.17q1.304 0 2.5-0.33t2.188-0.955 1.58-1.67 0.589-2.348zM27.429 22.857q0 2.839-2.009 4.848t-4.848 2.009q-2.321 0-4.179-1.429-1.375 0.286-2.679 0.286-2.554 0-4.884-0.991t-4.018-2.679-2.679-4.018-0.991-4.884q0-1.304 0.286-2.679-1.429-1.857-1.429-4.179 0-2.839 2.009-4.848t4.848-2.009q2.321 0 4.179 1.429 1.375-0.286 2.679-0.286 2.554 0 4.884 0.991t4.018 2.679 2.679 4.018 0.991 4.884q0 1.304-0.286 2.679 1.429 1.857 1.429 4.179z"></path>
</symbol>
<symbol id="icon-foursquare" viewBox="0 0 23 32">
<path class="path1" d="M17.857 7.75l0.661-3.464q0.089-0.411-0.161-0.714t-0.625-0.304h-12.714q-0.411 0-0.688 0.304t-0.277 0.661v19.661q0 0.125 0.107 0.018l5.196-6.286q0.411-0.464 0.679-0.598t0.857-0.134h4.268q0.393 0 0.661-0.259t0.321-0.527q0.429-2.321 0.661-3.411 0.071-0.375-0.205-0.714t-0.652-0.339h-5.25q-0.518 0-0.857-0.339t-0.339-0.857v-0.75q0-0.518 0.339-0.848t0.857-0.33h6.179q0.321 0 0.625-0.241t0.357-0.527zM21.911 3.786q-0.268 1.304-0.955 4.759t-1.241 6.25-0.625 3.098q-0.107 0.393-0.161 0.58t-0.25 0.58-0.438 0.589-0.688 0.375-1.036 0.179h-4.839q-0.232 0-0.393 0.179-0.143 0.161-7.607 8.821-0.393 0.446-1.045 0.509t-0.866-0.098q-0.982-0.393-0.982-1.75v-25.179q0-0.982 0.679-1.83t2.143-0.848h15.857q1.696 0 2.268 0.946t0.179 2.839zM21.911 3.786l-2.821 14.107q0.071-0.304 0.625-3.098t1.241-6.25 0.955-4.759z"></path>
</symbol>
<symbol id="icon-wordpress" viewBox="0 0 32 32">
<path class="path1" d="M2.268 16q0-2.911 1.196-5.589l6.554 17.946q-3.5-1.696-5.625-5.018t-2.125-7.339zM25.268 15.304q0 0.339-0.045 0.688t-0.179 0.884-0.205 0.786-0.313 1.054-0.313 1.036l-1.357 4.571-4.964-14.75q0.821-0.054 1.571-0.143 0.339-0.036 0.464-0.33t-0.045-0.554-0.509-0.241l-3.661 0.179q-1.339-0.018-3.607-0.179-0.214-0.018-0.366 0.089t-0.205 0.268-0.027 0.33 0.161 0.295 0.348 0.143l1.429 0.143 2.143 5.857-3 9-5-14.857q0.821-0.054 1.571-0.143 0.339-0.036 0.464-0.33t-0.045-0.554-0.509-0.241l-3.661 0.179q-0.125 0-0.411-0.009t-0.464-0.009q1.875-2.857 4.902-4.527t6.563-1.67q2.625 0 5.009 0.946t4.259 2.661h-0.179q-0.982 0-1.643 0.723t-0.661 1.705q0 0.214 0.036 0.429t0.071 0.384 0.143 0.411 0.161 0.375 0.214 0.402 0.223 0.375 0.259 0.429 0.25 0.411q1.125 1.911 1.125 3.786zM16.232 17.196l4.232 11.554q0.018 0.107 0.089 0.196-2.25 0.786-4.554 0.786-2 0-3.875-0.571zM28.036 9.411q1.696 3.107 1.696 6.589 0 3.732-1.857 6.884t-4.982 4.973l4.196-12.107q1.054-3.018 1.054-4.929 0-0.75-0.107-1.411zM16 0q3.25 0 6.214 1.268t5.107 3.411 3.411 5.107 1.268 6.214-1.268 6.214-3.411 5.107-5.107 3.411-6.214 1.268-6.214-1.268-5.107-3.411-3.411-5.107-1.268-6.214 1.268-6.214 3.411-5.107 5.107-3.411 6.214-1.268zM16 31.268q3.089 0 5.92-1.214t4.875-3.259 3.259-4.875 1.214-5.92-1.214-5.92-3.259-4.875-4.875-3.259-5.92-1.214-5.92 1.214-4.875 3.259-3.259 4.875-1.214 5.92 1.214 5.92 3.259 4.875 4.875 3.259 5.92 1.214z"></path>
</symbol>
<symbol id="icon-stumbleupon" viewBox="0 0 34 32">
<path class="path1" d="M18.964 12.714v-2.107q0-0.75-0.536-1.286t-1.286-0.536-1.286 0.536-0.536 1.286v10.929q0 3.125-2.25 5.339t-5.411 2.214q-3.179 0-5.42-2.241t-2.241-5.42v-4.75h5.857v4.679q0 0.768 0.536 1.295t1.286 0.527 1.286-0.527 0.536-1.295v-11.071q0-3.054 2.259-5.214t5.384-2.161q3.143 0 5.393 2.179t2.25 5.25v2.429l-3.482 1.036zM28.429 16.679h5.857v4.75q0 3.179-2.241 5.42t-5.42 2.241q-3.161 0-5.411-2.223t-2.25-5.366v-4.786l2.339 1.089 3.482-1.036v4.821q0 0.75 0.536 1.277t1.286 0.527 1.286-0.527 0.536-1.277v-4.911z"></path>
</symbol>
<symbol id="icon-digg" viewBox="0 0 37 32">
<path class="path1" d="M5.857 5.036h3.643v17.554h-9.5v-12.446h5.857v-5.107zM5.857 19.661v-6.589h-2.196v6.589h2.196zM10.964 10.143v12.446h3.661v-12.446h-3.661zM10.964 5.036v3.643h3.661v-3.643h-3.661zM16.089 10.143h9.518v16.821h-9.518v-2.911h5.857v-1.464h-5.857v-12.446zM21.946 19.661v-6.589h-2.196v6.589h2.196zM27.071 10.143h9.5v16.821h-9.5v-2.911h5.839v-1.464h-5.839v-12.446zM32.911 19.661v-6.589h-2.196v6.589h2.196z"></path>
</symbol>
<symbol id="icon-spotify" viewBox="0 0 27 32">
<path class="path1" d="M20.125 21.607q0-0.571-0.536-0.911-3.446-2.054-7.982-2.054-2.375 0-5.125 0.607-0.75 0.161-0.75 0.929 0 0.357 0.241 0.616t0.634 0.259q0.089 0 0.661-0.143 2.357-0.482 4.339-0.482 4.036 0 7.089 1.839 0.339 0.196 0.589 0.196 0.339 0 0.589-0.241t0.25-0.616zM21.839 17.768q0-0.714-0.625-1.089-4.232-2.518-9.786-2.518-2.732 0-5.411 0.75-0.857 0.232-0.857 1.143 0 0.446 0.313 0.759t0.759 0.313q0.125 0 0.661-0.143 2.179-0.589 4.482-0.589 4.982 0 8.714 2.214 0.429 0.232 0.679 0.232 0.446 0 0.759-0.313t0.313-0.759zM23.768 13.339q0-0.839-0.714-1.25-2.25-1.304-5.232-1.973t-6.125-0.67q-3.643 0-6.5 0.839-0.411 0.125-0.688 0.455t-0.277 0.866q0 0.554 0.366 0.929t0.92 0.375q0.196 0 0.714-0.143 2.375-0.661 5.482-0.661 2.839 0 5.527 0.607t4.527 1.696q0.375 0.214 0.714 0.214 0.518 0 0.902-0.366t0.384-0.92zM27.429 16q0 3.732-1.839 6.884t-4.991 4.991-6.884 1.839-6.884-1.839-4.991-4.991-1.839-6.884 1.839-6.884 4.991-4.991 6.884-1.839 6.884 1.839 4.991 4.991 1.839 6.884z"></path>
</symbol>
<symbol id="icon-soundcloud" viewBox="0 0 41 32">
<path class="path1" d="M14 24.5l0.286-4.304-0.286-9.339q-0.018-0.179-0.134-0.304t-0.295-0.125q-0.161 0-0.286 0.125t-0.125 0.304l-0.25 9.339 0.25 4.304q0.018 0.179 0.134 0.295t0.277 0.116q0.393 0 0.429-0.411zM19.286 23.982l0.196-3.768-0.214-10.464q0-0.286-0.232-0.429-0.143-0.089-0.286-0.089t-0.286 0.089q-0.232 0.143-0.232 0.429l-0.018 0.107-0.179 10.339q0 0.018 0.196 4.214v0.018q0 0.179 0.107 0.304 0.161 0.196 0.411 0.196 0.196 0 0.357-0.161 0.161-0.125 0.161-0.357zM0.625 17.911l0.357 2.286-0.357 2.25q-0.036 0.161-0.161 0.161t-0.161-0.161l-0.304-2.25 0.304-2.286q0.036-0.161 0.161-0.161t0.161 0.161zM2.161 16.5l0.464 3.696-0.464 3.625q-0.036 0.161-0.179 0.161-0.161 0-0.161-0.179l-0.411-3.607 0.411-3.696q0-0.161 0.161-0.161 0.143 0 0.179 0.161zM3.804 15.821l0.446 4.375-0.446 4.232q0 0.196-0.196 0.196-0.179 0-0.214-0.196l-0.375-4.232 0.375-4.375q0.036-0.214 0.214-0.214 0.196 0 0.196 0.214zM5.482 15.696l0.411 4.5-0.411 4.357q-0.036 0.232-0.25 0.232-0.232 0-0.232-0.232l-0.375-4.357 0.375-4.5q0-0.232 0.232-0.232 0.214 0 0.25 0.232zM7.161 16.018l0.375 4.179-0.375 4.393q-0.036 0.286-0.286 0.286-0.107 0-0.188-0.080t-0.080-0.205l-0.357-4.393 0.357-4.179q0-0.107 0.080-0.188t0.188-0.080q0.25 0 0.286 0.268zM8.839 13.411l0.375 6.786-0.375 4.393q0 0.125-0.089 0.223t-0.214 0.098q-0.286 0-0.321-0.321l-0.321-4.393 0.321-6.786q0.036-0.321 0.321-0.321 0.125 0 0.214 0.098t0.089 0.223zM10.518 11.875l0.339 8.357-0.339 4.357q0 0.143-0.098 0.241t-0.241 0.098q-0.321 0-0.357-0.339l-0.286-4.357 0.286-8.357q0.036-0.339 0.357-0.339 0.143 0 0.241 0.098t0.098 0.241zM12.268 11.161l0.321 9.036-0.321 4.321q-0.036 0.375-0.393 0.375-0.339 0-0.375-0.375l-0.286-4.321 0.286-9.036q0-0.161 0.116-0.277t0.259-0.116q0.161 0 0.268 0.116t0.125 0.277zM19.268 24.411v0 0zM15.732 11.089l0.268 9.107-0.268 4.268q0 0.179-0.134 0.313t-0.313 0.134-0.304-0.125-0.143-0.321l-0.25-4.268 0.25-9.107q0-0.196 0.134-0.321t0.313-0.125 0.313 0.125 0.134 0.321zM17.5 11.429l0.25 8.786-0.25 4.214q0 0.196-0.143 0.339t-0.339 0.143-0.339-0.143-0.161-0.339l-0.214-4.214 0.214-8.786q0.018-0.214 0.161-0.357t0.339-0.143 0.33 0.143 0.152 0.357zM21.286 20.214l-0.25 4.125q0 0.232-0.161 0.393t-0.393 0.161-0.393-0.161-0.179-0.393l-0.107-2.036-0.107-2.089 0.214-11.357v-0.054q0.036-0.268 0.214-0.429 0.161-0.125 0.357-0.125 0.143 0 0.268 0.089 0.25 0.143 0.286 0.464zM41.143 19.875q0 2.089-1.482 3.563t-3.571 1.473h-14.036q-0.232-0.036-0.393-0.196t-0.161-0.393v-16.054q0-0.411 0.5-0.589 1.518-0.607 3.232-0.607 3.482 0 6.036 2.348t2.857 5.777q0.946-0.393 1.964-0.393 2.089 0 3.571 1.482t1.482 3.589z"></path>
</symbol>
<symbol id="icon-codepen" viewBox="0 0 32 32">
<path class="path1" d="M3.857 20.875l10.768 7.179v-6.411l-5.964-3.982zM2.75 18.304l3.446-2.304-3.446-2.304v4.607zM17.375 28.054l10.768-7.179-4.804-3.214-5.964 3.982v6.411zM16 19.25l4.857-3.25-4.857-3.25-4.857 3.25zM8.661 14.339l5.964-3.982v-6.411l-10.768 7.179zM25.804 16l3.446 2.304v-4.607zM23.339 14.339l4.804-3.214-10.768-7.179v6.411zM32 11.125v9.75q0 0.732-0.607 1.143l-14.625 9.75q-0.375 0.232-0.768 0.232t-0.768-0.232l-14.625-9.75q-0.607-0.411-0.607-1.143v-9.75q0-0.732 0.607-1.143l14.625-9.75q0.375-0.232 0.768-0.232t0.768 0.232l14.625 9.75q0.607 0.411 0.607 1.143z"></path>
</symbol>
<symbol id="icon-twitch" viewBox="0 0 32 32">
<path class="path1" d="M16 7.75v7.75h-2.589v-7.75h2.589zM23.107 7.75v7.75h-2.589v-7.75h2.589zM23.107 21.321l4.518-4.536v-14.196h-21.321v18.732h5.821v3.875l3.875-3.875h7.107zM30.214 0v18.089l-7.75 7.75h-5.821l-3.875 3.875h-3.875v-3.875h-7.107v-20.679l1.946-5.161h26.482z"></path>
</symbol>
<symbol id="icon-meanpath" viewBox="0 0 27 32">
<path class="path1" d="M23.411 15.036v2.036q0 0.429-0.241 0.679t-0.67 0.25h-3.607q-0.429 0-0.679-0.25t-0.25-0.679v-2.036q0-0.429 0.25-0.679t0.679-0.25h3.607q0.429 0 0.67 0.25t0.241 0.679zM14.661 19.143v-4.464q0-0.946-0.58-1.527t-1.527-0.58h-2.375q-1.214 0-1.714 0.929-0.5-0.929-1.714-0.929h-2.321q-0.946 0-1.527 0.58t-0.58 1.527v4.464q0 0.393 0.375 0.393h0.982q0.393 0 0.393-0.393v-4.107q0-0.429 0.241-0.679t0.688-0.25h1.679q0.429 0 0.679 0.25t0.25 0.679v4.107q0 0.393 0.375 0.393h0.964q0.393 0 0.393-0.393v-4.107q0-0.429 0.25-0.679t0.679-0.25h1.732q0.429 0 0.67 0.25t0.241 0.679v4.107q0 0.393 0.393 0.393h0.982q0.375 0 0.375-0.393zM25.179 17.429v-2.75q0-0.946-0.589-1.527t-1.536-0.58h-4.714q-0.946 0-1.536 0.58t-0.589 1.527v7.321q0 0.375 0.393 0.375h0.982q0.375 0 0.375-0.375v-3.214q0.554 0.75 1.679 0.75h3.411q0.946 0 1.536-0.58t0.589-1.527zM27.429 6.429v19.143q0 1.714-1.214 2.929t-2.929 1.214h-19.143q-1.714 0-2.929-1.214t-1.214-2.929v-19.143q0-1.714 1.214-2.929t2.929-1.214h19.143q1.714 0 2.929 1.214t1.214 2.929z"></path>
</symbol>
<symbol id="icon-pinterest-p" viewBox="0 0 23 32">
<path class="path1" d="M0 10.661q0-1.929 0.67-3.634t1.848-2.973 2.714-2.196 3.304-1.393 3.607-0.464q2.821 0 5.25 1.188t3.946 3.455 1.518 5.125q0 1.714-0.339 3.357t-1.071 3.161-1.786 2.67-2.589 1.839-3.375 0.688q-1.214 0-2.411-0.571t-1.714-1.571q-0.179 0.696-0.5 2.009t-0.42 1.696-0.366 1.268-0.464 1.268-0.571 1.116-0.821 1.384-1.107 1.545l-0.25 0.089-0.161-0.179q-0.268-2.804-0.268-3.357 0-1.643 0.384-3.688t1.188-5.134 0.929-3.625q-0.571-1.161-0.571-3.018 0-1.482 0.929-2.786t2.357-1.304q1.089 0 1.696 0.723t0.607 1.83q0 1.179-0.786 3.411t-0.786 3.339q0 1.125 0.804 1.866t1.946 0.741q0.982 0 1.821-0.446t1.402-1.214 1-1.696 0.679-1.973 0.357-1.982 0.116-1.777q0-3.089-1.955-4.813t-5.098-1.723q-3.571 0-5.964 2.313t-2.393 5.866q0 0.786 0.223 1.518t0.482 1.161 0.482 0.813 0.223 0.545q0 0.5-0.268 1.304t-0.661 0.804q-0.036 0-0.304-0.054-0.911-0.268-1.616-1t-1.089-1.688-0.58-1.929-0.196-1.902z"></path>
</symbol>
<symbol id="icon-periscope" viewBox="0 0 24 28">
<path class="path1" d="M12.285,1C6.696,1,2.277,5.643,2.277,11.243c0,5.851,7.77,14.578,10.007,14.578c1.959,0,9.729-8.728,9.729-14.578 C22.015,5.643,17.596,1,12.285,1z M12.317,16.551c-3.473,0-6.152-2.611-6.152-5.664c0-1.292,0.39-2.472,1.065-3.438 c0.206,1.084,1.18,1.906,2.352,1.906c1.322,0,2.393-1.043,2.393-2.333c0-0.832-0.447-1.561-1.119-1.975 c0.467-0.105,0.955-0.161,1.46-0.161c3.133,0,5.81,2.611,5.81,5.998C18.126,13.94,15.449,16.551,12.317,16.551z"></path>
</symbol>
<symbol id="icon-get-pocket" viewBox="0 0 31 32">
<path class="path1" d="M27.946 2.286q1.161 0 1.964 0.813t0.804 1.973v9.268q0 3.143-1.214 6t-3.259 4.911-4.893 3.259-5.973 1.205q-3.143 0-5.991-1.205t-4.902-3.259-3.268-4.911-1.214-6v-9.268q0-1.143 0.821-1.964t1.964-0.821h25.161zM15.375 21.286q0.839 0 1.464-0.589l7.214-6.929q0.661-0.625 0.661-1.518 0-0.875-0.616-1.491t-1.491-0.616q-0.839 0-1.464 0.589l-5.768 5.536-5.768-5.536q-0.625-0.589-1.446-0.589-0.875 0-1.491 0.616t-0.616 1.491q0 0.911 0.643 1.518l7.232 6.929q0.589 0.589 1.446 0.589z"></path>
</symbol>
<symbol id="icon-vimeo" viewBox="0 0 32 32">
<path class="path1" d="M30.518 9.25q-0.179 4.214-5.929 11.625-5.946 7.696-10.036 7.696-2.536 0-4.286-4.696-0.786-2.857-2.357-8.607-1.286-4.679-2.804-4.679-0.321 0-2.268 1.357l-1.375-1.75q0.429-0.375 1.929-1.723t2.321-2.063q2.786-2.464 4.304-2.607 1.696-0.161 2.732 0.991t1.446 3.634q0.786 5.125 1.179 6.661 0.982 4.446 2.143 4.446 0.911 0 2.75-2.875 1.804-2.875 1.946-4.393 0.232-2.482-1.946-2.482-1.018 0-2.161 0.464 2.143-7.018 8.196-6.821 4.482 0.143 4.214 5.821z"></path>
</symbol>
<symbol id="icon-reddit-alien" viewBox="0 0 32 32">
<path class="path1" d="M32 15.107q0 1.036-0.527 1.884t-1.42 1.295q0.214 0.821 0.214 1.714 0 2.768-1.902 5.125t-5.188 3.723-7.143 1.366-7.134-1.366-5.179-3.723-1.902-5.125q0-0.839 0.196-1.679-0.911-0.446-1.464-1.313t-0.554-1.902q0-1.464 1.036-2.509t2.518-1.045q1.518 0 2.589 1.125 3.893-2.714 9.196-2.893l2.071-9.304q0.054-0.232 0.268-0.375t0.464-0.089l6.589 1.446q0.321-0.661 0.964-1.063t1.411-0.402q1.107 0 1.893 0.777t0.786 1.884-0.786 1.893-1.893 0.786-1.884-0.777-0.777-1.884l-5.964-1.321-1.857 8.429q5.357 0.161 9.268 2.857 1.036-1.089 2.554-1.089 1.482 0 2.518 1.045t1.036 2.509zM7.464 18.661q0 1.107 0.777 1.893t1.884 0.786 1.893-0.786 0.786-1.893-0.786-1.884-1.893-0.777q-1.089 0-1.875 0.786t-0.786 1.875zM21.929 25q0.196-0.196 0.196-0.464t-0.196-0.464q-0.179-0.179-0.446-0.179t-0.464 0.179q-0.732 0.75-2.161 1.107t-2.857 0.357-2.857-0.357-2.161-1.107q-0.196-0.179-0.464-0.179t-0.446 0.179q-0.196 0.179-0.196 0.455t0.196 0.473q0.768 0.768 2.116 1.214t2.188 0.527 1.625 0.080 1.625-0.080 2.188-0.527 2.116-1.214zM21.875 21.339q1.107 0 1.884-0.786t0.777-1.893q0-1.089-0.786-1.875t-1.875-0.786q-1.107 0-1.893 0.777t-0.786 1.884 0.786 1.893 1.893 0.786z"></path>
</symbol>
<symbol id="icon-hashtag" viewBox="0 0 32 32">
<path class="path1" d="M17.696 18.286l1.143-4.571h-4.536l-1.143 4.571h4.536zM31.411 9.286l-1 4q-0.125 0.429-0.554 0.429h-5.839l-1.143 4.571h5.554q0.268 0 0.446 0.214 0.179 0.25 0.107 0.5l-1 4q-0.089 0.429-0.554 0.429h-5.839l-1.446 5.857q-0.125 0.429-0.554 0.429h-4q-0.286 0-0.464-0.214-0.161-0.214-0.107-0.5l1.393-5.571h-4.536l-1.446 5.857q-0.125 0.429-0.554 0.429h-4.018q-0.268 0-0.446-0.214-0.161-0.214-0.107-0.5l1.393-5.571h-5.554q-0.268 0-0.446-0.214-0.161-0.214-0.107-0.5l1-4q0.125-0.429 0.554-0.429h5.839l1.143-4.571h-5.554q-0.268 0-0.446-0.214-0.179-0.25-0.107-0.5l1-4q0.089-0.429 0.554-0.429h5.839l1.446-5.857q0.125-0.429 0.571-0.429h4q0.268 0 0.446 0.214 0.161 0.214 0.107 0.5l-1.393 5.571h4.536l1.446-5.857q0.125-0.429 0.571-0.429h4q0.268 0 0.446 0.214 0.161 0.214 0.107 0.5l-1.393 5.571h5.554q0.268 0 0.446 0.214 0.161 0.214 0.107 0.5z"></path>
</symbol>
<symbol id="icon-chain" viewBox="0 0 30 32">
<path class="path1" d="M26 21.714q0-0.714-0.5-1.214l-3.714-3.714q-0.5-0.5-1.214-0.5-0.75 0-1.286 0.571 0.054 0.054 0.339 0.33t0.384 0.384 0.268 0.339 0.232 0.455 0.063 0.491q0 0.714-0.5 1.214t-1.214 0.5q-0.268 0-0.491-0.063t-0.455-0.232-0.339-0.268-0.384-0.384-0.33-0.339q-0.589 0.554-0.589 1.304 0 0.714 0.5 1.214l3.679 3.696q0.482 0.482 1.214 0.482 0.714 0 1.214-0.464l2.625-2.607q0.5-0.5 0.5-1.196zM13.446 9.125q0-0.714-0.5-1.214l-3.679-3.696q-0.5-0.5-1.214-0.5-0.696 0-1.214 0.482l-2.625 2.607q-0.5 0.5-0.5 1.196 0 0.714 0.5 1.214l3.714 3.714q0.482 0.482 1.214 0.482 0.75 0 1.286-0.554-0.054-0.054-0.339-0.33t-0.384-0.384-0.268-0.339-0.232-0.455-0.063-0.491q0-0.714 0.5-1.214t1.214-0.5q0.268 0 0.491 0.063t0.455 0.232 0.339 0.268 0.384 0.384 0.33 0.339q0.589-0.554 0.589-1.304zM29.429 21.714q0 2.143-1.518 3.625l-2.625 2.607q-1.482 1.482-3.625 1.482-2.161 0-3.643-1.518l-3.679-3.696q-1.482-1.482-1.482-3.625 0-2.196 1.571-3.732l-1.571-1.571q-1.536 1.571-3.714 1.571-2.143 0-3.643-1.5l-3.714-3.714q-1.5-1.5-1.5-3.643t1.518-3.625l2.625-2.607q1.482-1.482 3.625-1.482 2.161 0 3.643 1.518l3.679 3.696q1.482 1.482 1.482 3.625 0 2.196-1.571 3.732l1.571 1.571q1.536-1.571 3.714-1.571 2.143 0 3.643 1.5l3.714 3.714q1.5 1.5 1.5 3.643z"></path>
</symbol>
<symbol id="icon-thumb-tack" viewBox="0 0 21 32">
<path class="path1" d="M8.571 15.429v-8q0-0.25-0.161-0.411t-0.411-0.161-0.411 0.161-0.161 0.411v8q0 0.25 0.161 0.411t0.411 0.161 0.411-0.161 0.161-0.411zM20.571 21.714q0 0.464-0.339 0.804t-0.804 0.339h-7.661l-0.911 8.625q-0.036 0.214-0.188 0.366t-0.366 0.152h-0.018q-0.482 0-0.571-0.482l-1.357-8.661h-7.214q-0.464 0-0.804-0.339t-0.339-0.804q0-2.196 1.402-3.955t3.17-1.759v-9.143q-0.929 0-1.607-0.679t-0.679-1.607 0.679-1.607 1.607-0.679h11.429q0.929 0 1.607 0.679t0.679 1.607-0.679 1.607-1.607 0.679v9.143q1.768 0 3.17 1.759t1.402 3.955z"></path>
</symbol>
<symbol id="icon-arrow-left" viewBox="0 0 43 32">
<path class="path1" d="M42.311 14.044c-0.178-0.178-0.533-0.356-0.711-0.356h-33.778l10.311-10.489c0.178-0.178 0.356-0.533 0.356-0.711 0-0.356-0.178-0.533-0.356-0.711l-1.6-1.422c-0.356-0.178-0.533-0.356-0.889-0.356s-0.533 0.178-0.711 0.356l-14.578 14.933c-0.178 0.178-0.356 0.533-0.356 0.711s0.178 0.533 0.356 0.711l14.756 14.933c0 0.178 0.356 0.356 0.533 0.356s0.533-0.178 0.711-0.356l1.6-1.6c0.178-0.178 0.356-0.533 0.356-0.711s-0.178-0.533-0.356-0.711l-10.311-10.489h33.778c0.178 0 0.533-0.178 0.711-0.356 0.356-0.178 0.533-0.356 0.533-0.711v-2.133c0-0.356-0.178-0.711-0.356-0.889z"></path>
</symbol>
<symbol id="icon-arrow-right" viewBox="0 0 43 32">
<path class="path1" d="M0.356 17.956c0.178 0.178 0.533 0.356 0.711 0.356h33.778l-10.311 10.489c-0.178 0.178-0.356 0.533-0.356 0.711 0 0.356 0.178 0.533 0.356 0.711l1.6 1.6c0.178 0.178 0.533 0.356 0.711 0.356s0.533-0.178 0.711-0.356l14.756-14.933c0.178-0.356 0.356-0.711 0.356-0.889s-0.178-0.533-0.356-0.711l-14.756-14.933c0-0.178-0.356-0.356-0.533-0.356s-0.533 0.178-0.711 0.356l-1.6 1.6c-0.178 0.178-0.356 0.533-0.356 0.711s0.178 0.533 0.356 0.711l10.311 10.489h-33.778c-0.178 0-0.533 0.178-0.711 0.356-0.356 0.178-0.533 0.356-0.533 0.711v2.311c0 0.178 0.178 0.533 0.356 0.711z"></path>
</symbol>
<symbol id="icon-play" viewBox="0 0 22 28">
<path d="M21.625 14.484l-20.75 11.531c-0.484 0.266-0.875 0.031-0.875-0.516v-23c0-0.547 0.391-0.781 0.875-0.516l20.75 11.531c0.484 0.266 0.484 0.703 0 0.969z"></path>
</symbol>
<symbol id="icon-pause" viewBox="0 0 24 28">
<path d="M24 3v22c0 0.547-0.453 1-1 1h-8c-0.547 0-1-0.453-1-1v-22c0-0.547 0.453-1 1-1h8c0.547 0 1 0.453 1 1zM10 3v22c0 0.547-0.453 1-1 1h-8c-0.547 0-1-0.453-1-1v-22c0-0.547 0.453-1 1-1h8c0.547 0 1 0.453 1 1z"></path>
</symbol>
</defs>
</svg>
</body>
</html><!-- WP Fastest Cache file was created in 0.14698600769043 seconds, on 15-03-19 6:20:31 -->